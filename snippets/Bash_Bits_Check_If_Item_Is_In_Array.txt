This is a text-only version of the following page on https://raymii.org:
---
Title       : 	Bash Bits: Check if item is in array
Author      : 	Remy van Elst
Date        : 	21-09-2013
URL         : 	https://raymii.org/s/snippets/Bash_Bits_Check_If_Item_Is_In_Array.html
Format      : 	Markdown/HTML
---



Bash Bits are small examples, tips and tutorials for Bash (Scripts). This bash
bit shows you how find out if an array has an item.

<p class="ad"> <a href="https://leafnode.nl">I'm developing an open source monitoring app called  Leaf Node Monitoring, for windows, linux & android. Go check it out!</a><br><br> <a href="https://github.com/sponsors/RaymiiOrg/">Consider sponsoring me on Github. It means the world to me if you show your appreciation and you'll help pay the server costs.</a><br><br> <a href="https://www.digitalocean.com/?refcode=7435ae6b8212">You can also sponsor me by getting a Digital Ocean VPS. With this referral link you'll get $100 credit for 60 days. </a><br><br> </p>


[All Bash Bits can be found using this link][2]

This is a simple function which helps you find out if an (non associative) array
has an item. It allows you to call the function with just the array name, not
${arrayname[@]}. It returns 1 if the item is in the array, and 0 if it is not.

This is the function:

    
    
    in_array() {
        local haystack=${1}[@]
        local needle=${2}
        for i in ${!haystack}; do
            if [[ ${i} == ${needle} ]]; then
                return 0
            fi
        done
        return 1
    }
    

Now we can test it and see that it works:

    
    
    declare -a vpsservers=("vps1" "vps2" "vps3" "vps4" "vps6");
    
    in_array vpsservers vps3 && echo "found" || echo "not found"
    in_array vpsservers vps5 && echo "found" || echo "not found"
    

Should return:

    
    
    found
    not found
    

Now a usage example. Lets say you have a script which requires a specific
version of Ubuntu and does not work on other versions of ubuntu. You can use
this to check if the version of ubuntu is supported with this function.

    
    
    declare -a supported_ubuntu=("Ubuntu 10.04.1 LTS" "Ubuntu 10.04.3 LTS" "Ubuntu 10.04.4 LTS" "Ubuntu 10.10" "Ubuntu 12.04 LTS" "Ubuntu 12.04.1 LTS")
    
    if [ -f "/etc/lsb-release" ]; then
        running_ubuntu=`awk -F "\"" '/DESCRIPTION/ { print $2 }' /etc/lsb-release`
        if in_array supported_ubuntu "${running_ubuntu}"; then
            echo "${running_ubuntu} is supported."
        else
            echo "${running_ubuntu} is not supported. Run ${0} again with the -f option to ignore this warning."
            exit 1
        fi
    fi
    

Do note that forcing a specific version of something is not a best practice,
however sometimes you are forced to.

   [1]: https://www.digitalocean.com/?refcode=7435ae6b8212
   [2]: https://raymii.org/s/tags/bash-bits.html

---

License:
All the text on this website is free as in freedom unless stated otherwise. 
This means you can use it in any way you want, you can copy it, change it 
the way you like and republish it, as long as you release the (modified) 
content under the same license to give others the same freedoms you've got 
and place my name and a link to this site with the article as source.

This site uses Google Analytics for statistics and Google Adwords for 
advertisements. You are tracked and Google knows everything about you. 
Use an adblocker like ublock-origin if you don't want it.

All the code on this website is licensed under the GNU GPL v3 license 
unless already licensed under a license which does not allows this form 
of licensing or if another license is stated on that page / in that software:

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

Just to be clear, the information on this website is for meant for educational 
purposes and you use it at your own risk. I do not take responsibility if you 
screw something up. Use common sense, do not 'rm -rf /' as root for example. 
If you have any questions then do not hesitate to contact me.

See https://raymii.org/s/static/About.html for details.