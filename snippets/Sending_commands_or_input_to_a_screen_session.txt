This is a text-only version of the following page on https://raymii.org:
---
Title       : 	Send commands or input to a detached screen session
Author      : 	Remy van Elst
Date        : 	02-10-2019
URL         : 	https://raymii.org/s/snippets/Sending_commands_or_input_to_a_screen_session.html
Format      : 	Markdown/HTML
---



This snippet will show you how to send commands to a running screen session. 
This includes actual shell commands or keyboard input, as well as screen
commands, for example to set a logfile.

As I'm writing this article, I notice that [today screen 4.7.0 is released][3].

<p class="ad"> <a href="https://leafnode.nl">I'm developing an open source monitoring app called  Leaf Node Monitoring, for windows, linux & android. Go check it out!</a><br><br> <a href="https://github.com/sponsors/RaymiiOrg/">Consider sponsoring me on Github. It means the world to me if you show your appreciation and you'll help pay the server costs.</a><br><br> <a href="https://www.digitalocean.com/?refcode=7435ae6b8212">You can also sponsor me by getting a Digital Ocean VPS. With this referral link you'll get $100 credit for 60 days. </a><br><br> </p>


### screen commands vs shell commands (input)

For my [recent article][1] on serial port data I figured out how to send a command
to a running but detached screen session. This was a screen command, not a shell command.

screen commands are the same things as what you would put in a `.screenrc` 
file or inside a screen session via `CTRL+A :`. For example, the command

    logfile filename.txt

tells screen to log the output to a text file named `filename.txt`. 

Shell commands are things you type in your terminal. Both commands like `ls`
or keyboard shortcuts like `CTRL+C`. 

You can start a detached screen session with the following command:

    screen -dmS sessionName [command-to-run]

With the command 

    screen -ls

you can view all screen sessions and with either `screen -r` or `screen -x` you 
can reattach to a session.

### Sending commands to screen

As explained above, there is a difference between shell commands and screen commands.
screen has the `-X` flag which allows you to send a (screen) command to a session.

To send a screen command to a session:

    screen -S sessionName -p 0 -X screen command

The `-p 0` flag is for the window inside screen. If you have created multiple 
windows (`CTRL+A c`) you can specify the number. With `CTRL+A [0-9]` you can 
directly go to that window inside screen.

For screen commands, after the `-X` flag you don't need quotes. So for the logfile
command:

    screen -S sessionName -p 0 -X logfile filename.txt


For shell commands or keyboard input, we need to use the screen command `stuff`.

If you have a running screen session and you want to send the `ls` command:

    screen -S sessionName -p 0 -X stuff "ls^M"

After the `stuff` you do need quotes. The `^M` is the keycode the `ENTER` key 
sends to the terminal. If you omit it, screen will just type `ls` onto your terminal
but not send the `ENTER` key afterwards.

To send a `CTRL+C` to a session (e.g. to stop a running interactive process):

    screen -S sessionName -p 0 -X stuff "^C"

If you need to find out what keycode a specific key sends, in bash you can
press `CTRL+V` and then the special key. The `PGDOWN` key for example:

    ^[[6~

More documentation on the `stuff` command [can be found here][2].

[1]: /s/blog/Get_serial_port_data_on_the_web_with_live_updating.html
[2]: https://www.gnu.org/software/screen/manual/html_node/Paste.html#Paste
[3]: https://lists.gnu.org/archive/html/screen-users/2019-10/msg00000.html

---

License:
All the text on this website is free as in freedom unless stated otherwise. 
This means you can use it in any way you want, you can copy it, change it 
the way you like and republish it, as long as you release the (modified) 
content under the same license to give others the same freedoms you've got 
and place my name and a link to this site with the article as source.

This site uses Google Analytics for statistics and Google Adwords for 
advertisements. You are tracked and Google knows everything about you. 
Use an adblocker like ublock-origin if you don't want it.

All the code on this website is licensed under the GNU GPL v3 license 
unless already licensed under a license which does not allows this form 
of licensing or if another license is stated on that page / in that software:

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

Just to be clear, the information on this website is for meant for educational 
purposes and you use it at your own risk. I do not take responsibility if you 
screw something up. Use common sense, do not 'rm -rf /' as root for example. 
If you have any questions then do not hesitate to contact me.

See https://raymii.org/s/static/About.html for details.