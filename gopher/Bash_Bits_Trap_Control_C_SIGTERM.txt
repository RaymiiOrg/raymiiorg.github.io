This is a text-only version of the following page on https://raymii.org:
---
Title       : 	Bash Bits: Trap Control C (SIGTERM)
Author      : 	Remy van Elst
Date        : 	14-09-2013
URL         : 	https://raymii.org/s/snippets/Bash_Bits_Trap_Control_C_SIGTERM.html
Format      : 	Markdown/HTML
---



Bash Bits are small examples and tips for Bash Scripts. This bash bit shows you
how to capture a Control C signal in a bash script, for example, to clean up any
temp or pid files when your script is killed or closed.

<p class="ad"> <a href="https://leafnode.nl">I'm developing a desktop monitoring app,  Leaf Node Monitoring, open source, but paid. For Windows, Linux & Android, go check it out.</a><br><br> <a href="https://github.com/sponsors/RaymiiOrg/">Consider sponsoring me on Github. It means the world to me if you show your appreciation and you'll help pay the server costs.</a><br><br> <a href="https://www.digitalocean.com/?refcode=7435ae6b8212">You can also sponsor me by getting a Digital Ocean VPS. With this referral link you'll get $100 credit for 60 days. </a><br><br> </p>


[All Bash Bits can be found using this link][2]

Exit signals are sent when for example you use `pkill` or `killall`. If you do
not specify a number, a `SIGTERM` is sent. If you for example do a `pkill -9
firefox`, it sents a `SIGKILL`. If you have a bash script which places a temp
file, or a pid file, you might want to clean that up before you exit.

We create a function to catch the exit signals first, then we bind this function
to the exit signals.

This is the `control_c` function:

    
    
    function control_c {
        echo -en "\n## Caught SIGINT; Clean up and Exit \n"
        rm /var/run/myscript.pid
        exit $?
    }
    

Then we use the trap command to bind the function to an exit signal. Here I bind
it to both `SIGINT` and `SIGTERM`:

    
    
    trap control_c SIGINT
    trap control_c SIGTERM
    

Now when the script gets killed or you do a control c, the script will remove
it's pid file. You can put anything in the `control_c` function, I mostly use it
for cleanup.

[Read more about Signals here on The Linux Documentation Project][3]

   [1]: https://www.digitalocean.com/?refcode=7435ae6b8212
   [2]: https://raymii.org/s/tags/bash-bits.html
   [3]: http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_12_01.html

---

License:
All the text on this website is free as in freedom unless stated otherwise. 
This means you can use it in any way you want, you can copy it, change it 
the way you like and republish it, as long as you release the (modified) 
content under the same license to give others the same freedoms you've got 
and place my name and a link to this site with the article as source.

This site uses Google Analytics for statistics and Google Adwords for 
advertisements. You are tracked and Google knows everything about you. 
Use an adblocker like ublock-origin if you don't want it.

All the code on this website is licensed under the GNU GPL v3 license 
unless already licensed under a license which does not allows this form 
of licensing or if another license is stated on that page / in that software:

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

Just to be clear, the information on this website is for meant for educational 
purposes and you use it at your own risk. I do not take responsibility if you 
screw something up. Use common sense, do not 'rm -rf /' as root for example. 
If you have any questions then do not hesitate to contact me.

See https://raymii.org/s/static/About.html for details.