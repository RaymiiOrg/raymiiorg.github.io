This is a text-only version of the following page on https://raymii.org:
---
Title       : 	Shared Git repository over ssh for multiple users
Author      : 	Remy van Elst
Date        : 	05-01-2015
URL         : 	https://raymii.org/s/tutorials/Shared_Git_repository_via_ssh_for_multiple_users.html
Format      : 	Markdown/HTML
---



This tutorial will show you how to set up a shared git repo with multiple
accounts over ssh. Only ssh, not gitolite or any other software. This is usefull
if you have a small team of people that don't often need access to the repo and
don't want something like github or bitbucket. With this you can use existing
infrastructure.

<p class="ad"> <a href="https://leafnode.nl">I'm developing a desktop monitoring app,  Leaf Node Monitoring, open source, but paid. For Windows, Linux & Android, go check it out.</a><br><br> <a href="https://github.com/sponsors/RaymiiOrg/">Consider sponsoring me on Github. It means the world to me if you show your appreciation and you'll help pay the server costs.</a><br><br> <a href="https://www.digitalocean.com/?refcode=7435ae6b8212">You can also sponsor me by getting a Digital Ocean VPS. With this referral link you'll get $100 credit for 60 days. </a><br><br> </p>


I have used this for a sysadmin team which had a few scripts scattered.

### Folders and Permissions

First set up a new group for the users of the repository. You can use the
groupadd command but I find it easier to edit `/etc/group` and add a line line
this:

    
    
    gitusers:x:2222:user1,user2,user3,user4
    

Do note that all the users you add above should have an account on the system.
(`adduser user/useradd user`)

Now create a folder to house the repo's:

    
    
    mkdir -p /var/git/repository1
    

Then change the group permissions on that folder:

    
    
    chgrp gitusers /var/git/repository1
    chmod g+ws /var/git/repository1
    

### Repository

We can now create the repository. Navigate to the folder and initialize the
repository:

    
    
    cd /var/git/repository
    git init --bare --shared=group
    

That's it. Now you can clone, pull, push and commit the repo like normal:

    
    
    git clone git+ssh://user1@gitserver/var/git/repository1
    

### Script

A simple script which makes the above easier. This assuming the group is
`gitusers` and the root path is `/var/git/`.

    
    
    #!/bin/bash
    GITGROUP="gitusers"
    REPOPATH="/var/git"
    if [[ -z "$1" ]]; then
        echo "You must specify a repo name"
        echo "./$0 repo_name"
        exit 1
    fi
    mkdir "${PATH}/$1"
    chgrp "${GITGROUP}" "${PATH}/$1"
    chmod 2775 "${PATH}/$1"
    pushd "${PATH}/$1"
    git init --bare --shared=group
    popd
    echo "Created repo $1."
    echo "Clone URL: git+ssh://$(hostname -f)${PATH}/$1"
    

If you need to trigger a Jenkins build after a commit you can add the following
[`post-receive` hook][2].

   [1]: https://www.digitalocean.com/?refcode=7435ae6b8212
   [2]: https://github.com/mika/jenkins-debian-glue/blob/master/git/post-receive

---

License:
All the text on this website is free as in freedom unless stated otherwise. 
This means you can use it in any way you want, you can copy it, change it 
the way you like and republish it, as long as you release the (modified) 
content under the same license to give others the same freedoms you've got 
and place my name and a link to this site with the article as source.

This site uses Google Analytics for statistics and Google Adwords for 
advertisements. You are tracked and Google knows everything about you. 
Use an adblocker like ublock-origin if you don't want it.

All the code on this website is licensed under the GNU GPL v3 license 
unless already licensed under a license which does not allows this form 
of licensing or if another license is stated on that page / in that software:

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

Just to be clear, the information on this website is for meant for educational 
purposes and you use it at your own risk. I do not take responsibility if you 
screw something up. Use common sense, do not 'rm -rf /' as root for example. 
If you have any questions then do not hesitate to contact me.

See https://raymii.org/s/static/About.html for details.