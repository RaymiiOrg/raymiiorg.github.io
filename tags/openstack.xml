<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <?xml-stylesheet href="/s/inc/rss.xsl" type="text/xsl"?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag openstack on Raymii.org</title> 
            <link>https://raymii.org/s/tags/openstack.xml</link> 
            <description>RSS feed for tag openstack on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/openstack.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>Linux on Microsoft Azure? Disable this built-in root-access backdoor (wa-linux-agent)</title> 
                <link>https://raymii.org/s/blog/Linux_on_Microsoft_Azure_Disable_this_built_in_root_access_backdoor.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/Linux_on_Microsoft_Azure_Disable_this_built_in_root_access_backdoor.html</guid>
                <description>Are you running Linux on Microsoft Azure? Then by default anyone with access to your Azure portal can run commands as root in your VM, reset SSH keys, user passwords and SSH configuration. This article explains what the backdoor (wa-linux-agent) is, what it is meant to do, how it can be disabled and removed and what the implications are. OpenStack/QEMU also have an agent/backdoor which is covered in this article as well.</description> 
                <pubDate>Wed, 22 Aug 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 22 Aug 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Windows 7 installer on a KVM Linux VPS (Windows on Digital Ocean)</title> 
                <link>https://raymii.org/s/tutorials/Windows_7_Installer_on_KVM_Linux_VPS_Digital_Ocean.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Windows_7_Installer_on_KVM_Linux_VPS_Digital_Ocean.html</guid>
                <description>For fun I wanted to install Windows 7 on a KVM Linux VPS (on [Digital Ocean) but it should work for any KVM or XEN-HVM VPS with console access). I was experimenting with Grub2 and ISO booting, since grub2 can natively boot a linux ISO. For Windows this is not possible, the installer needs to be extracted on a FAT32 partition from which you boot. On a normal system I would repartition the disk using a live CD, but on a VPS where an ISO cannot be booted this is troublesome. If I could boot from an ISO I would use that to install Windows, but where's the fun in that? I had to figure out how to shrink an EXT4 filesystem from a running Ubuntu VPS, which is possible, however very risky, with pivot_root. Next the partiton table can be converted to MBR, the partition can be resized, a FAT32 partiton and filesystem can be created, the Windows Installer files copied onto that, some Grub config and a reboot later, you're in the Windows 7 Installer.</description> 
                <pubDate>Sun, 01 Jul 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 01 Jul 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenStack nova get-password, set-password and post encrypted password to metadata service</title> 
                <link>https://raymii.org/s/tutorials/OpenStack_nova_get_-_password_set_-_password_and_post_encrypted_password_to_metadata_service.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/OpenStack_nova_get_-_password_set_-_password_and_post_encrypted_password_to_metadata_service.html</guid>
                <description>When you create images for an OpenStack Cloud you want to use 'cloud' features. Fancy term for automatic resizing of your instance disk, adding an SSH key, (re)setting passwords and executing scripts on first boot to configure your instance further. OpenStack provides the metadata service for instances, which supplies information for the instance, like its public IP, SSH public key that was provided and vendor or user provided data like scripts or information. The OpenStack metadata service allows an instance to post data to an endpoint wich can be retreived with the 'nova get-password' command. It is meant to be an encrypted password (with the public SSH key) but it can be any plain text as well and it doesn't have to be the root password. In this guide I'll go over the scripts I use inside linux images to post a password to the metadata service and the 'nova' commands such as 'set-password' and 'get-password'. That includes decrypting a password with an SSH key that is password-protected (Horizon and nova don't support that) and the 'nova set-password' command, which sets the root password inside an instance when it has the 'qemu-guest-agent' installed and running.</description> 
                <pubDate>Sun, 25 Mar 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 25 Mar 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Backup OpenStack object store or S3 with rclone</title> 
                <link>https://raymii.org/s/tutorials/Backup_or_Sync_OpenStack_object_store_or_other_cloud_storage_with_rclone.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Backup_or_Sync_OpenStack_object_store_or_other_cloud_storage_with_rclone.html</guid>
                <description>This is a guide that shows you how to make backups of an object storage service like OpenStack swift or S3. Most object store services save data on multiple servers, but deleting a file also deletes it from all servers. Tools like rsync or scp are not compatible most of the time with these services, unless there is a proxy that translates the object store protocol to something like SFTP. rclone is an rsync-like, command line tool that syncs files and directories from cloud storage services like OpenStack swift, Amazon S3, Google cloud/drive, dropbox and more. By having a local backup of the contents of your cloud object store you can restore from accidental deletion or easily migrate between cloud providers. Syncing between cloud providers is also possible. It can also help to lower the RTO (recovery time objective) and backups are just always a good thing to have and test.</description> 
                <pubDate>Thu, 17 Aug 2017 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 17 Aug 2017 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Openstack Horizon, remove the loading modal with uBlock Origin</title> 
                <link>https://raymii.org/s/articles/Openstack_Horizon_remove_the_loading_modal_with_uBlock_origin.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Openstack_Horizon_remove_the_loading_modal_with_uBlock_origin.html</guid>
                <description>The OpenStack dashboard, Horizon, is a great piece of software to manage your OpenStack resources via the web. However, it has, in my opinion, a very big usability issue. The loading dialog that appears after you click a link. It blocks the entire page and all other links. So, whenever I click, I have to wait three to five seconds before I can do anything else. Clicked the wrong menu item? Sucks to be you, here have some loading. Clicked a link and quickly want to open something in a new tab while the page is still loading? Nope, not today. It's not that browsers have had a function to show that a page is loading, no, of course, the loading indication that has been there forever is not good enough. Let's re-invent the wheel and significantly impact the user experience. With two rules in uBlock Origin this loading modal is removed and you can work normally again in Horizon</description> 
                <pubDate>Thu, 25 May 2017 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 25 May 2017 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Burn in testing for new Hypervisor and Storage server hardware</title> 
                <link>https://raymii.org/s/blog/Burn_in_testing_for_Hypervisor_and_Storage_servers.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/Burn_in_testing_for_Hypervisor_and_Storage_servers.html</guid>
                <description>This article talks over how and why to do burn in testing on hypervisor and storage servers. I work at a fairly large cloud provider, where we have a lot of hardware. Think thousands of hardware servers and multiple ten thousand harddisks. It's all technology, so stuff breaks, and at our scale, stuff breaks often. One of my pet projects for the last period has been to automate the burn-in testing for our virtualisation servers and the storage machines. We run OpenStack and use KVM for the hypervisors and a combination of different storage technology for the volume storage servers. Before they go in production, they are tested for a few days with very intensive automated usage. We've noticed that they either fail then, or not. This saves us from having to migrate customers off of new production servers just a few days after they've gone live. The testing is of course all automated.</description> 
                <pubDate>Sat, 08 Apr 2017 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 08 Apr 2017 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Openstack Soft Delete - recover deleted instances</title> 
                <link>https://raymii.org/s/articles/Openstack_Soft_Delete_-_recover_deleted_instances.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Openstack_Soft_Delete_-_recover_deleted_instances.html</guid>
                <description>This article contains both an end user and OpenStack administrator guide to set up and use soft_delete with OpenStack Nova. If an instance is deleted with nova delete, it's gone right away. If soft_delete is enabled, it will be queued for deletion for a set amount of time, allowing end-users and administrators to restore the instance with the nova restore command. This can save your ass (or an end-users bottom) if the wrong instance is removed. Setup is simple, just one variable in nova.conf. There are some caveats we'll also discuss here. </description> 
                <pubDate>Sat, 18 Mar 2017 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 18 Mar 2017 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenStack: Quick and automatic instance snapshot backup and restore (and before an apt upgrade) with nova backup</title> 
                <link>https://raymii.org/s/tutorials/OpenStack_Quick_and_automatic_instance_snapshot_backups.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/OpenStack_Quick_and_automatic_instance_snapshot_backups.html</guid>
                <description>This is a guide that shows you how to create OpenStack instance snapshots automatically, quick and easy. This allows you to create a full backup of the entire instance. This guide has a script that makes creating snapshots from an OpenStack VM automatic via cron. The script uses the `nova backup` function, therefore it also has retention and rotation of the backups. It also features an option to create a snapshot before every apt action, upgrade/install/remove. This way, you can easily restore from the snapshot when something goes wrong after an upgrade. Snapshots are very usefull to restore the entire instance to an earlier state. Do note that this is not the same as a file based backup, you can't select a few files to restore, it's all or nothing.</description> 
                <pubDate>Tue, 20 Dec 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 20 Dec 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Build a FreeBSD 11.0-release Openstack Image with bsd-cloudinit</title> 
                <link>https://raymii.org/s/tutorials/FreeBSD_11.0-release_Openstack_Image.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/FreeBSD_11.0-release_Openstack_Image.html</guid>
                <description>We are going to prepare a FreeBSD image for Openstack deployment. We do this by creating a FreeBSD 11.0-RELEASE instance, installing it and converting it using bsd-cloudinit. We'll use the CloudVPS public Openstack cloud for this. We'll be using the Openstack command line tools, like nova, cinder and glance. A FreeBSD image with Cloud Init will automatically resize the disk to the size of the flavor and it will add your SSH key right at boot. You can use Cloud Config to execute a script at first boott, for example, to bootstrap your system into Puppet or Ansible. If you use Ansible to manage OpenStack instances you can integrate it without manually logging in or doing anything manually.</description> 
                <pubDate>Mon, 14 Nov 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 14 Nov 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible - Create OpenStack servers with Ansible 2.0 and the os_server module and a dynamic inventory</title> 
                <link>https://raymii.org/s/tutorials/Ansible_-_create_OpenStack_servers_with_os_server.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_-_create_OpenStack_servers_with_os_server.html</guid>
                <description>I regularly deploy clusters and single servers on OpenStack with Ansible. However, Ansible 2.0 comes with new OpenStack modules my playbooks still used the old ones. I reserved some time to convert these playbooks to the new modules and ansible 2. This article shows a very simple example, it creates three servers in OpenStack and adds them to different hostgroups based on variables. For example, to create one loadbalancer and two appservers and run specific playbooks on those hosts based on their role.</description> 
                <pubDate>Sat, 10 Sep 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 10 Sep 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Build a FreeBSD 10.3-release Openstack Image with bsd-cloudinit</title> 
                <link>https://raymii.org/s/tutorials/FreeBSD_10.3-release_Openstack_Image.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/FreeBSD_10.3-release_Openstack_Image.html</guid>
                <description>We are going to prepare a FreeBSD image for Openstack deployment. We do this by creating a FreeBSD 10.3-RELEASE instance, installing it and converting it using bsd-cloudinit. We'll use the CloudVPS public Openstack cloud for this. We'll be using the Openstack command line tools, like nova, cinder and glance.</description> 
                <pubDate>Wed, 27 Apr 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 27 Apr 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Openstack - (Manually) migrating (KVM) Nova compute virtual machines</title> 
                <link>https://raymii.org/s/articles/Openstack_-_(Manually)_migrating_(KVM)_Nova_Compute_Virtual_Machines.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Openstack_-_(Manually)_migrating_(KVM)_Nova_Compute_Virtual_Machines.html</guid>
                <description>This guide shows you how to migrate KVM virtual machines with the  Openstack Nova compute service, either manually or with the Openstack tooling. Openstack provides a few different ways to migrate virtual machines from one compute node to another. Each option has different requirements and restrictions, for example, you can't live-migrate without shared storage. You can't live-migrate if you have a configdrive enabled. You can't select the target host if you use the nova migrate (non-live) command etc. This article describes the most common migration scenario's including live and manual migration using native linux tools.</description> 
                <pubDate>Sat, 13 Jun 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 13 Jun 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Automating Openstack with cloud init run a script on VM's first boot</title> 
                <link>https://raymii.org/s/tutorials/Automating_Openstack_with_Cloud_init_run_a_script_on_VMs_first_boot.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Automating_Openstack_with_Cloud_init_run_a_script_on_VMs_first_boot.html</guid>
                <description>This tutorial will show you how to create a VM in Openstack and execute a script at the first boot using cloud-init's user-data feature. This way you can eliminate some more manual labor and keep a small base image, instead of requiring all kinds of specific images for specific tasks. This tutorial will also give you a few example scripts to use with cloud-init and to create Openstack virtual machines from the command line. </description> 
                <pubDate>Wed, 11 Mar 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 11 Mar 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Openstack Glance Image Download, download Openstack images</title> 
                <link>https://raymii.org/s/tutorials/Openstack_Glance_Image_Download.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Openstack_Glance_Image_Download.html</guid>
                <description>This guide shows you how download Openstack Images to your local machine using the command line Glance client. You can use this, for example, to download a copy of an image created from a VM, or to download the images your Openstack provider provides and adapt those.</description> 
                <pubDate>Wed, 25 Feb 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 25 Feb 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Installing Virtual Machines with virt-install, plus copy pastable distro install one-liners</title> 
                <link>https://raymii.org/s/articles/virt-install_introduction_and_copy_paste_distro_install_commands.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/virt-install_introduction_and_copy_paste_distro_install_commands.html</guid>
                <description>virt-install is a command line tool for creating new KVM , Xen or Linux container guests using the libvirt hypervisor management library. It allows you to create a VM and start an installation from the command line. This article has a few copy pastable getting started examples for different distro's.</description> 
                <pubDate>Sun, 08 Feb 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 08 Feb 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Fix inconsistent Openstack volumes and instances from Cinder and Nova via the database</title> 
                <link>https://raymii.org/s/articles/Fix_inconsistent_Openstack_volumes_and_instances_from_Cinder_and_Nova_via_the_database.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Fix_inconsistent_Openstack_volumes_and_instances_from_Cinder_and_Nova_via_the_database.html</guid>
                <description>When running Openstack, sometimes the state of a volume  or an instance can be inconsistent on the cluster. Nova might find a volume attached while Cinder says the volume is detached or otherwise. Sometimes a volume deletion hangs, or a detach does not work. If you've found and fixed the underlying issue (lvm, iscsi, ceph, nfs etc...) you need to bring the database up to date with the new consistent state. Most of the time a reset-state works, sometimes you need to manually edit the database to correct the state. These snippets show you how.</description> 
                <pubDate>Mon, 22 Dec 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 22 Dec 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Openstack Affinity Groups, make sure instances are on the same or different compute hypervisor hosts</title> 
                <link>https://raymii.org/s/articles/Openstack_Affinity_Groups-make-sure-instances-are-on-the-same-or-a-different-hypervisor-host.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Openstack_Affinity_Groups-make-sure-instances-are-on-the-same-or-a-different-hypervisor-host.html</guid>
                <description>This guide shows you how to use Openstack Affinity groups. Affinity or Anti-Affinity groups allow you to make sure instances (VM/VPS) are on the same hypervisor host or on a different one. There are cases when you want two instances on different compute nodes, for example, when they are clustered servers like a load balancer or a database master-master setup. All VMs in each Affinity group are hosted in the same hypervisor, while no two VMs of a same Anti-Affinity group are hosted in the same hypervisor.</description> 
                <pubDate>Sat, 29 Nov 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 29 Nov 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Build a FreeBSD 10.1-release Openstack Image with bsd-cloudinit</title> 
                <link>https://raymii.org/s/tutorials/FreeBSD_10.1-release_Openstack_Image.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/FreeBSD_10.1-release_Openstack_Image.html</guid>
                <description>We are going to prepare a FreeBSD image for Openstack deployment. We do this by creating a FreeBSD 10.1-RELEASE instance, installing it and converting it using bsd-cloudinit. We'll use the CloudVPS public Openstack cloud for this. We'll be using the Openstack command line tools, like nova, cinder and glance.</description> 
                <pubDate>Sun, 23 Nov 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 23 Nov 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Building HA Clusters with Ansible and Openstack</title> 
                <link>https://raymii.org/s/articles/Building_HA_Clusters_With_Ansible_and_Openstack.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Building_HA_Clusters_With_Ansible_and_Openstack.html</guid>
                <description>This is an extensive guide on building high available clusters with Ansible and Openstack. We'll build a Highly available cluster consisting out of two load balancers, two database servers and two application servers running a simple wordpress site. This is all done with Ansible, the cluster nodes are all on Openstack. Ansible is a super awesome orchestration tool and Openstack is a big buzzword filled software suite for datacenter virtualization.</description> 
                <pubDate>Fri, 25 Jul 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 25 Jul 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Build a FreeBSD 10.0-release Openstack Image with bsd-cloudinit</title> 
                <link>https://raymii.org/s/tutorials/FreeBSD_10.0-release_Openstack_Image.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/FreeBSD_10.0-release_Openstack_Image.html</guid>
                <description>We are going to prepare a FreeBSD image for Openstack deployment. We do this by creating a FreeBSD 10.0-RELEASE instance, installing it and converting it using bsd-cloudinit. We'll use the CloudVPS public Openstack cloud for this. We'll be using the Openstack command line tools, like nova, cinder and glance. This tutorial is more a collection of notes than what you are used of me, it has less explanation and such, just right on steps to get started.</description> 
                <pubDate>Wed, 11 Jun 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 11 Jun 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Openstack Horizon installation with SSL on Ubuntu</title> 
                <link>https://raymii.org/s/tutorials/Openstack-Set-Up-Horizon-Dashboard-on-Ubuntu.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Openstack-Set-Up-Horizon-Dashboard-on-Ubuntu.html</guid>
                <description>This is a guide on installing the Openstack Horizon (icehouse) dashboard on Ubuntu 12.04 or 14.04, including SSL setup. It features nice screenshots and even an Ansible playbook to automate it all.</description> 
                <pubDate>Thu, 29 May 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 29 May 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Openstack Swift Objectstore Access via FTP</title> 
                <link>https://raymii.org/s/tutorials/Openstack-Swift-Objectstore-FTP-Access.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Openstack-Swift-Objectstore-FTP-Access.html</guid>
                <description>This is a guide on accessing the Openstack Swift Object Storage system using an FTP client. Openstack Swift has a beautiful API which you can program to. However, sometimes it is handy to quickly be able to access your Swift/Objectstore data without programming around it. We will use ftp-cloudfs to do this. There is also Softlayers swftp, but that does not support Keystone Authentication (2.0). ftp-cloudfs does support this. The OS X Cyberduck FTP client also has Openstack Swift support, however that is a native implementation, not using FTP. With ftp-cloudfs we can use any ftp client, from Filezilla to midnight commander.</description> 
                <pubDate>Sun, 25 May 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 25 May 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Encrypted Duplicity Backups to Openstack Swift Objectstore</title> 
                <link>https://raymii.org/s/tutorials/Encrypted_Duplicity_Backups_to_Openstack_Swift_Objectstore.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Encrypted_Duplicity_Backups_to_Openstack_Swift_Objectstore.html</guid>
                <description>This is a guide on backing up your data to an Openstack Swift (Objectstore) instance using Duplicity. It provides encrypted backups using gpg so that you can safely use any public cloud storage to store them. This tutorial is for Ubuntu and CentOS and includes initial setup plus a script to automate it all. We will be using the Dutch provider CloudVPS, which is a non american company, so your data is more safe than it is with a provider that is vulnerable to the patriot act. Although your data is already encrypted with GPG, you can never be to sure. CloudVPS provides 10GB free ObjectStore, if you have VPS with them, the data is stored on at least 3 machines in 3 locations and they have a boatload of certifications.</description> 
                <pubDate>Mon, 19 May 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 19 May 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
        </channel>
    </rss>
    
    