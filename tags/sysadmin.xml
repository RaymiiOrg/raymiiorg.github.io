<?xml version="1.0" ?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag sysadmin on Raymii.org</title> 
            <link>https://raymii.org/s/tags/sysadmin.xml</link> 
            <description>RSS feed for tag sysadmin on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/sysadmin.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>Proxmox VE 7 Corosync QDevice in a Docker container</title> 
                <link>https://raymii.org/s/tutorials/Proxmox_VE_7_Corosync_QDevice_in_Docker.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Proxmox_VE_7_Corosync_QDevice_in_Docker.html</guid>
                <description>At home I have a 2 node Proxmox VE cluster consisting of 2 HP EliteDesk Mini machines, both running with 16 GB RAM and both an NVMe and SATA SSD with ZFS on root (256 GB). It's small enough (physically) and is just enough for my homelab needs specs wise. Proxmox VE has support for clustering. For a cluster (in any sense of the word), you need at least 3 nodes, otherwise there is no quorum. Corosync, the cluster software used by Proxmox, supports an external Quorum device. This is a small piece of software running on a third node which provides an extra vote for the quorum. In my case I wanted to run this on my NAS, since (physical) space is a premium. The NAS supports Docker, this guide explains how to run the QDevice for Proxmox VE 7 in a Docker container. There is a qdevice Docker image on the Docker hub but that guide does not work for Proxmox VE 7 and requires a lot of manual setup. Using my method involves a lot less steps, since you're basically running an extra debian VPS (a container with systemd and openssh).</description> 
                <pubDate>Sun, 17 Apr 2022 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 17 Apr 2022 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Selling my own GPL software, part 1: a lot of hurdles</title> 
                <link>https://raymii.org/s/blog/Selling_GPL_Software_part_1_lots_of_hurdles.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/Selling_GPL_Software_part_1_lots_of_hurdles.html</guid>
                <description>For as long as I can remember I've got this dream of a passive income software project. At first I thought of it as a hosted service, probably something monitoring related, or high-available cloud hosting-ish. That's the kind of stuff a sysadmin dreams of.&lt;br&gt;&lt;br&gt;
Now that I'm a developer for a couple of years, exposed to a few different languages, design patterns and software architectures, that idea is still lingering around, but no longer focused on a hosted piece of software. The web is just too fast paced, bloated and way too much work compared to a piece of cross platform software.&lt;br&gt;&lt;br&gt;
In my spare time I've been chugging along on a piece of software, which I'm contemplating selling. In my case the commercial aspect is made more difficult because I also want to release the software with a GPL license.&lt;br&gt;&lt;br&gt;
This post describes the initial hurdles I'm encountering, next to just programming the software.</description> 
                <pubDate>Fri, 24 Dec 2021 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 24 Dec 2021 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>The yearly backup restore test</title> 
                <link>https://raymii.org/s/blog/Yearly_Backup_Restore_test.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/Yearly_Backup_Restore_test.html</guid>
                <description>In my calendar there is a yearly recurring item named 'backup restore test'. This is an article on my backup scheme and the yearly restore test, covering all aspects, such as data validation, backup scheme, time and cost involved.
I started doing personal restore tests each year around 2012, when I did them for my first job. At work back then, the restore test was monthly, for my own backups I decided that yearly was okay enough, since the backup scheme, software and provider do not change. I'm using Azure cold storage for my (locally encrypted) personal backups, since it's both cheap and supported by my local NAS.

Have you done your backup restore test recently?</description> 
                <pubDate>Fri, 05 Nov 2021 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 05 Nov 2021 00:00:00 GMT</lastBuildDate>
            </item>
    
        </channel>
    </rss>
    
    