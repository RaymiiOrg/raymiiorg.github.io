<?xml version="1.0" ?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag openssl on Raymii.org</title> 
            <link>https://raymii.org/s/tags/openssl.xml</link> 
            <description>RSS feed for tag openssl on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/openssl.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>Get started with the Nitrokey HSM or SmartCard-HSM</title> 
                <link>https://raymii.org/s/articles/Get_Started_With_The_Nitrokey_HSM.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Get_Started_With_The_Nitrokey_HSM.html</guid>
                <description>This is a guide to get started with the Nitrokey HSM (or SmartCard-HSM). It covers what a HSM is and what it can be used for. It also goes over software installation and initializing the device, including backups of the device and the keys. Finally we do some actual crypto operatons via pkcs11, OpenSSL, Apache and OpenSSH. We also cover usage in Thunderbird (S/MIME), Elementary Files (EF), a Web cluster with Apache and mod_nss and the decryption of the keys.</description> 
                <pubDate>Sun, 19 Jun 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 20 Jun 2021 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>C++ set up cpp-httplib with SSL support with cMake</title> 
                <link>https://raymii.org/s/tutorials/Cpp_set_up_cpp-httplib_with_ssl_support_with_cmake.md.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Cpp_set_up_cpp-httplib_with_ssl_support_with_cmake.md.html</guid>
                <description>For a small personal project that talks to a few JSON API's and does some data parsing I needed a header only C++ HTTP library. Header only because that is the simplest way to include it in my project, just copy and paste the file. I came across the project cpp-httplib, which fits my needs, does all the http methods, small, a few examples and it looks modern and has recent development commits. Setup and getting it working was easy, but as soon as I tried an https url, I got an exception ('https scheme is not supported.'). This guide shows you how to setup cpp-httplib for SSL support with cmake. It took me a bit longer than I wanted to set it up correctly, so why not save you the effort.</description> 
                <pubDate>Mon, 14 Dec 2020 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 14 Dec 2020 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Bash bits: split a file in blocks and do something with each block</title> 
                <link>https://raymii.org/s/tutorials/Bash_bits_split_a_file_in_blocks_and_do_something_with_each_block.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Bash_bits_split_a_file_in_blocks_and_do_something_with_each_block.html</guid>
                <description>Bash Bits are small examples, tips and tutorials for the bash shell. This bash bit shows you how to split a file into blocks (multiline) and do something with each block. This can be used for certificate chains or other files which have multiline blocks.</description> 
                <pubDate>Mon, 02 Sep 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 02 Sep 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL test TLSv1.3 connection and ciphersuites with s_client</title> 
                <link>https://raymii.org/s/tutorials/OpenSSL_test_TLSv1.3_connection_with_s_client.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/OpenSSL_test_TLSv1.3_connection_with_s_client.html</guid>
                <description>This guide shows you how to test a server's TLSv1.3 connection and use specific ciphersuites with the command line s_client client from the OpenSSL project. With OpenSSL 1.1.1 you can use TLSv1.3. This guide covers the installation of OpenSSL 1.1.1 on Ubuntu, testing the connection to a server  and specific ciphersuites. It also covers the big differences between TLSv1.3 and lower.</description> 
                <pubDate>Sun, 28 Apr 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 28 Apr 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL command line Root and Intermediate CA including OCSP, CRL and revocation</title> 
                <link>https://raymii.org/s/tutorials/OpenSSL_command_line_Root_and_Intermediate_CA_including_OCSP_CRL and_revocation.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/OpenSSL_command_line_Root_and_Intermediate_CA_including_OCSP_CRL and_revocation.html</guid>
                <description>These are quick and dirty notes on generating a certificate authority (CA), intermediate certificate authorities and end certificates using the OpenSSL command line tools. It includes OCSP, CRL and CA Issuer information and specific issue and expiry dates. We'll set up our own root CA. We'll use the root CA to generate an example intermediate CA. We'll use the intermediate CA to sign end user certificates.</description> 
                <pubDate>Tue, 03 Mar 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 17 Dec 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Encrypt and decrypt files to public keys via the OpenSSL Command Line</title> 
                <link>https://raymii.org/s/tutorials/Encrypt_and_decrypt_files_to_public_keys_via_the_OpenSSL_Command_Line.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Encrypt_and_decrypt_files_to_public_keys_via_the_OpenSSL_Command_Line.html</guid>
                <description>This small tutorial will show you how to use the openssl command line to encrypt and decrypt a file using a public key. We will first generate a random key, encrypt that random key against the public key of the other person and use that random key to encrypt the actual file with using symmetric encryption.</description> 
                <pubDate>Thu, 25 Oct 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 25 Oct 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Nitrokey HSM/SmartCard-HSM and Raspberry Pi web cluster</title> 
                <link>https://raymii.org/s/articles/Nitrokey_HSM_web_cluster.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Nitrokey_HSM_web_cluster.html</guid>
                <description>This article sets up a Nitrokey HSM/SmartCard-HSM web cluster and has a lot of benchmarks. This specific HSM is not a fast HSM since it's very inexpensive and targeted at secure key storage, not performance. But, what if you do want more performance? Then you scale horizontally, just add some more HSM's and a loadbalancer in front. The cluster consists of Raspberry Pi's and Nitrokey HSM's and SmartCard-HSM's, softwarewise we use Apache, `mod_nss` and haproxy. We benchmark a small HTML file and a Wordpress site, with a regular 4096 bit RSA certificate without using the HSM's, a regular 2048 bit RSA certificate without using the HSM's, a 2048 bit RSA certificate in the HSM, a 1024 bit RSA certificate in the HSM and an EC prime256v1 key in the HSM. We do these benchmarks with the `OpenSC` module and with the `sc-hsm-embedded` module to see if that makes any difference.</description> 
                <pubDate>Mon, 01 Aug 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 01 Aug 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Storing arbitraty data in the Nitrokey HSM/SmartCard-HSM with Elementary Files (EF)</title> 
                <link>https://raymii.org/s/articles/Storing_arbitraty_data_in_the_Nitrokey_HSM.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Storing_arbitraty_data_in_the_Nitrokey_HSM.html</guid>
                <description>This is a guide which shows you how to write small elementary files to a nitrokey HSM. This can be usefull if you want to securely store data protected by a user pin. You can enter the wrong pin only three times, so offline brute forcing is out of the picture.</description> 
                <pubDate>Sun, 17 Jul 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 17 Jul 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Use the Nitrokey HSM or SmartCard-HSM with sc-hsm-embedded, mod_nss and Apache (read only module)</title> 
                <link>https://raymii.org/s/articles/Use_the_Nitrokey_HSM_or_SmartCard-HSM_with_sc-hsm-embedded_mod_nss_and_Apache_read_only_module.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Use_the_Nitrokey_HSM_or_SmartCard-HSM_with_sc-hsm-embedded_mod_nss_and_Apache_read_only_module.html</guid>
                <description>This is a guide on using the Nitrokey HSM with sc-hsm-embedded module instead of the PC/SC daemon and OpenSC, mod_nss and the Apache webserver. This is an extension on the earlier guide, with new benchmarks. The sc-hsm-embedded module is not using a global lock like OpenSC, therefore providing better performance. The sc-hsm-embedded module is also a read only module, suitable for embedded systems or secure systems. The HSM allows you to store the private key for a SSL certificate inside the HSM (instead of on the filesystem), so that it can never leave the device and thus never be stolen. The guide covers the installation of the sc-hsm-embedded module, configuration of and benchmarks from Apache with the HSM and different key sizes.</description> 
                <pubDate>Fri, 15 Jul 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 15 Jul 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Decrypt/Extract Nitrokey HSM/SmartCard-HSM RSA private keys</title> 
                <link>https://raymii.org/s/articles/Decrypt_NitroKey_HSM_or_SmartCard-HSM_private_keys.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Decrypt_NitroKey_HSM_or_SmartCard-HSM_private_keys.html</guid>
                <description>This is a guide which shows you how to extract private RSA key material from the Nitrokey HSM / SmartCard-HSM using the DKEK. This way you can get the private key out of the HSM in an unencrypted form. It does require access to the HSM device, all the DKEK share and their passwords. Do note that doing this defeats the entire purpose of a HSM, namely that you never have access to the keys. In the article I'll go over some explanation why this might be a feature you need and why it might be a case of security over convinience.</description> 
                <pubDate>Wed, 13 Jul 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 13 Jul 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Use the Nitrokey HSM or SmartCard-HSM with mod_nss and Apache</title> 
                <link>https://raymii.org/s/articles/Nitrokey_HSM_in_Apache_with_mod_nss.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Nitrokey_HSM_in_Apache_with_mod_nss.html</guid>
                <description>This is a guide on using the Nitrokey HSM with mod_nss and the Apache webserver. The HSM allows you to store the private key for a SSL certificate inside the HSM (instead of on the filesystem), so that it can never leave the device and thus never be stolen. The guide covers the installation and configuration of mod_nss, coupling the HSM to NSS, generating the keys and configuring Apache, and last but not least we also do some benchmarks on Apache with the HSM and different key sizes.</description> 
                <pubDate>Tue, 21 Jun 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 21 Jun 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Let's Encrypt with DirectAdmin, now built in!</title> 
                <link>https://raymii.org/s/articles/Lets_Encrypt_Directadmin_Now_Built_In.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Lets_Encrypt_Directadmin_Now_Built_In.html</guid>
                <description>Let's Encrypt is a new certificate authority, recognized by all major browsers. They make it a breeze to set up TLS certificates for your web server. And for free! Let's Encrypt is supported by major players like Mozilla, Akamai, Cisco, the EFF, the Internet Security Research Group and others. Let's Encrypt provides free, automatic and secure certificates so that every website can be secured with an SSL certificate. This article shows you how to setup Let's Encrypt with the DirectAdmin web control panel. DirectAdmin now supports Lets Encrypt natively since 1.50, so no more ssh fiddling, just via the control panel, for all the users on the server.</description> 
                <pubDate>Wed, 24 Feb 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 24 Feb 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Let's Encrypt with DirectAdmin or other Web Control Panels</title> 
                <link>https://raymii.org/s/articles/Lets_Encrypt_Directadmin.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Lets_Encrypt_Directadmin.html</guid>
                <description>Let's Encrypt is a new certificate authority, recognized by all major browsers. They make it a breeze to set up TLS certificates for your web server. And for free! Let's Encrypt is supported by major players like Mozilla, Akamai, Cisco, the EFF, the Internet Security Research Group and others. Let's Encrypt provides free, automatic and secure certificates so that every website can be secured with an SSL certificate. This article shows you how to setup Let's Encrypt with the DirectAdmin web control panel. The guide is generic, so it works for other controlpanels as well. For now it works with the beta, and required some linux knowledge and root access to the hosting server.</description> 
                <pubDate>Sun, 11 Jan 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 24 Feb 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Deborphan cleanup until no more orphaned packages left</title> 
                <link>https://raymii.org/s/snippets/Deborphan_cleanup_until_no_more_orphaned_packages_left.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/Deborphan_cleanup_until_no_more_orphaned_packages_left.html</guid>
                <description>Deborphan removes packages it thinks your system doesn't need anymore. It is a great tool for package cleanup and maintenance. Sometimes, after cleaning up the packages, it will find new packages that are orphaned (because you just cleaned up). This is a small script that cleans up with deborphan until there is nothing more to cleanup.</description> 
                <pubDate>Mon, 11 Jan 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 11 Jan 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Sign and verify text/files to public keys via the OpenSSL Command Line</title> 
                <link>https://raymii.org/s/tutorials/Sign_and_verify_text_files_to_public_keys_via_the_OpenSSL_Command_Line.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Sign_and_verify_text_files_to_public_keys_via_the_OpenSSL_Command_Line.html</guid>
                <description>This small guide will shows you how to use the OpenSSL Command Line to sign a file, and how to verify the signing of this file. You can do this to prove ownership of a key, or to prove that a file hasn't been modified since you signed it. This works both with small text files as well as huge photo's, documents or PDF files.</description> 
                <pubDate>Mon, 09 Nov 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 09 Nov 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Find all services using libssl to restart after an OpenSSL update</title> 
                <link>https://raymii.org/s/snippets/Find_all_services_using_libssl_to_restart_after_an_OpenSSL_update.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/Find_all_services_using_libssl_to_restart_after_an_OpenSSL_update.html</guid>
                <description>When you update OpenSSL, the software that currently has the ssl libraries loaded in memory do not automatically load the updated libraries. A full system reboot resolves that problem, but sometimes that is not possible. This command shows you all the software that has loaded the libraries, allowing you to restart only those services. If you don't restart or reload after an update, the software might still be vulnerable to issues that the update fixed.</description> 
                <pubDate>Tue, 14 Jul 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 14 Jul 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL: Manually verify a certificate against a CRL</title> 
                <link>https://raymii.org/s/articles/OpenSSL_manually_verify_a_certificate_against_a_CRL.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/OpenSSL_manually_verify_a_certificate_against_a_CRL.html</guid>
                <description>This article shows you how to manually verfify a certificate against a CRL. CRL stands for Certificate Revocation List and is one way to validate a certificate status. It is an alternative to the OCSP, Online Certificate Status Protocol.</description> 
                <pubDate>Sun, 22 Mar 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 22 Mar 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible - Only if a file exists or does not exist</title> 
                <link>https://raymii.org/s/tutorials/Ansible_-_Only_if_a_file_exists_or_does_not_exist.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_-_Only_if_a_file_exists_or_does_not_exist.html</guid>
                <description>This Ansible playbook example helps you execute actions only if a file exists or does not exist. If you for example have a command you need to run to generate a certificate (or Diffie Hellman parameters for nginx) you only want to do that once. The command itself is not convergent so it will run with every ansible run. However, the command creates a file and Ansible is able to check if that file exists. If the file exists, it will not execute the action. The same goes for checking if a file does exist and only executing the action if it exists. (The action you want to do will remove that file).</description> 
                <pubDate>Sat, 27 Dec 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 27 Dec 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL Decoder Script</title> 
                <link>https://raymii.org/s/software/OpenSSL_Decoder.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/OpenSSL_Decoder.html</guid>
                <description>This is a simple PHP script which decodes a certificate, csr or connection and displays the information it finds.</description> 
                <pubDate>Sat, 15 Nov 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 15 Nov 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL Command Generator</title> 
                <link>https://raymii.org/s/software/OpenSSL_Command_Generator.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/OpenSSL_Command_Generator.html</guid>
                <description>This is a simple page with a form which you can use to generate OpenSSL commands to, for example, create a key, certificate and a CSR.</description> 
                <pubDate>Sat, 08 Nov 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 08 Nov 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Check and Fix SSL servers for SSLv3 connections or the Poodle CVE-2014-3566 bug</title> 
                <link>https://raymii.org/s/articles/Check_servers_for_the_Poodle_bug.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Check_servers_for_the_Poodle_bug.html</guid>
                <description>The POODLE CVE-2014-3566 bug is a new bug discovered by Google in the SSLv3 protocol. The fix is easy, disable support for SSLv3. See https://cipherli.st for a good list of SSL ciphers. You can use this check from the shell to check your servers. This command can easily be automated with other shell scripts. It also allows you to check your services without exposing them to an external checking website.</description> 
                <pubDate>Tue, 14 Oct 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 14 Oct 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL One liner to create self signed certificate</title> 
                <link>https://raymii.org/s/snippets/OpenSSL_One_line_to_create_self_signed_certificate.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/OpenSSL_One_line_to_create_self_signed_certificate.html</guid>
                <description>This is a one-liner for OpenSSL to generate a self signed certificate and private key.</description> 
                <pubDate>Wed, 09 Oct 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 09 Oct 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL - Generate Psuedo Random Passwords</title> 
                <link>https://raymii.org/s/snippets/OpenSSL_Password_Generator.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/OpenSSL_Password_Generator.html</guid>
                <description>This a snippet to generate a psuedo random password fast via the command line with OpenSSL. It generates a number of random bytes, which can either be output raw, as Base64 or as HEX. The Base64 output is a good password most of the time.</description> 
                <pubDate>Fri, 26 Jul 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 26 Jul 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Nagios plugin to check an OCSP server</title> 
                <link>https://raymii.org/s/software/Nagios_plugin_to_check_OCSP.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Nagios_plugin_to_check_OCSP.html</guid>
                <description>This is a nagios plugin to check an OCSP server. You can give it a hard coded certificate or your own one. This is sent to the OCSP server and the response is then parsed to give the correct nagios result. It is targeted at administrators who have their own OCSP and need to know when it is not working.</description> 
                <pubDate>Mon, 06 May 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 06 May 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Nagios plugin to check CRL expiry in minutes</title> 
                <link>https://raymii.org/s/software/Nagios_plugin_to_check_CRL_expiry.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Nagios_plugin_to_check_CRL_expiry.html</guid>
                <description>This is a nagios plugin which you can use to check if a CRL (Certificate Revocation List, public list with revoked certificates) is still valid.</description> 
                <pubDate>Thu, 02 May 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 02 May 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL Generate CSR non-interactive</title> 
                <link>https://raymii.org/s/snippets/OpenSSL_generate_CSR_non-interactive.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/OpenSSL_generate_CSR_non-interactive.html</guid>
                <description>This is a short command to generate a CSR (certificate signing request) with openssl without being prompted for the values which go in the certificate's Subject field.</description> 
                <pubDate>Sat, 09 Feb 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 09 Feb 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL match certificate and private key</title> 
                <link>https://raymii.org/s/snippets/OpenSSL_match_certificate_with_private_key.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/OpenSSL_match_certificate_with_private_key.html</guid>
                <description>This check lets you know if a certificate matches a private key. Today I had to set up something but I kept getting ssl errors. Turns out, the certificate did not match the private key, because the private key file was damaged. This is how I found out.</description> 
                <pubDate>Sat, 09 Feb 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 09 Feb 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL one liner to get expiry date from SSL Certificate of any website</title> 
                <link>https://raymii.org/s/snippets/OpenSSL_Get_Certificate_Expiry_Date_and_Other_Info.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/OpenSSL_Get_Certificate_Expiry_Date_and_Other_Info.html</guid>
                <description>This little openssl one liner gets the expiry date from a website's ssl certificate.</description> 
                <pubDate>Wed, 23 Jan 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 23 Jan 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Nagios plugin to check certificates on local file system</title> 
                <link>https://raymii.org/s/software/Nagios_check_local_certificate_files.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Nagios_check_local_certificate_files.html</guid>
                <description>This is a nagios plugin to check local ssl certifcates for expiry.</description> 
                <pubDate>Mon, 24 Sep 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 24 Sep 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
        </channel>
    </rss>
    
    