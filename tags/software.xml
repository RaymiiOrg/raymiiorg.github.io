<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <?xml-stylesheet href="/s/inc/rss.xsl" type="text/xsl"?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag software on Raymii.org</title> 
            <link>https://raymii.org/s/tags/software.xml</link> 
            <description>RSS feed for tag software on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/software.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>OpenSSL Command Generator</title> 
                <link>https://raymii.org/s/software/OpenSSL_Command_Generator.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/OpenSSL_Command_Generator.html</guid>
                <description>This is a simple page with a form which you can use to generate OpenSSL commands to, for example, create a key, certificate and a CSR.</description> 
                <pubDate>Sat, 08 Nov 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 15 Oct 2022 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Sparkling Network</title> 
                <link>https://raymii.org/s/software/Sparkling_Network.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Sparkling_Network.html</guid>
                <description>This is an overview of all the servers in the Sparkling Network, mostly as an overview for myself, but it might be interesting for others. It also has a status overview of the nodes. Prices are monthly, excluding VAT.</description> 
                <pubDate>Sat, 12 Jan 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 20 Apr 2022 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Firefox 89 Proton UI Tab Styling</title> 
                <link>https://raymii.org/s/blog/Firefox-89-proton-ui-tab-styling.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/Firefox-89-proton-ui-tab-styling.html</guid>
                <description>Firefox 89 recently came out with a 'new' user interface (named proton). I'm not a fan of change because UX/UI people need to make it seem like their job is relevant. Also, the picture they show under the headline '17 billion clicks...' only scares the crap out of me, tracking every move a user makes in their browser seems to me to be a bad idea, but hey, lets see how long Mozilla can continue their war against their own users. Since the `about:config` flag to disable proton will probably be gone in a few releases I thought, why not try to get used to this new interface. It's so enormous and wide, lacking contrast. As you might have guessed, I cannot get used to the tab bar, so in this post I'll show you how to use the `userChrome.css` file to make the new tab bar look a bit more like the old tab bar. </description> 
                <pubDate>Sun, 27 Jun 2021 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 27 Jun 2021 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Bash HTTP monitoring dashboard</title> 
                <link>https://raymii.org/s/software/Bash_HTTP_Monitoring_Dashboard.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Bash_HTTP_Monitoring_Dashboard.html</guid>
                <description>This is a shell script that creates a webpage with the status of HTTP(s) sites. Parallel checking, thus very fast, only dependencies are curl and bash (version 4 or above). For all of you who want a simple script with a nice webpage to check a few websites. Perfect for a wall mounted monitoring display and a Raspberry Pi. Installation and configuration is easy to do inside the script. It scales well, both on the checking side as the information display page (dense on purpose). Failed checks appear right on top for you to act on. I had this script running at home for at least a year in that form, when I showed it to a friend he liked it,  asked me to make it public, but before I did that I polished it up a bit. </description> 
                <pubDate>Sun, 27 Dec 2020 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 11 Jan 2021 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Hacker News vs Lobste.rs in C++, an exercise in parsing json http api's and date/time/timezones</title> 
                <link>https://raymii.org/s/software/Cpp_exercise_in_parsing_json_http_apis_and_time_stuff.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Cpp_exercise_in_parsing_json_http_apis_and_time_stuff.html</guid>
                <description>I recently wondered how many top posts on the Hacker News frontpage are also on Lobsters. At first I reached for my trusty Python, because when I need to do some JSON API parsing that's what I'll use. (Otherwise bash is my default goto for small things, except when json, networking or associative arrays are involved.) But, then, a thought came to my mind. Why not try it with reasonably modern C++. It's what I do at work, so why not a simple personal project. It would involve dependency management (json and a http library), parsing both API endpoints and, most importantly, doing stuff with time. Time, timezones and dates are hard. This article contains a bit of my learning process, compilation and usage instructions and an example run. Go look at the code and run the code yourself. Let me know if my timezone calculations are working outside of GMT+1.</description> 
                <pubDate>Thu, 31 Dec 2020 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 31 Dec 2020 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>CookieNumberPrinter, incremental / idle game style numbers in C++</title> 
                <link>https://raymii.org/s/software/CookieNumberPrinter_incremental_game_style_numbers.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/CookieNumberPrinter_incremental_game_style_numbers.html</guid>
                <description>To level up my software development skills, I'm programming a command line game in my spare  time.  It is a clone of the famous cookieclicker game by ortiel. A clone of a game is simple enough to get up and running  fairly quickly, but also extensible enough when needed. How do you store huge score numbers  when they don't fit in a long long? How do you write a game loop, how to use threads to handle  user input? Saving a game (how to design a proper save format)? Also a great way to learn about project organization, software architecture and to try out design patterns. As the game is a clone of CookieCliker, which itself is an incremental game, I had to figure out how to work with large numbers. Since this is not a university math project, I allowed myself the luxury of using Boosts Multiprecision.  The library handles the large numbers, including caluclation and operations with such a number. I did want to print the numbers in Idle Style, where large numbers are displayed with a suffix, like '1 million' instead of '1000000' and so on. This 'C++' class can be used to print Boost's 'cpp_dec_float' numbers in incremental style. It's just one header.</description> 
                <pubDate>Sat, 12 Sep 2020 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 12 Sep 2020 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Generate QR code and write it to a PNG, scaled, in C++</title> 
                <link>https://raymii.org/s/software/Cpp_generate_qr_code_and_write_it_to_png_scaled.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Cpp_generate_qr_code_and_write_it_to_png_scaled.html</guid>
                <description>The QR-Code-Generator library by Project Nayuki for C++ gives you an easy, fast and correct way to generate QR codes. However, you get just a data structure, showing that data is up to you. An example is provided to print the code to a terminal, but not to create and actual image file. For Java, there is an example provided which writes a PNG file, but not for C++. The author of the library also has another C++ library, Tiny-PNG-Out. It is correct up until 700 megapixel PNG files, which I hope your QR code never hits. I've written a class which bridges the two together, allowing you to both generate the QR code and write it to a PNG file, scaled up to be as readable as possible.</description> 
                <pubDate>Sun, 07 Jun 2020 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 07 Jun 2020 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>ScreensaverStopper, stop activating the screensaver by sending F24 often</title> 
                <link>https://raymii.org/s/software/ScreenSaverStopper.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/ScreenSaverStopper.html</guid>
                <description>ScreensaverStopper sends the F24 keystroke every 40 seconds. This way, Windows should not activate the screensaver. Useful if you do not have rights to disable the screensaver, but can run executables. Wwritten in C++, compiled with GCC 8.1 via MinGW/cMake. Filesize is around 14 KB, memory usage after a day of running around 600KB. License is GNU GPLv3.</description> 
                <pubDate>Sat, 21 Dec 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 21 Dec 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>and &amp; or are valid in C++ (alternative tokens)</title> 
                <link>https://raymii.org/s/blog/and_or_are_valid_Cpp.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/and_or_are_valid_Cpp.html</guid>
                <description>A post on lobste.rs on the C feature trigraphs triggered me to write this piece on the C++ feature, alternative tokens. I've recently suprised a co- worker by using an if statement with 'or' instead of '||', which works fine, but he never saw it before. It's in C++ since C++ 11, but MSVC requires a specific compiler flag ('/Za') or the 'iso646.h' header. This post has a few samples on the usage inclusing other alternative tokens like bitor, xor and or_eq.</description> 
                <pubDate>Mon, 16 Dec 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 16 Dec 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>C++ project setup with CMake &amp; unit tests (google test)</title> 
                <link>https://raymii.org/s/tutorials/Cpp_project_setup_with_cmake_and_unit_tests.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Cpp_project_setup_with_cmake_and_unit_tests.html</guid>
                <description>This guide will show you how to setup a new C++ project with CMake and unit tests via Google's test framework. With this setup you can get started right away with test-driven-development in C++. It is also simple enough to look and figure out how to add gtest to your existing project and start doing TDD on your legacy (existing) codebase.</description> 
                <pubDate>Tue, 01 Oct 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 06 Nov 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>C++ template definitions in a .cpp file (instead of a header file)</title> 
                <link>https://raymii.org/s/snippets/Cpp_template_definitions_in_a_cpp_file_instead_of_header.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/Cpp_template_definitions_in_a_cpp_file_instead_of_header.html</guid>
                <description>In this snippet I'll show you how to place your C++ template definitions in a seperate .cpp file. I'd recommend you to just put template definitions in your header file, or a .hpp file, but if you really want to there is a trick to get them in a seperate .cpp file. The trick is to explicitly instanciate every template you're going to use at the end of the .cpp file. With many different templates and types this becomes cumbersome, but for certain usecases it could be useful. </description> 
                <pubDate>Sat, 22 Jun 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 22 Jun 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>C++ create and write to a CSV file with a variadic template</title> 
                <link>https://raymii.org/s/snippets/Cpp_create_and_write_to_a_CSV_file_with_a_variadic_template.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/Cpp_create_and_write_to_a_CSV_file_with_a_variadic_template.html</guid>
                <description>In this snippet I'll show you a variadic template to write to a file. In line with my other experiments to get a better grasp at templates, this example improves on my earlier attempt by using a variadic template, thus allowing you to provide an infinite number of columns to the csv file of any type that has the overloaded &lt;&lt; operator.</description> 
                <pubDate>Mon, 17 Jun 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 17 Jun 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>C++ create and write to a CSV file</title> 
                <link>https://raymii.org/s/snippets/Cpp_create_and_write_to_a_csv_file.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/Cpp_create_and_write_to_a_csv_file.html</guid>
                <description>In this quick snippet I'll show you how to create and write to a csv file. It includes checking if the file is writable, and if it's not there, creates it with a different first row as header. It's a quick example, I've used it to log some test data. It can probably be improved.</description> 
                <pubDate>Fri, 07 Jun 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 16 Jun 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Dark Reader, dark mode for any website</title> 
                <link>https://raymii.org/s/blog/Dark_Reader_dark_mode_for_any_website.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/Dark_Reader_dark_mode_for_any_website.html</guid>
                <description>Recently I discovered a firefox extension that converts any website into a dark version. Works both on firefox for mobile and on the desktop (and all other major browsers), is open source, causes less strain on the eyes and improves battery life. Just as the earlier post on Blokada, I find this such a cool piece of software I wanted to share it with all my readers.</description> 
                <pubDate>Sat, 15 Jun 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 15 Jun 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Cooking with C++ templates and stronger types</title> 
                <link>https://raymii.org/s/blog/Cooking_with_Cpp_templates_and_stronger_types.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/Cooking_with_Cpp_templates_and_stronger_types.html</guid>
                <description>To gain a better understanding of C++ templates I'm playing around with them. Most of the online guides stop at the example of a simple template to, for example, get the max of two inputs, or cover just a bit more (like how to overload operators for your specific template classes to make &lt;&lt; and + / - work). Combining templates with a stronger type to pass stuff around led me to a test kitchen. As in, some code with ingredients, amounts and an oven. One small thing kept it from working, after some feedback it turned out I was passing the wrong parameters to the template. Afterwards the error also made sense. This post covers both my learning and a small piece on stronger types.</description> 
                <pubDate>Thu, 13 Jun 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 13 Jun 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>C++ variadic template recursive example</title> 
                <link>https://raymii.org/s/snippets/Cpp_variadic_template_recursive_example.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/Cpp_variadic_template_recursive_example.html</guid>
                <description>In this article I'll show you how to use a variadic template in C++. Variadic templates allow you to have a template with a variable number of arguments, also called a parameter pack. Unpacking that pack is more difficult than it should be, so we use a recursive template to iterate over all the parameters one by one. I've also included an example in Python to compare to.</description> 
                <pubDate>Sat, 08 Jun 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 08 Jun 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>totext.py - Convert URL or RSS feed to text with readability</title> 
                <link>https://raymii.org/s/software/totext.py-Convert_URL_or_RSS_feed_to_plaintext_with_readability.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/totext.py-Convert_URL_or_RSS_feed_to_plaintext_with_readability.html</guid>
                <description> Love plaintext? This script downloads an URL, parses it with readability and returns the plaintext (as markdown). It supports RSS feeds (will convert every article in the feed) and saves every article. My usecase is twofold. One is to convert RSS feeds to a gopher site, the second is to get full text in my RSS reader. The script contains a few workarounds for so-called cookiewalls. It also pauses between RSS feed articles to not do excessive requests. The readability part is handled by Python, no external services are used.</description> 
                <pubDate>Thu, 18 Apr 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 18 Apr 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Simple pygopherd log analyzer</title> 
                <link>https://raymii.org/s/software/Simple_pygopherd_log_analyzer.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Simple_pygopherd_log_analyzer.html</guid>
                <description>Simple log analyzer for pygopherd. Fun if you have a gopherhole and want statistics. If you ever used Logwatch you'll feel at home.</description> 
                <pubDate>Wed, 20 Mar 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 20 Mar 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Python script to talk to LibreNMS API and get alerts and hosts</title> 
                <link>https://raymii.org/s/software/Python_script_to_talk_to_LibreNMS_API_and_get_alerts_and_hosts.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Python_script_to_talk_to_LibreNMS_API_and_get_alerts_and_hosts.html</guid>
                <description>This script talks to the LibreNMS API to receive a list of down devices and alerts. The LibreNMS dashboard provides widgets for alerts and host statusses, but there is no easy way to access that output via the API. Using Python I was able to get certain information and output it as HTML or text using PrettyTable. It can be included in other systems or be used in a chain of monitoring customizations. z</description> 
                <pubDate>Wed, 08 Aug 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 08 Aug 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>log_vcs - Ansible callback plugin that creates VCS (git) branches for every Ansible run</title> 
                <link>https://raymii.org/s/software/log_vcs_-_Ansible_Callback_plugin_that_creates_git_branches_for_every_ansible_run.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/log_vcs_-_Ansible_Callback_plugin_that_creates_git_branches_for_every_ansible_run.html</guid>
                <description>This Ansible callback plugin creates a VCS branch every time you run Ansible. If you ever need to go back to a certain state or environment, check out that branch and be sure nothing has changed. This is useful when you have multiple environments or multiple people deploying and continually develop your Ansible. When you often deploy to test / acceptance and less often to production, you can checkout the last branch that deployed to production if a hotfix or other maintenance is required, without having to search back in your commits and logs. I would recommend to develop infrastructure features in feature branches and have the master branch always deployable to production. However, reality learns that that is not always the case and this is a nice automatic way to have a fallback.</description> 
                <pubDate>Tue, 10 Jul 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 10 Jul 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible playbook for GoAccess Log Analyzer</title> 
                <link>https://raymii.org/s/software/Ansible_role_for_GoAccess_Log_Analyzer.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Ansible_role_for_GoAccess_Log_Analyzer.html</guid>
                <description>This is a small Ansible playbook to deploy the GoAccess log analyzer on Debian based systems. Next to Piwik, I use goaccess myself to get better insights in who and what visits my servers. This role is ment to be included in your webserver playbooks.</description> 
                <pubDate>Sun, 17 Jan 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 17 Jan 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Recursively find all [installed] package dependencies</title> 
                <link>https://raymii.org/s/software/Recursively_find_all_installed_package_dependencies.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Recursively_find_all_installed_package_dependencies.html</guid>
                <description>This small script shows you all packages [installed] that are a dependency from a package, and the dependencies of those packages. I installed the build-essential package, but apt-get remove-ing that package doens't remove the development tools. So I was wondering what packages were installed, including those dependencies, to remove the ones I didn't want. This small script shows you all packages that are dependencies of a package, and repeats that for those packages.</description> 
                <pubDate>Thu, 31 Dec 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 31 Dec 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenVZ/Proxmox - pre-backup all container dump script</title> 
                <link>https://raymii.org/s/software/OpenVZ_Proxmox_-_pre-backup_all_container_dump_script.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/OpenVZ_Proxmox_-_pre-backup_all_container_dump_script.html</guid>
                <description>This simple script creates a vzdump of all the OpenVZ containers on a machine. It can be used before an actual backup, in my case the actual backup excludes the container path /var/lib/vz/private. This because a dump is easier to backup because it has much less files in it.</description> 
                <pubDate>Sun, 18 Jan 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 18 Jan 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>ingsoc</title> 
                <link>https://raymii.org/s/software/ingsoc.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/ingsoc.html</guid>
                <description>ingsoc is a static site generator written in Python with the purpose of generating raymii.org. It differs from other static site generators because it does not create a blog-like site, but it is focused on pages and structure. It also does not use a template engine. It generates categories, pages, tags, an XML sitemap and a RSS feed. It takes markdown files with a yaml config header as input, and outputs html.</description> 
                <pubDate>Tue, 02 Dec 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 02 Dec 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL Decoder Script</title> 
                <link>https://raymii.org/s/software/OpenSSL_Decoder.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/OpenSSL_Decoder.html</guid>
                <description>This is a simple PHP script which decodes a certificate, csr or connection and displays the information it finds.</description> 
                <pubDate>Sat, 15 Nov 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 15 Nov 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>foaas.sh - Command Line Fuck Off as a Service client</title> 
                <link>https://raymii.org/s/software/foaas.sh_-_Command_Line_FOAAS_Client.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/foaas.sh_-_Command_Line_FOAAS_Client.html</guid>
                <description>foaas.sh is a command line [Fuck Off as a Service client](http://foaas.com/). It is written is bash and supports multiple forms of API interaction. It also supports `xclip`, when available, the result of an interaction is copied to the clipboard for later use.</description> 
                <pubDate>Mon, 08 Sep 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 08 Sep 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible Inventory from VMWare</title> 
                <link>https://raymii.org/s/software/Ansible__Dynamic_Inventory_From_VMware_vCenter.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Ansible__Dynamic_Inventory_From_VMware_vCenter.html</guid>
                <description>This is a simple script which lets you use VMWare vCenter as a dynamic inventory for Ansible.</description> 
                <pubDate>Mon, 06 Jan 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 06 Jan 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>NoPriv.py - Easy IMAP Email Backup.</title> 
                <link>https://raymii.org/s/software/Nopriv-IMAP-backup.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Nopriv-IMAP-backup.html</guid>
                <description>NoPriv.py is a python script to backup any IMAP capable email account to a bowsable HTML archive and a Maildir folder. Not one huge file (mbox), only needing a web browser to view and no proprietary code, so you can make sure I won't steal your password. This release has a few major new features, namely support to backup all available folders in one go and a conversion from HTML Kickstart to Bootstrap.</description> 
                <pubDate>Sun, 17 Nov 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 17 Nov 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OS X - Applescript to lock date and time preference panel to fix local sudo exploit</title> 
                <link>https://raymii.org/s/software/OS-X-Applescript-To-Lock-Date-Time-Settings-Panel-for-Sudo-Exploit.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/OS-X-Applescript-To-Lock-Date-Time-Settings-Panel-for-Sudo-Exploit.html</guid>
                <description>This applescript locks the OS X Date and Time Preference Panel. It can be run via Apple Remote Desktop. This is related to CVE-2013-1775, a local sudo root exploit on OS X. If the date and time preference panel is locked, setting the date and time also requires a sudo password</description> 
                <pubDate>Mon, 02 Sep 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 02 Sep 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Bind DNS Query Graph Charts with GNUPlot</title> 
                <link>https://raymii.org/s/software/Bind-GNUPlot-DNS-Bar-Graph.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Bind-GNUPlot-DNS-Bar-Graph.html</guid>
                <description>This is a very simple script which uses GNUplot to create graphs of Bind Query logs.</description> 
                <pubDate>Tue, 13 Aug 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 13 Aug 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Microsoft Exchange / Active Directory Powershell script to notify users of expiring Passwords</title> 
                <link>https://raymii.org/s/software/Microsoft_Exchange_Powershell_Script_User_Password_Expiry.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Microsoft_Exchange_Powershell_Script_User_Password_Expiry.html</guid>
                <description>This is a small PowerShell script which emails your users that their password is going to expire in X days. This is needed when you have an Active Directory and Exchange Environment, but your users do not log in to a Windows machine bound to the Active Directory, but for example a Mac OS X or Linux machine with Full Disk Encryption enabled. Then they are not notified that their password is about to expire. This script can run as a scheduled task and scan and email your users that their password is about to expire.</description> 
                <pubDate>Thu, 08 Aug 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 08 Aug 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>bdsh - Whitelist Restricted Shell</title> 
                <link>https://raymii.org/s/software/bdsh.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/bdsh.html</guid>
                <description>A shell where you whitelist commands and only those commands can be executed. Either via ssh, as an interactive shell or launched with commands. Logs everything and escapes dangerous characters. bdsh stands for Boa Diminish SHell. You can probably guess why. It might have to to with snakes and restricting users, no pun intended.</description> 
                <pubDate>Sat, 29 Jun 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 29 Jun 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OS X - Create Hardware report SPX and save it to a AFP share</title> 
                <link>https://raymii.org/s/software/OS_X_Create_Hardware_report_spx_and_save_it_to_a_AFP_share.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/OS_X_Create_Hardware_report_spx_and_save_it_to_a_AFP_share.html</guid>
                <description>This script creates a OS X hardware report (an SPX file) and saves it to a AFP share. This is usefull when you are rolling out new machines. Run this script via Apple Remote Desktop and you have all your administration in your AFP share, which you can later put in your CMDB. The report has all the hardware data, from firmware, serial number, model, MAC addresses, disk and memory information, in short everything you need for your CMDB and support contracts.</description> 
                <pubDate>Sun, 02 Jun 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 02 Jun 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Nagios plugin to check an OCSP server</title> 
                <link>https://raymii.org/s/software/Nagios_plugin_to_check_OCSP.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Nagios_plugin_to_check_OCSP.html</guid>
                <description>This is a nagios plugin to check an OCSP server. You can give it a hard coded certificate or your own one. This is sent to the OCSP server and the response is then parsed to give the correct nagios result. It is targeted at administrators who have their own OCSP and need to know when it is not working.</description> 
                <pubDate>Mon, 06 May 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 06 May 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Nagios plugin to check Safenet HSM</title> 
                <link>https://raymii.org/s/software/Nagios_Plugin_to_check_a_Safenet_HSM.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Nagios_Plugin_to_check_a_Safenet_HSM.html</guid>
                <description>This is a nagios plugin which checks a Safenet Protectserver External HSM via the Safenet tools.</description> 
                <pubDate>Fri, 03 May 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 03 May 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Nagios plugin to check CRL expiry in minutes</title> 
                <link>https://raymii.org/s/software/Nagios_plugin_to_check_CRL_expiry.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Nagios_plugin_to_check_CRL_expiry.html</guid>
                <description>This is a nagios plugin which you can use to check if a CRL (Certificate Revocation List, public list with revoked certificates) is still valid.</description> 
                <pubDate>Thu, 02 May 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 02 May 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Munin plugin to show Logstash/Kibana messages per hour</title> 
                <link>https://raymii.org/s/software/Munin_plugin_Logstash_Kibana_messages_per_hour.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Munin_plugin_Logstash_Kibana_messages_per_hour.html</guid>
                <description>This is a simple munin plugin which shows you the amount of log messages your logstash/kibana server receives per hour.</description> 
                <pubDate>Fri, 12 Apr 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 12 Apr 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Hosted Piwik</title> 
                <link>https://raymii.org/s/software/Hosted_Piwik.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Hosted_Piwik.html</guid>
                <description>Piwik is an open source alternative to Google Analytics. I used to provide a free hosted version at hosted-oswa.org, but as of 2018 that is no longer the case. Be warned.</description> 
                <pubDate>Sat, 09 Mar 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 09 Mar 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Restrict SSH</title> 
                <link>https://raymii.org/s/software/Restrict_SSH.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Restrict_SSH.html</guid>
                <description>restrict_ssh.sh is a bash script which restricts ssh for a user to a set of commands via .ssh/authorized_keys, and log it verbosely.</description> 
                <pubDate>Sun, 20 Jan 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 20 Jan 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ruby script to upload or convert a Maildir Inbox to an IMAP server</title> 
                <link>https://raymii.org/s/software/Ruby_script_to_upload_or_convert_a_Maildir_Inbox_to_an_IMAP_Server.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Ruby_script_to_upload_or_convert_a_Maildir_Inbox_to_an_IMAP_Server.html</guid>
                <description>This is an overview of all the servers in the Sparkling Network, mostly as an overview for myself, but it might be interesting for others. It also has a status overview of the nodes...</description> 
                <pubDate>Tue, 01 Jan 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 01 Jan 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Python script to monitor a file for changes and then mail the report with the file attached.</title> 
                <link>https://raymii.org/s/software/Python-script-to-monitor-a-file-for-changes-and-then-mail-the-report-with-the-file-attached.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Python-script-to-monitor-a-file-for-changes-and-then-mail-the-report-with-the-file-attached.html</guid>
                <description>This is a script which checks a file's md5 hash, compares it to a previous (or given) hash and mails a report with the option of attaching the file with the email. I wrote it because I use AIDE on some systems, and I let it auto update the database. This script runs via cron before and after the AIDE run, so I have an archive of databases. But it can be used for all kind of files, not just for the AIDE database.</description> 
                <pubDate>Fri, 21 Dec 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 21 Dec 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>CIDR Cheatsheet</title> 
                <link>https://raymii.org/s/software/CIDR-Cheatsheet.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/CIDR-Cheatsheet.html</guid>
                <description>This is a handy CIDR cheatsheet.</description> 
                <pubDate>Tue, 11 Dec 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 11 Dec 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Git-clean</title> 
                <link>https://raymii.org/s/software/Git-clean.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Git-clean.html</guid>
                <description>git-clean - bash script to find big (binary) files in a git repo and history, and clean them</description> 
                <pubDate>Thu, 08 Nov 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 08 Nov 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ray-Mon - PHP and Bash server status monitoring</title> 
                <link>https://raymii.org/s/software/Bash_PHP_Server_Status_Monitor.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Bash_PHP_Server_Status_Monitor.html</guid>
                <description>Ray-Mon is a linux server monitoring script written in PHP and Bash, utilizing JSON as data storage. It requires only bash and a webserver on the client side, and only php on the server side. The client currently supports monitoring processes, uptime, updates, amount of users logged in, disk usage, RAM usage and network traffic.</description> 
                <pubDate>Mon, 22 Oct 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 22 Oct 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Codename Geld</title> 
                <link>https://raymii.org/s/software/Codename_Geld.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Codename_Geld.html</guid>
                <description>Codename Geld is a finance manager written in PHP. It uses a JSON text file for the values and the visual side is created with the excellent HTML5 Kickstart framework by Joshua Gatcke. It is not as fancy as mint.com or gnucash, so if you need advanced features (multiple accounts for example) you might want to use another piece of software. Also, the code is quite messy.</description> 
                <pubDate>Mon, 15 Oct 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 15 Oct 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Nagios plugin to check certificates on local file system</title> 
                <link>https://raymii.org/s/software/Nagios_check_local_certificate_files.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Nagios_check_local_certificate_files.html</guid>
                <description>This is a nagios plugin to check local ssl certifcates for expiry.</description> 
                <pubDate>Mon, 24 Sep 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 24 Sep 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>NutsManager</title> 
                <link>https://raymii.org/s/software/NutsManager.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/NutsManager.html</guid>
                <description>NutsManager is a power/gas/water usage tracker written in PHP. It uses a JSON text file for the values and the visual side is created with the excellent HTML5 Kickstart framework by Joshua Gatcke. The graphs are made with the flot framework. It helps me to keep track of my power usage, and shows me on which days I use a lot, and on which days I do not. That way, I know that a LAN party costs me a lot. Also, the code is quite messy.</description> 
                <pubDate>Sat, 15 Sep 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 15 Sep 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>PHP Task/Todo list</title> 
                <link>https://raymii.org/s/software/PHP-task-list-v2.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/PHP-task-list-v2.html</guid>
                <description>This is a task/todo list written in PHP. It uses a JSON text file for the tasks, and the visual side is created with the HTML5 Kickstart framework by Joshua Gatcke.</description> 
                <pubDate>Wed, 12 Sep 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 12 Sep 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Packages</title> 
                <link>https://raymii.org/s/software/Software_packages.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Software_packages.html</guid>
                <description>Some software I encounter does not have a debian .deb package available. Via the ./configure, make, sudo checkinstall I compile them into a package and put it up here for download.</description> 
                <pubDate>Sun, 02 Sep 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 02 Sep 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Wallbase.cc commandline bash wget downloader</title> 
                <link>https://raymii.org/s/software/Wallbase.cc_Command_line_script.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Wallbase.cc_Command_line_script.html</guid>
                <description>This is a script to download wallpapers from wallbase.cc with bash and wget.</description> 
                <pubDate>Sun, 22 Jul 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 22 Jul 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>ProxBash - a bash script to manage Proxmox VE</title> 
                <link>https://raymii.org/s/software/ProxBash.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/ProxBash.html</guid>
                <description>ProxMox VE is a very nice piece of software to setup a VM host very fast, which also is easy manageable via a webinterface. It supports both OpenVZ and KVM. I use it to manage a few VM's to test stuff on and it works really great. However, I'm a command line lover, and I thought it would be nice to be able to 'Manage' Proxmox VE from a bash shell. And I've written a script to do just that. </description> 
                <pubDate>Thu, 28 Jun 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 28 Jun 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ubuntu/Debian update mailer</title> 
                <link>https://raymii.org/s/software/Ubuntu_update_mailer.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Ubuntu_update_mailer.html</guid>
                <description>This is a bash script for Ubuntu and Debian, to be run by cron on a set interval. It checks if there are apt-updates, and if so, mails an overview of the packages which can be updated, whith their local version, the version available and an URL to the Ubuntu package site where you can see the changelog. I wrote this as an addition for my Nagios monitoring, that only shows how many updates there are, this is a lot more verbose. It also runs on Debian since 1 Nov 2012. Only the links don't work then, because the packages are different.</description> 
                <pubDate>Sun, 10 Jun 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 10 Jun 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Terrible Start</title> 
                <link>https://raymii.org/s/software/Terrible-start.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Terrible-start.html</guid>
                <description>This is a python based Linux start/welcome screen written for Terrible Linux</description> 
                <pubDate>Thu, 07 Jun 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 07 Jun 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Bash script to list all changed files in certain period</title> 
                <link>https://raymii.org/s/software/List-all-changed-files-in-a-certain-period.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/List-all-changed-files-in-a-certain-period.html</guid>
                <description>This is a little script I wrote and use to get a daily report of all the files that have changed on my servers. What it does is list all the files that are modified within a certain time period from a given directory. It can also be run from a desktop machine, or any machine which runs bash, find and ls. Usage is simple, save the script, chmod +x it, then run (./report.sh). If you want a specific directory to be scanned run it like ./report.sh /var/www/my/dir</description> 
                <pubDate>Sun, 13 May 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 13 May 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>NurseCalc o2 - Bash script and online app for Oxygen Calculations</title> 
                <link>https://raymii.org/s/software/Nursecalc-o2.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Nursecalc-o2.html</guid>
                <description>This script will help you with nursing-related oxygen calculations. Available as bash script and as online HTML5 application.</description> 
                <pubDate>Sun, 12 Feb 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 12 Feb 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>NurseCalc Infuus - Bash script and Online app for infusion and drip (speed) Calculations </title> 
                <link>https://raymii.org/s/software/Nursecalc-Infuus.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Nursecalc-Infuus.html</guid>
                <description>This script will help you with nursing-related infusion and drip speed calculations. Available as bash script and as online HTML5 application.</description> 
                <pubDate>Wed, 01 Feb 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 01 Feb 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>MagicProg: Magic the Gathering (RPG/TGC) Life Program </title> 
                <link>https://raymii.org/s/software/Magicprog.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Magicprog.html</guid>
                <description>I'm a fervent [Magic the Gathering][7] player. If you do not know what magic is, scroll down for an explanation. I play it a lot in my free time, and I participate in bootserdrafts and casual tournaments here locally. I've developed a program to keep the life in a 2 player game. It's called MagicProg. It will also work for TGC's like pokemon, yu-gi-oh, WoW TCG or any other TGC. And it has a note area.</description> 
                <pubDate>Tue, 27 Dec 2011 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 27 Dec 2011 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>NoPriv.py - Easy IMAP email backup to HTML archive.</title> 
                <link>https://raymii.org/s/software/Nopriv.py.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Nopriv.py.html</guid>
                <description>NoPriv.py is a python script to backup any IMAP capable email account to a HTML archive, nicely browsable, instead of weird folders (Maildir), one huge file (mbox), only needing a web browser to view (thunderbird) and no propritary code, so you can make sure I won't steal your password.</description> 
                <pubDate>Fri, 01 Jan 2010 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 01 Jan 2010 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>EasyConverter</title> 
                <link>https://raymii.org/s/software/Easyconverter.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Easyconverter.html</guid>
                <description>Zenity wrapper around ffmpeg to convert media files</description> 
                <pubDate>Wed, 23 Dec 2009 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 23 Dec 2009 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>SSHdialog</title> 
                <link>https://raymii.org/s/software/SSHDialog.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/SSHDialog.html</guid>
                <description>SSHdialog - Small command line SSH helper</description> 
                <pubDate>Mon, 26 Oct 2009 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 26 Oct 2009 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Clonezilla Backup Script v0.2</title> 
                <link>https://raymii.org/s/software/Clonezilla-custom-backup-script.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Clonezilla-custom-backup-script.html</guid>
                <description>Clonezilla is wonderfull software. At work we use it daily to image laptops. We have a windows PC with a big hard drive, which is shared via samba. Because we image an average of 10 laptops every morning, I decided to customize the script. So together with a colleague we made a script which automatically grabs our latest image from the share and restores it. </description> 
                <pubDate>Mon, 18 May 2009 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 18 May 2009 00:00:00 GMT</lastBuildDate>
            </item>
    
        </channel>
    </rss>
    
    