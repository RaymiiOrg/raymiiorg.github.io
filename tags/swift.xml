<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <?xml-stylesheet href="/s/inc/rss.xsl" type="text/xsl"?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag swift on Raymii.org</title> 
            <link>https://raymii.org/s/tags/swift.xml</link> 
            <description>RSS feed for tag swift on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/swift.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>Backup OpenStack object store or S3 with rclone</title> 
                <link>https://raymii.org/s/tutorials/Backup_or_Sync_OpenStack_object_store_or_other_cloud_storage_with_rclone.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Backup_or_Sync_OpenStack_object_store_or_other_cloud_storage_with_rclone.html</guid>
                <description>This is a guide that shows you how to make backups of an object storage service like OpenStack swift or S3. Most object store services save data on multiple servers, but deleting a file also deletes it from all servers. Tools like rsync or scp are not compatible most of the time with these services, unless there is a proxy that translates the object store protocol to something like SFTP. rclone is an rsync-like, command line tool that syncs files and directories from cloud storage services like OpenStack swift, Amazon S3, Google cloud/drive, dropbox and more. By having a local backup of the contents of your cloud object store you can restore from accidental deletion or easily migrate between cloud providers. Syncing between cloud providers is also possible. It can also help to lower the RTO (recovery time objective) and backups are just always a good thing to have and test.</description> 
                <pubDate>Thu, 17 Aug 2017 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 17 Aug 2017 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenStack: Quick and automatic instance snapshot backup and restore (and before an apt upgrade) with nova backup</title> 
                <link>https://raymii.org/s/tutorials/OpenStack_Quick_and_automatic_instance_snapshot_backups.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/OpenStack_Quick_and_automatic_instance_snapshot_backups.html</guid>
                <description>This is a guide that shows you how to create OpenStack instance snapshots automatically, quick and easy. This allows you to create a full backup of the entire instance. This guide has a script that makes creating snapshots from an OpenStack VM automatic via cron. The script uses the `nova backup` function, therefore it also has retention and rotation of the backups. It also features an option to create a snapshot before every apt action, upgrade/install/remove. This way, you can easily restore from the snapshot when something goes wrong after an upgrade. Snapshots are very usefull to restore the entire instance to an earlier state. Do note that this is not the same as a file based backup, you can't select a few files to restore, it's all or nothing.</description> 
                <pubDate>Tue, 20 Dec 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 20 Dec 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Openstack Swift Objectstore Access via FTP</title> 
                <link>https://raymii.org/s/tutorials/Openstack-Swift-Objectstore-FTP-Access.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Openstack-Swift-Objectstore-FTP-Access.html</guid>
                <description>This is a guide on accessing the Openstack Swift Object Storage system using an FTP client. Openstack Swift has a beautiful API which you can program to. However, sometimes it is handy to quickly be able to access your Swift/Objectstore data without programming around it. We will use ftp-cloudfs to do this. There is also Softlayers swftp, but that does not support Keystone Authentication (2.0). ftp-cloudfs does support this. The OS X Cyberduck FTP client also has Openstack Swift support, however that is a native implementation, not using FTP. With ftp-cloudfs we can use any ftp client, from Filezilla to midnight commander.</description> 
                <pubDate>Sun, 25 May 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 25 May 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Encrypted Duplicity Backups to Openstack Swift Objectstore</title> 
                <link>https://raymii.org/s/tutorials/Encrypted_Duplicity_Backups_to_Openstack_Swift_Objectstore.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Encrypted_Duplicity_Backups_to_Openstack_Swift_Objectstore.html</guid>
                <description>This is a guide on backing up your data to an Openstack Swift (Objectstore) instance using Duplicity. It provides encrypted backups using gpg so that you can safely use any public cloud storage to store them. This tutorial is for Ubuntu and CentOS and includes initial setup plus a script to automate it all. We will be using the Dutch provider CloudVPS, which is a non american company, so your data is more safe than it is with a provider that is vulnerable to the patriot act. Although your data is already encrypted with GPG, you can never be to sure. CloudVPS provides 10GB free ObjectStore, if you have VPS with them, the data is stored on at least 3 machines in 3 locations and they have a boatload of certifications.</description> 
                <pubDate>Mon, 19 May 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 19 May 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
        </channel>
    </rss>
    
    