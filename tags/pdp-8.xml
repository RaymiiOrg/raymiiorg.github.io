<?xml version="1.0" ?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag pdp-8 on Raymii.org</title> 
            <link>https://raymii.org/s/tags/pdp-8.xml</link> 
            <description>RSS feed for tag pdp-8 on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/pdp-8.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>I've packaged up CKermit as a snap, for Ubuntu 20.04</title> 
                <link>https://raymii.org/s/blog/Ive_packaged_up_CKermit_as_a_snap_for_Ubuntu_20.04.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/Ive_packaged_up_CKermit_as_a_snap_for_Ubuntu_20.04.html</guid>
                <description>Last year I packaged up [gnash as a snap](/s/blog/Ive_packaged_up_Gnash_as_a_Snap_for_modern_linux.html) because it was missing from the Ubuntu 20.04 apt repositories. Recently I found out that `ckermit` is also not in Ubuntu 20.04, as far as I can tell because it wasn't in the Debian repositories when the Ubuntu 20.04 initial sync happened. Which is very inconvenient for an LTS release.
I often use `ckermit` to connect to our hardware via a script, to automatically boot from NFS (via u-boot). I could do that manually via `screen` or `minicom`, but I have a `kermit` script that does it for me, which is very convenient. Since the snapping of `gnash` was so easy, I decided to do it for `ckermit` as well, since I now know how to convert deb packages to snaps. I also have a few colleagues who also use those kermit scripts and are going to update to 20.04 in the (near) future.
The snap packaging is based on work by Phil Roche, he wrote about re-packaging older debian packages with an Ubuntu 18.04/16.04 base layer as a snap. My `ckermit` package is confined (no `--classic` needed), the source code for the snap is on my github and on any snap-enabled distro you can now 'snap install ckermit-raymii' to enjoy CKermit.</description> 
                <pubDate>Sun, 16 May 2021 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 16 May 2021 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Create a PDP-8 OS8 RK05 system disk from RX01 floppies with SIMH (and get text files in and out of the PDP-8)</title> 
                <link>https://raymii.org/s/articles/Creating_an_OS8_RK05_system_disk_from_RX01_floppies_for_the_PDP-8_with_SIMH.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Creating_an_OS8_RK05_system_disk_from_RX01_floppies_for_the_PDP-8_with_SIMH.html</guid>
                <description>This guide shows you how to build an RK05 bootable system disk with OS/8 on it for the PDP-8, in the SIMH emulator. We will use two RX01 floppies as the build source, copy over all the files and set up the LPT printer and the PTR/PIP paper tape punch/readers. As an added bonus the article also shows you how to get text files in and out of the PDP-8 sytem using the printer and papertape reader / puncher.</description> 
                <pubDate>Wed, 07 Dec 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 07 May 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Running WPS-8 (Word Processing System) on the DEC(mate) PDP-8i and SIMH</title> 
                <link>https://raymii.org/s/articles/Running_WPS-8_(Word_Processing_System)_on_the_DEC(mate)_PDP-8i_and_SIMH.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Running_WPS-8_(Word_Processing_System)_on_the_DEC(mate)_PDP-8i_and_SIMH.html</guid>
                <description>This article covers running WPS-8 on a modern day emulator. WPS-8 is a word processor by DEC for the PDP-8. The PDP-8 was a very populair 12-bit minicomputer from 1965. WPS-8 was released around 1970, it came bundled with DEC's VT78 terminal. This terminal bundle was also known as the DECmate. This article covers the setup of the emulator, simh with the correct disk images and terminal settings. It covers basic usage and the features of WPS-8 and it has a section on key remapping. The early keyboards used with WPS-8 have small but incompatible differences with recent keyboards, but nothing that xterm remapping can't fix. </description> 
                <pubDate>Thu, 09 Mar 2017 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 09 Mar 2017 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Toggling in a simple program DEC PDP-8 and PiDP-8 using the switch register</title> 
                <link>https://raymii.org/s/articles/Toggling_in_a_simple_program_on_the_DEC_PDP-8_and_PiDP-8_using_the_switch_register.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Toggling_in_a_simple_program_on_the_DEC_PDP-8_and_PiDP-8_using_the_switch_register.html</guid>
                <description>In this guide I'll show you how to toggle in a simple program on the DEC PDP-8 or the PiDP-8, or in a front-panel simulator named BlinkenBone if you lack the hardware. I have a replica of the PDP-8/I (the PiDP-8) but lacked the actual knowledge on the front panel and switches to get started and do something cool. This guide has step by step instructons, with pictures, and basic explanation. After all, what is an expensive blinking light panel without fun stuff to toggle in?</description> 
                <pubDate>Wed, 08 Jun 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 08 Jun 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Running TSS/8 on the DEC PiDP-8/i and SIMH</title> 
                <link>https://raymii.org/s/articles/Running_TSS_8_on_the_DEC_PiDP-8_i_and_SIMH.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Running_TSS_8_on_the_DEC_PiDP-8_i_and_SIMH.html</guid>
                <description>In this guide I'll show you how run the TSS/8 operating system on the PiDP replica by Oscar Vermeulen, and on SIMH on any other computer. I'll also cover a few basic commands like the editor, user management and system information. TSS-8 was a little time-sharing operating system  released in 1968 and requires a minimum of 12K words of memory and a swapping device; on a 24K word machine, it supports up to 17 users. Each user gets a virtual 4K PDP-8; many of the utilities users ran on these virtual machines were only slightly modified versions of utilities from the Disk Monitor System or paper-tape environments. Internally, TSS-8 consists of RMON, the resident monitor, DMON, the disk monitor (file system), and KMON, the keyboard monitor (command shell). BASIC was well supported, while restricted (4K) versions of FORTRAN D and Algol were available.</description> 
                <pubDate>Sun, 26 Jul 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 26 Jul 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Running Adventure on the DEC PDP-8 with SIMH</title> 
                <link>https://raymii.org/s/articles/Running_ADVENT-on-the-PDP-8-with-SIMH.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Running_ADVENT-on-the-PDP-8-with-SIMH.html</guid>
                <description>In this guide I'll show you how run the classic Colossal Cave Adventure game on a PDP-8, emulated by the SIMH emulator. The PDP-8 was an 12 bit minicomputer made in 1964 by DEC, the Digital Equipment Corporation. We will install and set up SIMH, the emulator with a RK05 diskimage running OS/8. We will use FORTRAN on OS/8 to load ADVENTURE, then we use our brain to play the game. As a bonus, I also show you how to edit files using EDIT, and show you a bit of the OS/8 system.</description> 
                <pubDate>Thu, 23 Jul 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 23 Jul 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
        </channel>
    </rss>
    
    