<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <?xml-stylesheet href="/s/inc/rss.xsl" type="text/xsl"?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag dashboard on Raymii.org</title> 
            <link>https://raymii.org/s/tags/dashboard.xml</link> 
            <description>RSS feed for tag dashboard on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/dashboard.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>Safely expose the Kubernetes Dashboard in Traefik k3s via a ServersTransport</title> 
                <link>https://raymii.org/s/tutorials/Safely_expose_the_Kubernetes_Dashboard_in_Traefik_k3s_via_a_ServersTransport.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Safely_expose_the_Kubernetes_Dashboard_in_Traefik_k3s_via_a_ServersTransport.html</guid>
                <description>I'm using the Headlamp dashboard for my [high-available local kubernetes cluster](/s/tutorials/High_Available_k3s_kubernetes_cluster_with_keepalived_galera_and_longhorn.html) because I find that to be faster, more clear and useful than the full blown Kubernetes Dashboard. In [my first article](/s/tutorials/My_First_Kubernetes_k3s_cluster_on_3_Orange_Pi_Zero_3s_including_k8s_dashboard_hello-node_and_failover.html#toc_4) I accessed the dashboard via a local port forward.
This article documents how to expose the dashboard via an `Ingress` and some `Traefik` specific `annotations`. The dashboard helm chart sets up HTTPS internally, `Traefik` does not like that by default. Most of the time, all internal cluster communication is insecure (I'm not sure why, seems to be a bad idea).
A few of the guides online suggest disabling HTTPS for the dashboard internally or, for the k3s specific case, disabling HTTPS validation entirely. Both of those are too broad for my use case, so I decided to figure out how to make `Traefik` talk to the `kubernetes-dashboard-kong-proxy` via `https`, without disabling certificate validation.</description> 
                <pubDate>Tue, 11 Mar 2025 22:11:00 GMT</pubDate>
                <lastBuildDate>Tue, 11 Mar 2025 22:11:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Openstack Horizon, remove the loading modal with uBlock Origin</title> 
                <link>https://raymii.org/s/articles/Openstack_Horizon_remove_the_loading_modal_with_uBlock_origin.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Openstack_Horizon_remove_the_loading_modal_with_uBlock_origin.html</guid>
                <description>The OpenStack dashboard, Horizon, is a great piece of software to manage your OpenStack resources via the web. However, it has, in my opinion, a very big usability issue. The loading dialog that appears after you click a link. It blocks the entire page and all other links. So, whenever I click, I have to wait three to five seconds before I can do anything else. Clicked the wrong menu item? Sucks to be you, here have some loading. Clicked a link and quickly want to open something in a new tab while the page is still loading? Nope, not today. It's not that browsers have had a function to show that a page is loading, no, of course, the loading indication that has been there forever is not good enough. Let's re-invent the wheel and significantly impact the user experience. With two rules in uBlock Origin this loading modal is removed and you can work normally again in Horizon</description> 
                <pubDate>Thu, 25 May 2017 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 25 May 2017 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Building HA Clusters with Ansible and Openstack</title> 
                <link>https://raymii.org/s/articles/Building_HA_Clusters_With_Ansible_and_Openstack.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Building_HA_Clusters_With_Ansible_and_Openstack.html</guid>
                <description>This is an extensive guide on building high available clusters with Ansible and Openstack. We'll build a Highly available cluster consisting out of two load balancers, two database servers and two application servers running a simple wordpress site. This is all done with Ansible, the cluster nodes are all on Openstack. Ansible is a super awesome orchestration tool and Openstack is a big buzzword filled software suite for datacenter virtualization.</description> 
                <pubDate>Fri, 25 Jul 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 25 Jul 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Openstack Horizon installation with SSL on Ubuntu</title> 
                <link>https://raymii.org/s/tutorials/Openstack-Set-Up-Horizon-Dashboard-on-Ubuntu.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Openstack-Set-Up-Horizon-Dashboard-on-Ubuntu.html</guid>
                <description>This is a guide on installing the Openstack Horizon (icehouse) dashboard on Ubuntu 12.04 or 14.04, including SSL setup. It features nice screenshots and even an Ansible playbook to automate it all.</description> 
                <pubDate>Thu, 29 May 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 29 May 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
        </channel>
    </rss>
    
    