<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <?xml-stylesheet href="/s/inc/rss.xsl" type="text/xsl"?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag high-availability on Raymii.org</title> 
            <link>https://raymii.org/s/tags/high-availability.xml</link> 
            <description>RSS feed for tag high-availability on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/high-availability.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>High Available k3s kubernetes cluster with keepalived, galera and longhorn</title> 
                <link>https://raymii.org/s/tutorials/High_Available_k3s_kubernetes_cluster_with_keepalived_galera_and_longhorn.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/High_Available_k3s_kubernetes_cluster_with_keepalived_galera_and_longhorn.html</guid>
                <description> After my [first adventure with Kubernetes](/s/tutorials/My_First_Kubernetes_k3s_cluster_on_3_Orange_Pi_Zero_3s_including_k8s_dashboard_hello-node_and_failover.html), getting started with k3s on my small 3 node ARM cluster that [boots via PXE / NFS](/s/tutorials/Netboot_PXE_Armbian_on_an_Orange_Pi_Zero_3_from_SPI_with_NFS_root_filesystem.html), I noticed that there is only one k3s node that has the `control-plane,master` role. If that node fails you can no longer manager the cluster. Other nodes can fail and then the workloads (pods) will be restarted eventually after 5 minutes, but this node is special. Time to change that and make it a high available cluster.
K3s [supports](https://web.archive.org/web/20240703112841/https://docs.k3s.io/datastore/ha) high-availability with embedded `etcd` and with external databases like `MySQL` and `postgres`. `etcd` will thrash your storage (SD cards) so I decided to go with a `MySQL` cluster using `Galera` for the database and `keepalived` for the High Available Cluster IP. This guide will show you how to configure the HA database and HA-IP and I'll also setup [longhorn](https://web.archive.org/web/20240707025724/https://longhorn.io/) for high-available block storage inside kubernetes. The end result is that I can pull the power from any two of the three nodes without the k3s cluster or workloads going down. </description> 
                <pubDate>Tue, 09 Jul 2024 22:30:00 GMT</pubDate>
                <lastBuildDate>Tue, 09 Jul 2024 22:30:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Proxmox VE 7 Corosync QDevice in a Docker container</title> 
                <link>https://raymii.org/s/tutorials/Proxmox_VE_7_Corosync_QDevice_in_Docker.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Proxmox_VE_7_Corosync_QDevice_in_Docker.html</guid>
                <description>At home I have a 2 node Proxmox VE cluster consisting of 2 HP EliteDesk Mini machines, both running with 16 GB RAM and both an NVMe and SATA SSD with ZFS on root (256 GB). It's small enough (physically) and is just enough for my homelab needs specs wise. Proxmox VE has support for clustering. For a cluster (in any sense of the word), you need at least 3 nodes, otherwise there is no quorum. Corosync, the cluster software used by Proxmox, supports an external Quorum device. This is a small piece of software running on a third node which provides an extra vote for the quorum. In my case I wanted to run this on my NAS, since (physical) space is a premium. The NAS supports Docker, this guide explains how to run the QDevice for Proxmox VE 7 in a Docker container. There is a qdevice Docker image on the Docker hub but that guide does not work for Proxmox VE 7 and requires a lot of manual setup. Using my method involves a lot less steps, since you're basically running an extra debian VPS (a container with systemd and openssh).</description> 
                <pubDate>Sun, 17 Apr 2022 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 29 Jan 2024 04:30:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Adding IPv6 to a keepalived and haproxy cluster</title> 
                <link>https://raymii.org/s/articles/Adding_IPv6_to_a_keepalived_and_haproxy_cluster.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Adding_IPv6_to_a_keepalived_and_haproxy_cluster.html</guid>
                <description>At work I regularly build high-available clusters for customers, where the setup is distributed over multiple datacenters with failover software. If one component fails, the service doesn't experience issues or downtime due to the failure. Recently I was tasked with expanding a cluster setup to be also reachable via IPv6. This article goes over the settings and configuration required for haproxy and keepalived for IPv6. The internal cluster will only be IPv4, the loadbalancer terminates HTTP and HTTPS connections. </description> 
                <pubDate>Sun, 24 Sep 2017 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 24 Sep 2017 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Keepalived notify script, execute action on failover</title> 
                <link>https://raymii.org/s/tutorials/Keepalived_notify_script_execute_action_on_failover.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Keepalived_notify_script_execute_action_on_failover.html</guid>
                <description>Keepalived supports running scripts on VRRP state change. This can come in handy when you need to execute an action when a failover occurs. In my case, I have a VPN running on a Virtual IP and want to make sure the VPN only runs on the node with the Virtual IP.</description> 
                <pubDate>Sun, 26 Oct 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 26 Oct 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Simple keepalived failover setup on Ubuntu 14.04</title> 
                <link>https://raymii.org/s/tutorials/Keepalived-Simple-IP-failover-on-Ubuntu.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Keepalived-Simple-IP-failover-on-Ubuntu.html</guid>
                <description>We are going to set up very simple keepalived IP failover on Ubuntu 14.04. Keepalived is a piece of software which can be used to achieve high availability by assigning two or more nodes a virtual IP and monitoring those nodes, failing over when one goes down.  Keepalived can do more, like load balancing and monitoring, but this tutorial focusses on a very simple setup, just IP failover.</description> 
                <pubDate>Fri, 13 Jun 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 13 Jun 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Corosync Pacemaker - Execute script on failover</title> 
                <link>https://raymii.org/s/tutorials/Corosync_Pacemaker_-_Execute_a_script_on_failover.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Corosync_Pacemaker_-_Execute_a_script_on_failover.html</guid>
                <description>With Corosync/Pacemaker there is no easy way to simply run a script on failover. There are good reasons for this, but sometimes you want to do something simple. This tutorial describes how to change the Dummy OCF resource to execute a script on failover.</description> 
                <pubDate>Wed, 20 Nov 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 20 Nov 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Corosync Notes</title> 
                <link>https://raymii.org/s/snippets/Corosync_Notes.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/Corosync_Notes.html</guid>
                <description>These are my notes and command snippets for usage with Corosync.</description> 
                <pubDate>Sat, 02 Nov 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 02 Nov 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
        </channel>
    </rss>
    
    