<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <?xml-stylesheet href="/s/inc/rss.xsl" type="text/xsl"?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag csv on Raymii.org</title> 
            <link>https://raymii.org/s/tags/csv.xml</link> 
            <description>RSS feed for tag csv on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/csv.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>C++ create and write to a CSV file with a variadic template</title> 
                <link>https://raymii.org/s/snippets/Cpp_create_and_write_to_a_CSV_file_with_a_variadic_template.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/Cpp_create_and_write_to_a_CSV_file_with_a_variadic_template.html</guid>
                <description>In this snippet I'll show you a variadic template to write to a file. In line with my other experiments to get a better grasp at templates, this example improves on my earlier attempt by using a variadic template, thus allowing you to provide an infinite number of columns to the csv file of any type that has the overloaded &lt;&lt; operator.</description> 
                <pubDate>Mon, 17 Jun 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 17 Jun 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>C++ create and write to a CSV file</title> 
                <link>https://raymii.org/s/snippets/Cpp_create_and_write_to_a_csv_file.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/Cpp_create_and_write_to_a_csv_file.html</guid>
                <description>In this quick snippet I'll show you how to create and write to a csv file. It includes checking if the file is writable, and if it's not there, creates it with a different first row as header. It's a quick example, I've used it to log some test data. It can probably be improved.</description> 
                <pubDate>Fri, 07 Jun 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 16 Jun 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
        </channel>
    </rss>
    
    