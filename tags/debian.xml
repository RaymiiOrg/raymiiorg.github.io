<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <?xml-stylesheet href="/s/inc/rss.xsl" type="text/xsl"?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag debian on Raymii.org</title> 
            <link>https://raymii.org/s/tags/debian.xml</link> 
            <description>RSS feed for tag debian on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/debian.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>My 24 year old HP Jornada can do things your modern iPhone still can't do!</title> 
                <link>https://raymii.org/s/blog/My_24_year_old_HP_Jornada_can_do_things_your_modern_iPhone_still_cant_do.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/My_24_year_old_HP_Jornada_can_do_things_your_modern_iPhone_still_cant_do.html</guid>
                <description>I like to tinker with old hardware. The [DEC](https://raymii.org/s/tags/dec.html) PDP-8 is my favorite [retro computer](/s/tags/pdp-8.html) and [Office 2003](/s/blog/Using_a_Windows_Mobile_2003_PDA_hp_ipaq_in_2022_including_whatsapp.html) is the best version ever released IMHO.  One of my other favorite retro devices is the HP Jornada 720. A small `handheld PC` (smaller than a netbook) running Windows CE or in my case, Linux. It has a decent keyboard, CFL backlit screen, **32 MB of RAM(!)**, a compact Flash card for storage and a stylus for the resistive touchscreen. Oh and I got a 10Mbit PCMCIA network card, but wireless cards are also still available. It might be old, released in 1999, but can do one thing your modern iPhone can't. </description> 
                <pubDate>Thu, 15 Jun 2023 01:30:00 GMT</pubDate>
                <lastBuildDate>Thu, 15 Jun 2023 01:30:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>APT keeps complaining that the HTTPS certificate cannot be validated?</title> 
                <link>https://raymii.org/s/blog/Syncthing_apt_repo_keeps_complaining_HTTPS_certificate_could_not_be_validated.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/Syncthing_apt_repo_keeps_complaining_HTTPS_certificate_could_not_be_validated.html</guid>
                <description>Recently a few of my Ubuntu 20.04 and Debian 11 servers failed to run an `apt update` because it insisted that the HTTPS certificate for a repository could not be validated, while `curl` on the same system had no issues connecting. Join me on a deep dive into certificate validation and troubleshooting `apt`, digging into the C++ source code for `apt` and `GnuTLS` and in the end, it turned out to be my own fault due to permission on a folder. However, the error messages were totally unhelpful resolving the mysterious validation problem. This article was written over the period of a few days, chronologically during troubleshooting.</description> 
                <pubDate>Wed, 11 Jan 2023 05:31:00 GMT</pubDate>
                <lastBuildDate>Wed, 11 Jan 2023 05:31:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Using IceWM and a Raspberry Pi as my main PC, sharing my theme, config and some tips and tricks.</title> 
                <link>https://raymii.org/s/blog/Using_IceWM_and_sharing_my_config_and_tips_tricks.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/Using_IceWM_and_sharing_my_config_and_tips_tricks.html</guid>
                <description>KDE is my desktop environment of choice. KDE5 is rock-solid, configurable in any way possible and works great. It treats you like a responsible adult instead of a child like GNOME does these days, and after XFCE switched to GTK3, the RAM usage is on-par, more often than not a bare KDE install (Debian or Arch) uses around 300MB ram. This is with Baloo (search indexer) and Akonadi (PIM database backend) disabled. Great default behaviour, low resource usage and enourmous configurability, so why is this post then titled 'IceWM'? At home I'm using a small ARM device (Raspberry Pi 4 with an SSD) as my main computer, and there resources are limited. KDE runs fine, but you notice that it is a bit slower than on my work computer. IceWM on the other hand, uses less than 30 MB of RAM and even less CPU. The program that gives you a desktop background, icewmbg, uses double the RAM of IceWM itself! IceWM, next to Awesome, is one of my favorite window managers, very configurable and provides all I need. This PC doesn't have multiple screens, which would be a bit more of a hassle than with KDE. After switching, the machine feels a lot faster. It's the small details in which I notice it, like text input, a few seconds of lag here and there. This post shows my IceWM config including some options explained, my IceWM theme and a few tips and tricks to configure the rest of the desktop.</description> 
                <pubDate>Sat, 10 Jul 2021 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 10 Jul 2021 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>All packages that were present in Ubuntu 18.04 but absent in Ubuntu 20.04</title> 
                <link>https://raymii.org/s/articles/All_packages_that_were_present_in_Ubuntu_18.04_but_removed_in_20.04.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/All_packages_that_were_present_in_Ubuntu_18.04_but_removed_in_20.04.html</guid>
                <description>Otherwise titled `Figure out the differences between two apt repositories`. Recently I've had a few packages that I often use but were missing from Ubuntu 20.04 LTS. One is [ckermit](/s/blog/Ive_packaged_up_CKermit_as_a_snap_for_Ubuntu_20.04.html) and the other is [gnash](/s/blog/Ive_packaged_up_Gnash_as_a_Snap_for_modern_linux.html), both of which I 'converted' to a snap. (In air quotes because I just converted the 18.04 deb). This made me wonder if I could figure out a list of that are present in Ubuntu 18.04, but absent in Ubuntu 20.04. As `apt` and `dpkg` are standardized tools and and package formats, we can use a few shell tools to parse the package lists and compare them side by side.
This post shows you how to do the comparison yourself and I discuss the removed packages a bit. Some are version increments (like `gcc-6` in Ubuntu 18.04 but `gcc-7`in Ubuntu 20.04),  and some are packages that were combined into one instead of split up  (like `ltsp` in Ubuntu 20.04 but a bunch of seperate `ltsp-$postfix` packages instead  in Ubuntu 18.04). Many others are just replaced by newer versions (`python-ceph` vs `python3-ceph`). The list of differences is provided as a download, both ways.</description> 
                <pubDate>Wed, 19 May 2021 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 19 May 2021 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>I've packaged up CKermit as a snap, for Ubuntu 20.04</title> 
                <link>https://raymii.org/s/blog/Ive_packaged_up_CKermit_as_a_snap_for_Ubuntu_20.04.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/Ive_packaged_up_CKermit_as_a_snap_for_Ubuntu_20.04.html</guid>
                <description>Last year I packaged up [gnash as a snap](/s/blog/Ive_packaged_up_Gnash_as_a_Snap_for_modern_linux.html) because it was missing from the Ubuntu 20.04 apt repositories. Recently I found out that `ckermit` is also not in Ubuntu 20.04, as far as I can tell because it wasn't in the Debian repositories when the Ubuntu 20.04 initial sync happened. Which is very inconvenient for an LTS release.
I often use `ckermit` to connect to our hardware via a script, to automatically boot from NFS (via u-boot). I could do that manually via `screen` or `minicom`, but I have a `kermit` script that does it for me, which is very convenient. Since the snapping of `gnash` was so easy, I decided to do it for `ckermit` as well, since I now know how to convert deb packages to snaps. I also have a few colleagues who also use those kermit scripts and are going to update to 20.04 in the (near) future.
The snap packaging is based on work by Phil Roche, he wrote about re-packaging older debian packages with an Ubuntu 18.04/16.04 base layer as a snap. My `ckermit` package is confined (no `--classic` needed), the source code for the snap is on my github and on any snap-enabled distro you can now 'snap install ckermit-raymii' to enjoy CKermit.</description> 
                <pubDate>Sun, 16 May 2021 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 16 May 2021 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>I've packaged up Gnash as a snap, for modern linux</title> 
                <link>https://raymii.org/s/blog/Ive_packaged_up_Gnash_as_a_Snap_for_modern_linux.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/Ive_packaged_up_Gnash_as_a_Snap_for_modern_linux.html</guid>
                <description>I hate snaps just as much as the next guy but last week I did something unexpected. I packaged up Gnash as a snap.  Gnash is a GNU flash media player, not updated since 2011, and  thus removed from the Ubuntu 20.04 repositories. The snap packaging is based on work by phil roche, he wrote about re-packaging older debian packages with an Ubuntu 18.04/16.04 base layer as a snap. My gnash package is confined (no '--classic' needed), the source code for the snap is on my github and on any snap-enabled distro you can now 'snap install gnash-raymii' to enjoy Gnash again.</description> 
                <pubDate>Mon, 07 Dec 2020 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 15 May 2021 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Limit specific process memory on desktop linux with cgroups and earlyoom</title> 
                <link>https://raymii.org/s/articles/Limit_specific_process_memory_on_desktop_linux_with_cgroups.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Limit_specific_process_memory_on_desktop_linux_with_cgroups.html</guid>
                <description>On my laptop I recently had trouble with out of memory issues when running `clion`, `firefox`, `thunderbird`, `teams` and a virtualbox VM. To combat this, I've setup cgroups to limit how much RAM specific applications can use and configured `earlyoom`, a very nifty tool that checks available memory and kills the process with the highest `oom_score` if available memory falls below 5%. Otherwise, my laptop would first grind to a halt (even without swap) and only after half an hour of seemingly being stuck would the OOM killer kick in. With `earlyoom` this hanging behavior is gone, although sometimes applications get killed when I don't expect it. I've given firefox, thunderbird and teams a cgroup with memory limit and clion and virtualbox use their own configuration to limit their RAM usage.This post details how to setup `cgroups` to limit memory of specific processes including automatically placing process inside a cgroup.</description> 
                <pubDate>Sat, 13 Feb 2021 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 13 Feb 2021 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>The Common Desktop Environment (CDE) is still developed and modern in 2021</title> 
                <link>https://raymii.org/s/blog/The_Common_Desktop_Environment_CDE_is_still_developed_in_2021.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/The_Common_Desktop_Environment_CDE_is_still_developed_in_2021.html</guid>
                <description>While playing around with the GUI on OpenVMS I was looking for CDE documentation and I found out CDE is still being developed and can be installed on modern linux. This quick post shows you how to install CDE on Debian 10 and includes a bit on compiling GENERIC TETRIS, the same program I installed on OpenVMS. Really cool to compile and run a game from 1992 on a retro/modern desktop environment.</description> 
                <pubDate>Thu, 28 Jan 2021 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 28 Jan 2021 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Local incremental backups of Google Photos on Ubuntu with gphotos-sync</title> 
                <link>https://raymii.org/s/tutorials/Local_incremental_Google_Photos_backup_on_Ubuntu.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Local_incremental_Google_Photos_backup_on_Ubuntu.html</guid>
                <description>'Google Photos' no longer syncs with 'Google Drive' or with their 'Backup and Sync' desktop software. There used to be a checkbox to get your 'Google Photos' pictures in 'Google Drive' but that has been disabled. I used that feature together with their 'Backup and Sync' tool to sync all the photos in 'Google Photos' to my local Windows computer. From there I use 'DigiKam'  to manage the photos and backup them offline and offsite. Due to Google removing that feature, I had to go find another way to get the pictures out of 'Google Photos', which, after a few months of (automated) use, 'gphotos-sync' on Ubuntu seems to be the best, stable choice. In this guide I'll show you how to setup incremental backups from 'Google Photos' on Ubuntu. My 'DigiKam' database moved over without problems, and now I'm glad I don't have to use Windows for picture managemant anymore.</description> 
                <pubDate>Mon, 24 Aug 2020 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 24 Aug 2020 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Get webcam resolution and info on Ubuntu and fix HD</title> 
                <link>https://raymii.org/s/tutorials/Get_webcam_resolution_and_info_on_Ubuntu_and_fix_HD.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Get_webcam_resolution_and_info_on_Ubuntu_and_fix_HD.html</guid>
                <description>With all the video calling nowdays due to working from home I decided to get a webcam. Since I mostly work at a workstation, I have no microphone or camera built in. A friend gave me a spare webcam, a generic non-brand. It says 'HD Camera' on the box, but by default it records in 640x480. Using a few tools on Ubuntu you can figure out what resolutions are supported for your device. It turned out to be Cheese, the webcam capture program I used, not supporting the 'mjpeg' format, just the 'yuyv' RAW format. Using another webcam program named Webcamoid solved it, that program was able to use mjpeg.</description> 
                <pubDate>Sun, 23 Aug 2020 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 23 Aug 2020 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Running gnash on Ubuntu 20.04 (in Docker with X11 forwarding)</title> 
                <link>https://raymii.org/s/tutorials/Running_gnash_on_Ubuntu_20.04.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Running_gnash_on_Ubuntu_20.04.html</guid>
                <description>As you might have noticed, I'm slowly updating servers and workstations to Ubuntu 20.04, and as always with major upgrades, things break or are removed. Earlier this week I fixed up pygopherd and today I'll get gnash running again. Gnash is not updated since 2011 and therefore, finally, removed from the Ubuntu 20.04 repositories. Compiling it from source proved to be a lot of effort due to gstreamer dependencies and after a few hours I thought, why not just spin up a Ubuntu 18.04 Docker container, install gnash and forward X11. That took just about 10 minutes and now I'm happily running gnash again. In this tutorial I'll show you how to setup gnash in a docker container with x11 forwarding and host networking.</description> 
                <pubDate>Sun, 05 Jul 2020 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 05 Jul 2020 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Installing PyGopherd on Ubuntu 20.04</title> 
                <link>https://raymii.org/s/tutorials/Installing_PyGopherd_on_Ubuntu_20.04.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Installing_PyGopherd_on_Ubuntu_20.04.html</guid>
                <description>Ubuntu 20.04 dropped the Pygopherd package. There is no way to install it from the official repositories. In this guide I'll show you two ways to install the version from Ubuntu 18.04, which still works perfectly on 20.04. Either via just downloading the 2 deb packages, or via `apt pinning` from the previous (18.04) repository.</description> 
                <pubDate>Sat, 04 Jul 2020 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 04 Jul 2020 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Personal Wireguard VPN on a Freedombox with Debian</title> 
                <link>https://raymii.org/s/tutorials/Wireguard_VPN_on_Freedombox.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Wireguard_VPN_on_Freedombox.html</guid>
                <description>This guide will show you how to set up a personal Wireguard VPN server on Debian or Ubuntu with Freedombox. Freedombox will be used to manage the VPN software, firewall and users. Wireguard is a relatively new VPN built in to the linux kernel. Freedombox is a long running project under the Debian umbrella providing a private server for non experts with focus on user freedom, ease of use and privacy. Combined, those two make a great pair. In the past I've written many articles on how to setup your own personal VPN server, but those all required manual setup and maintenance. With freedombox, the updates are automatic and the management is hidden away behind a convenient web interface. </description> 
                <pubDate>Mon, 03 Feb 2020 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 03 Feb 2020 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Installing Freedombox on Armbian on the Olimex Pioneer</title> 
                <link>https://raymii.org/s/tutorials/Installing_Freedombox_On_Armbian_On_The_Olimex_A20_Pioneer.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Installing_Freedombox_On_Armbian_On_The_Olimex_A20_Pioneer.html</guid>
                <description>FreedomBox is a private server for non-experts: it lets you install and configure server applications with only a few clicks. It runs on cheap hardware of your choice, uses your internet connection and power, and is under your control. Last year the Pioneer became available, officially supported and sanctioned by the Freedombox Foundation. This is a home server you can buy from Olimex, comes in a nice metal case with a proper power supply, network cable, battery and SD card preloaded with Freedombox. Plug in and go. Perfect for users that don't want to tinker but do want their freedom and control. With the Pioneer, both the hardware and software are fully open source. In the default provided distribution for the Pioneer there are a few things I dislike. This guide covers the installation of Freedombox and Debian for the Olimex A20 Lime2 Pioneer with Armbian including reinstalling, Apache SSL certificate and LDAP issues.</description> 
                <pubDate>Wed, 29 Jan 2020 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 29 Jan 2020 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenStack nova get-password, set-password and post encrypted password to metadata service</title> 
                <link>https://raymii.org/s/tutorials/OpenStack_nova_get_-_password_set_-_password_and_post_encrypted_password_to_metadata_service.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/OpenStack_nova_get_-_password_set_-_password_and_post_encrypted_password_to_metadata_service.html</guid>
                <description>When you create images for an OpenStack Cloud you want to use 'cloud' features. Fancy term for automatic resizing of your instance disk, adding an SSH key, (re)setting passwords and executing scripts on first boot to configure your instance further. OpenStack provides the metadata service for instances, which supplies information for the instance, like its public IP, SSH public key that was provided and vendor or user provided data like scripts or information. The OpenStack metadata service allows an instance to post data to an endpoint wich can be retreived with the 'nova get-password' command. It is meant to be an encrypted password (with the public SSH key) but it can be any plain text as well and it doesn't have to be the root password. In this guide I'll go over the scripts I use inside linux images to post a password to the metadata service and the 'nova' commands such as 'set-password' and 'get-password'. That includes decrypting a password with an SSH key that is password-protected (Horizon and nova don't support that) and the 'nova set-password' command, which sets the root password inside an instance when it has the 'qemu-guest-agent' installed and running.</description> 
                <pubDate>Sun, 25 Mar 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 25 Mar 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenStack: Quick and automatic instance snapshot backup and restore (and before an apt upgrade) with nova backup</title> 
                <link>https://raymii.org/s/tutorials/OpenStack_Quick_and_automatic_instance_snapshot_backups.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/OpenStack_Quick_and_automatic_instance_snapshot_backups.html</guid>
                <description>This is a guide that shows you how to create OpenStack instance snapshots automatically, quick and easy. This allows you to create a full backup of the entire instance. This guide has a script that makes creating snapshots from an OpenStack VM automatic via cron. The script uses the `nova backup` function, therefore it also has retention and rotation of the backups. It also features an option to create a snapshot before every apt action, upgrade/install/remove. This way, you can easily restore from the snapshot when something goes wrong after an upgrade. Snapshots are very usefull to restore the entire instance to an earlier state. Do note that this is not the same as a file based backup, you can't select a few files to restore, it's all or nothing.</description> 
                <pubDate>Tue, 20 Dec 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 20 Dec 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>IPSEC VPN on Ubuntu 16.04 with StrongSwan</title> 
                <link>https://raymii.org/s/tutorials/IPSEC_vpn_with_Ubuntu_16.04.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/IPSEC_vpn_with_Ubuntu_16.04.html</guid>
                <description>This is a guide on setting up an IPSEC VPN server on Ubuntu 16.04 using StrongSwan as the IPsec server and for authentication. It has a detailed explanation with every step. We choose the IPSEC protocol stack because of vulnerabilities found in pptpd VPNs and because it is supported on all recent operating systems by default. More than ever, your freedom and privacy when online is under threat. Governments and ISPs want to control what you can and can't see while keeping a record of everything you do, and even the shady-looking guy lurking around your coffee shop or the airport gate can grab your bank details easier than you may think. A self hosted VPN lets you surf the web the way it was intended: anonymously and without oversight.</description> 
                <pubDate>Mon, 12 Sep 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 12 Sep 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Raspberry Pi unattended upgrade Raspbian to Debian Testing</title> 
                <link>https://raymii.org/s/blog/Raspberry_Pi_Raspbian_Unattended_Upgrade_Jessie_to_Testing.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/Raspberry_Pi_Raspbian_Unattended_Upgrade_Jessie_to_Testing.html</guid>
                <description>I'm working on a Nitrokey/SmartCard-HSM cluster article and therefore I needed three identical computers. The current version of Raspbian (2016-05-27) is based on Debian Jessie and comes with a version of OpenSC that is too old (0.14) to work with the Nitrokey/SmartCard-HSM. Since there is no Ubuntu 16.04 official image yet I decided to upgrade Raspbian to Debian Testing. Since I don't want to answer yes to any config file changes or service restarts I figured out how to do an unattended dist-upgrade.</description> 
                <pubDate>Wed, 27 Jul 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 27 Jul 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Recursively find all [installed] package dependencies</title> 
                <link>https://raymii.org/s/software/Recursively_find_all_installed_package_dependencies.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Recursively_find_all_installed_package_dependencies.html</guid>
                <description>This small script shows you all packages [installed] that are a dependency from a package, and the dependencies of those packages. I installed the build-essential package, but apt-get remove-ing that package doens't remove the development tools. So I was wondering what packages were installed, including those dependencies, to remove the ones I didn't want. This small script shows you all packages that are dependencies of a package, and repeats that for those packages.</description> 
                <pubDate>Thu, 31 Dec 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 31 Dec 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>IPSEC VPN on Ubuntu 15.10 with StrongSwan</title> 
                <link>https://raymii.org/s/tutorials/IPSEC_vpn_with_Ubuntu_15.10.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/IPSEC_vpn_with_Ubuntu_15.10.html</guid>
                <description>This is a guide on setting up an IPSEC VPN server on Ubuntu 15.04 using StrongSwan as the IPsec server and for authentication. It has a detailed explanation with every step. We choose the IPSEC protocol stack because of vulnerabilities found in pptpd VPNs and because it is supported on all recent operating systems by default. More than ever, your freedom and privacy when online is under threat. Governments and ISPs want to control what you can and can't see while keeping a record of everything you do, and even the shady-looking guy lurking around your coffee shop or the airport gate can grab your bank details easier than you may think. A self hosted VPN lets you surf the web the way it was intended: anonymously and without oversight.</description> 
                <pubDate>Sun, 20 Dec 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 20 Dec 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>IPSEC VPN on Ubuntu 15.04 with StrongSwan</title> 
                <link>https://raymii.org/s/tutorials/IPSEC_vpn_with_Ubuntu_15.04.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/IPSEC_vpn_with_Ubuntu_15.04.html</guid>
                <description>This is a guide on setting up an IPSEC VPN server on Ubuntu 15.04 using StrongSwan as the IPsec server and for authentication. It has a detailed explanation with every step. We choose the IPSEC protocol stack because of vulnerabilities found in pptpd VPNs and because it is supported on all recent operating systems by default. More than ever, your freedom and privacy when online is under threat. Governments and ISPs want to control what you can and can't see while keeping a record of everything you do, and even the shady-looking guy lurking around your coffee shop or the airport gate can grab your bank details easier than you may think. A self hosted VPN lets you surf the web the way it was intended: anonymously and without oversight.</description> 
                <pubDate>Sun, 20 Dec 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 20 Dec 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Make OpenELEC/Kodi work with the Sitecom CN-524/ Cambridge Silicon Radio (CSR) 8510 A10 Bluetooth USB adapter on the Raspberry Pi.</title> 
                <link>https://raymii.org/s/tutorials/Make_Openelec_Kodi_work_with_the_Sitecom_CN-524_Cambridge_Silicon_Radio_CSR_8510_A10_Bluetooth_USB_adapter_on_the_Raspberry_Pi.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Make_Openelec_Kodi_work_with_the_Sitecom_CN-524_Cambridge_Silicon_Radio_CSR_8510_A10_Bluetooth_USB_adapter_on_the_Raspberry_Pi.html</guid>
                <description>Recently I set up a Kodi (XMBC) media center on a Raspberry Pi.  The setup is mounted on a flatscreen TV and uses a small Wifi dongle for network access and a small Bluetooth dongle for a Rapoo E6700 wireless bluetooth keyboard/touchpad. This is a nice bluetooth keyboard/mouse combo for a media center, it charges via micro USB. That saves a lot of battery hassle. The bluetooth adapter is a Sitecom CN-524, which was the only one my local electronic store had available. It however does not work with linux/Kodi by default. This is because the device boots in a wrong mode. This guide shows you how this can be fixed and the necessary software changes for OpenELEC.</description> 
                <pubDate>Thu, 01 Oct 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 01 Oct 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Olimex OlinuXino A20 LIME2 mainline 4.0.0 kernel, u-boot and debian rootfs image building tutorial</title> 
                <link>https://raymii.org/s/articles/Olimex_OlinuXino_A20_Lime2_Kernel_3.19_uBoot_Debian_7_image_building.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Olimex_OlinuXino_A20_Lime2_Kernel_3.19_uBoot_Debian_7_image_building.html</guid>
                <description>The Olimex OlinuXino A20 LIME2 is an amazing, powerfull and cheap open source ARM development board. It costs EUR 45, and has 160 GPIO pins. This is a guide to build a linux image with Debian and the mainline 4.0.0 kernel for the Olimex A20-Lime2 board, from scratch. By default it comes with an 3.4 kernel with binary blobs and patches from Allwinner. Recently the mainline kernel has gained support for these boards, you can now run and use the mainline kernel without these awfull non-free binary blobs.</description> 
                <pubDate>Sat, 21 Mar 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 21 Mar 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Installing Virtual Machines with virt-install, plus copy pastable distro install one-liners</title> 
                <link>https://raymii.org/s/articles/virt-install_introduction_and_copy_paste_distro_install_commands.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/virt-install_introduction_and_copy_paste_distro_install_commands.html</guid>
                <description>virt-install is a command line tool for creating new KVM , Xen or Linux container guests using the libvirt hypervisor management library. It allows you to create a VM and start an installation from the command line. This article has a few copy pastable getting started examples for different distro's.</description> 
                <pubDate>Sun, 08 Feb 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 08 Feb 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Raspberry Pi FM radio transmitter with Buttons</title> 
                <link>https://raymii.org/s/articles/Raspberry_Pi_FM_Radio_With_Buttons.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Raspberry_Pi_FM_Radio_With_Buttons.html</guid>
                <description>The PiFM project allows you to use a Raspberry Pi to send out a WAV file on the FM band. This is awesome because every normal radio then can receive your music/podcast without expensive (sonos) equipment. I've used a lasercutter to craft a new top plate for my Pi which has room for three buttons. These are hooked up to a python script which allows me to start and stop the transmission, and skip or go back songs. It also allows me to shut down the Pi instead of just pulling the power cable.</description> 
                <pubDate>Wed, 04 Feb 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 04 Feb 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Olimex OlinuXino A20 LIME2 Minimal Debian 7 Image</title> 
                <link>https://raymii.org/s/articles/Olimex_A20-OLinuXino-LIME2_minimal_debian_7_image.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Olimex_A20-OLinuXino-LIME2_minimal_debian_7_image.html</guid>
                <description>The Olimex OlinuXino A20 LIME2 is an amazing, powerfull and cheap open source ARM development board. It costs EUR 45, and has 160 GPIO pins. The default Debian image from OlimeX is quite huge and bloated, over 2,5 GB, with X and all. I do not want a huge image, so I stripped it down to a 200 MB image with only dhcp and ssh and a few basic tools. It uses about 15 MB of RAM. This image allows you to start with almost nothing and build up only what you need.</description> 
                <pubDate>Wed, 28 Jan 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 28 Jan 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Olimex OlinuXino a10 Lime uBoot, Kernel and root image guide</title> 
                <link>https://raymii.org/s/articles/Olimex_OlinuXino _10 Lime_uBoot_Kernel.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Olimex_OlinuXino _10 Lime_uBoot_Kernel.html</guid>
                <description>The Olimex OlinuXino A10 LIME is an amazing, powerfull and cheap open source ARM development board. It costs EUR 30, and has 160 GPIO. This guide is a cleaned up version of theirs with instructions to build your own kernel and u-boot image on Ubuntu 14.04.</description> 
                <pubDate>Sat, 20 Dec 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 20 Dec 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>IPSEC L2TP VPN on Ubuntu 13.10 with OpenSwan, xl2tpd and ppp</title> 
                <link>https://raymii.org/s/tutorials/IPSEC_L2TP_vpn_with_Ubuntu_13.10.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/IPSEC_L2TP_vpn_with_Ubuntu_13.10.html</guid>
                <description>This is a guide on setting up an IPSEC/L2TP vpn server with Ubuntu 13.10 using Openswan as the IPsec server, xl2tpd as the l2tp provider and ppp or local users / PAM for authentication. It has a detailed explanation with every step.</description> 
                <pubDate>Mon, 01 Dec 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 01 Dec 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>IPSEC L2TP VPN on Ubuntu 12.10 with OpenSwan, xl2tpd and ppp</title> 
                <link>https://raymii.org/s/tutorials/IPSEC_L2TP_vpn_with_Ubuntu_12.10.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/IPSEC_L2TP_vpn_with_Ubuntu_12.10.html</guid>
                <description>Not available.</description> 
                <pubDate>Mon, 01 Dec 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 01 Dec 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>IPSEC L2TP VPN on Ubuntu 12.04 with OpenSwan, xl2tpd and ppp</title> 
                <link>https://raymii.org/s/tutorials/IPSEC_L2TP_vpn_with_Ubuntu_12.04.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/IPSEC_L2TP_vpn_with_Ubuntu_12.04.html</guid>
                <description>Not available.</description> 
                <pubDate>Mon, 01 Dec 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 01 Dec 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>IPSEC L2TP VPN on Ubuntu 14.04 with OpenSwan, xl2tpd and ppp</title> 
                <link>https://raymii.org/s/tutorials/IPSEC_L2TP_vpn_with_Ubuntu_14.04.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/IPSEC_L2TP_vpn_with_Ubuntu_14.04.html</guid>
                <description>This is a guide on setting up an IPSEC/L2TP vpn server with Ubuntu 14.04 using Openswan as the IPsec server, xl2tpd as the l2tp provider and ppp or local users / PAM for authentication. It has a detailed explanation with every step. We choose the IPSEC/L2TP protocol stack because of recent vulnerabilities found in pptpd VPNs and because it is supported on all major operating systems by default. More than ever, your freedom and privacy when online is under threat. Governments and ISPs want to control what you can and can't see while keeping a record of everything you do, and even the shady-looking guy lurking around your coffee shop or the airport gate can grab your bank details easier than you may think. A self hosted VPN lets you surf the web the way it was intended: anonymously and without oversight.</description> 
                <pubDate>Mon, 01 Dec 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 01 Dec 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>IPSEC L2TP VPN on Ubuntu 13.04 with OpenSwan, xl2tpd and ppp</title> 
                <link>https://raymii.org/s/tutorials/IPSEC_L2TP_vpn_with_Ubuntu_13.04.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/IPSEC_L2TP_vpn_with_Ubuntu_13.04.html</guid>
                <description>This is a guide on setting up an IPSEC/L2TP vpn server with Ubuntu 13.04 using Openswan as the IPsec server, xl2tpd as the l2tp provider and ppp or local users / PAM for authentication. It has a detailed explanation with every step.</description> 
                <pubDate>Mon, 01 Dec 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 01 Dec 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Olimex OlinuXino a10 Lime Minimal Debian 7 Image</title> 
                <link>https://raymii.org/s/articles/Olimex_A10-OLinuXino-LIME_minimal_debian_7_image.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Olimex_A10-OLinuXino-LIME_minimal_debian_7_image.html</guid>
                <description>The Olimex OlinuXino A10 LIME is an amazing, powerfull and cheap open source ARM development board. It costs EUR 30, and has 160 GPIO. The default Debian image from OlimeX is quite huge and bloated, over 2 GB, with X and all. I do not want a huge image, so I stripped it down to a 200 MB image with only dhcp and ssh and a few basic tools. It uses about 20 MB of RAM. This image allows you to start with almost nothing and build up only what you need.</description> 
                <pubDate>Fri, 31 Oct 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 31 Oct 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Check and Fix SSL servers for SSLv3 connections or the Poodle CVE-2014-3566 bug</title> 
                <link>https://raymii.org/s/articles/Check_servers_for_the_Poodle_bug.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Check_servers_for_the_Poodle_bug.html</guid>
                <description>The POODLE CVE-2014-3566 bug is a new bug discovered by Google in the SSLv3 protocol. The fix is easy, disable support for SSLv3. See https://cipherli.st for a good list of SSL ciphers. You can use this check from the shell to check your servers. This command can easily be automated with other shell scripts. It also allows you to check your services without exposing them to an external checking website.</description> 
                <pubDate>Tue, 14 Oct 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 14 Oct 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Configserver Firewall and Security (CSF and LFD)</title> 
                <link>https://raymii.org/s/articles/Configserver_Firewall_and_Security_CSF_LFD.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Configserver_Firewall_and_Security_CSF_LFD.html</guid>
                <description>his page covers my notes about csf and lfd. csf is an easy SPI iptables firewall suite. lfd is the login failure daemon, which scans log files for failed authentication and blocks the IP's doing that. This page covers installation, populair command line options and popular config file options.</description> 
                <pubDate>Sun, 12 Oct 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 12 Oct 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Patch Shellshock)with Ansible</title> 
                <link>https://raymii.org/s/articles/Patch_CVE-2014-6271_Shellshock_with_Ansible.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Patch_CVE-2014-6271_Shellshock_with_Ansible.html</guid>
                <description>This is a simple ansible playbook to patch Debian, CentOS, Ubuntu and derivatives for the Shellshock vulnerability (CVE-2014-6271).</description> 
                <pubDate>Wed, 24 Sep 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 24 Sep 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Build a $35 Time Capsule - Raspberry Pi Time Machine Backup Server</title> 
                <link>https://raymii.org/s/articles/Build_a_35_dollar_Time_Capsule_-_Raspberry_Pi_Time_Machine.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Build_a_35_dollar_Time_Capsule_-_Raspberry_Pi_Time_Machine.html</guid>
                <description>This is a simple guide on building a $35 Time Capsule with a Raspberry Pi. A Time Capsule is a network attached storage device from Apple for use with their Time Machine. Time Machine gives users a very easy and userfriendly way to automatically create and restore (encrypted) backups. A Time Capsule is basically an expensive NAS that only talks the AFP/netatalk protocol. The 2 TB version costs $299 at this time, a Raspberry Pi only $35. </description> 
                <pubDate>Fri, 29 Aug 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 29 Aug 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Openstack Swift Objectstore Access via FTP</title> 
                <link>https://raymii.org/s/tutorials/Openstack-Swift-Objectstore-FTP-Access.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Openstack-Swift-Objectstore-FTP-Access.html</guid>
                <description>This is a guide on accessing the Openstack Swift Object Storage system using an FTP client. Openstack Swift has a beautiful API which you can program to. However, sometimes it is handy to quickly be able to access your Swift/Objectstore data without programming around it. We will use ftp-cloudfs to do this. There is also Softlayers swftp, but that does not support Keystone Authentication (2.0). ftp-cloudfs does support this. The OS X Cyberduck FTP client also has Openstack Swift support, however that is a native implementation, not using FTP. With ftp-cloudfs we can use any ftp client, from Filezilla to midnight commander.</description> 
                <pubDate>Sun, 25 May 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 25 May 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Encrypted Duplicity Backups to Openstack Swift Objectstore</title> 
                <link>https://raymii.org/s/tutorials/Encrypted_Duplicity_Backups_to_Openstack_Swift_Objectstore.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Encrypted_Duplicity_Backups_to_Openstack_Swift_Objectstore.html</guid>
                <description>This is a guide on backing up your data to an Openstack Swift (Objectstore) instance using Duplicity. It provides encrypted backups using gpg so that you can safely use any public cloud storage to store them. This tutorial is for Ubuntu and CentOS and includes initial setup plus a script to automate it all. We will be using the Dutch provider CloudVPS, which is a non american company, so your data is more safe than it is with a provider that is vulnerable to the patriot act. Although your data is already encrypted with GPG, you can never be to sure. CloudVPS provides 10GB free ObjectStore, if you have VPS with them, the data is stored on at least 3 machines in 3 locations and they have a boatload of certifications.</description> 
                <pubDate>Mon, 19 May 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 19 May 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Back Up Thunderbird Message Filters</title> 
                <link>https://raymii.org/s/tutorials/Thunderbird_Back_Up_Mail__Message_Filters.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Thunderbird_Back_Up_Mail__Message_Filters.html</guid>
                <description>This tutorial shows you how to backup and restore the message filters in Thunderbird on multiple platforms.</description> 
                <pubDate>Sun, 15 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 15 Dec 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Set up your own truly secure, encrypted and shared file synchronization, aka Dropbox clone</title> 
                <link>https://raymii.org/s/articles/Set_up_your_own_truly_secure_encrypted_shared_storage_aka_Dropbox_clone.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Set_up_your_own_truly_secure_encrypted_shared_storage_aka_Dropbox_clone.html</guid>
                <description>This article describes my truly secure, encrypted file synchronization service. It used EncFS and dvcs-autosync which lets me share only the encrypted data and mount that locally to get the plaintext. It works on OS X, Linux and ARM linux. This article has setup instructions for all those platforms.</description> 
                <pubDate>Tue, 15 Oct 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 15 Oct 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Screenfetch installation tutorial</title> 
                <link>https://raymii.org/s/tutorials/Screenfetch_installation_tutorial.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Screenfetch_installation_tutorial.html</guid>
                <description>This tutorial will show you how to install screenfetch, a bash information tool. It displays handy system information at login, including distro name, kernel, uptime, cpu, ram and nice distro-based artwork. The tutorial includes support for bash and zsh, for every supported linux OS (ubuntu, centos, arch, redhat, solusOS, linux mint and more.)</description> 
                <pubDate>Sat, 09 Mar 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 09 Mar 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Systemd rosetta / cheatsheet</title> 
                <link>https://raymii.org/s/snippets/Systemd_Rosetta_Reference.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/Systemd_Rosetta_Reference.html</guid>
                <description>A reference for systemd, for sysadmins who love plain old init.</description> 
                <pubDate>Sun, 10 Feb 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 10 Feb 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Munin - Fix MySQL plugin on Ubuntu 12.04 and Debian 6</title> 
                <link>https://raymii.org/s/snippets/Munin-Fix-MySQL-Plugin-on-Ubuntu-12.04.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/Munin-Fix-MySQL-Plugin-on-Ubuntu-12.04.html</guid>
                <description>On Debian 6 and Ubuntu 12.04 the Munin MySQL plugin does not work by default because of a missing package. Here is a little trick on fixing it.</description> 
                <pubDate>Sat, 02 Feb 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 02 Feb 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Munin - Set up the NGINX status plugin on Ubuntu 12.04</title> 
                <link>https://raymii.org/s/snippets/Munin-NGINX-Status-Plugin-Ubuntu-12.04.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/Munin-NGINX-Status-Plugin-Ubuntu-12.04.html</guid>
                <description>This post will show you how to set up the Munin plugin to monitor NGINX (nginx_request and nginx_status) and graph it. You need to change some URLs in the config because by default this is wrong.</description> 
                <pubDate>Thu, 31 Jan 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 31 Jan 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Install python 2.7 or 3 under Debian 6</title> 
                <link>https://raymii.org/s/tutorials/Install_Python_2.7_or_3_on_debian_6.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Install_Python_2.7_or_3_on_debian_6.html</guid>
                <description>Debian 6 by default ships with python 2.6.6. If for some reason need a newer version of python you can either mess with repo's, compile from source or use pythonbrew. This tutorial will show you how to install python 2.7 or 3 under debian 6 using pythonbrew.</description> 
                <pubDate>Tue, 15 Jan 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 15 Jan 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Restore iptables rules after a reboot on debian</title> 
                <link>https://raymii.org/s/tutorials/Restore-iptables-rules-after-a-reboot-on-debian.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Restore-iptables-rules-after-a-reboot-on-debian.html</guid>
                <description>This small tutorial will help you set up iptables to survive a reboot.</description> 
                <pubDate>Wed, 12 Dec 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 12 Dec 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Munin optimization guide for Debian (rrdcached, tmpfs, ionice and nice)</title> 
                <link>https://raymii.org/s/tutorials/Munin_optimalization_on_Debian.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Munin_optimalization_on_Debian.html</guid>
                <description>This is a tutorial to help you tune the performance of Munin using rrdcached, tmpfs, ionice, nice and a few other tricks.</description> 
                <pubDate>Sat, 08 Dec 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 08 Dec 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Packages</title> 
                <link>https://raymii.org/s/software/Software_packages.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Software_packages.html</guid>
                <description>Some software I encounter does not have a debian .deb package available. Via the ./configure, make, sudo checkinstall I compile them into a package and put it up here for download.</description> 
                <pubDate>Sun, 02 Sep 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 02 Sep 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ubuntu/Debian update mailer</title> 
                <link>https://raymii.org/s/software/Ubuntu_update_mailer.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Ubuntu_update_mailer.html</guid>
                <description>This is a bash script for Ubuntu and Debian, to be run by cron on a set interval. It checks if there are apt-updates, and if so, mails an overview of the packages which can be updated, whith their local version, the version available and an URL to the Ubuntu package site where you can see the changelog. I wrote this as an addition for my Nagios monitoring, that only shows how many updates there are, this is a lot more verbose. It also runs on Debian since 1 Nov 2012. Only the links don't work then, because the packages are different.</description> 
                <pubDate>Sun, 10 Jun 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 10 Jun 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Set up a local Ubuntu (apt) repository with apt-mirror</title> 
                <link>https://raymii.org/s/tutorials/Set_up_a_local_Ubuntu_debian_apt_mirror.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Set_up_a_local_Ubuntu_debian_apt_mirror.html</guid>
                <description>This tutorial shows you how to setup your own debian/ubuntu package repository with apt-mirror.</description> 
                <pubDate>Wed, 28 Mar 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 28 Mar 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Debian packages clean up commands</title> 
                <link>https://raymii.org/s/tutorials/Debian-apt-get-dpkg-packages-cleanup-commands.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Debian-apt-get-dpkg-packages-cleanup-commands.html</guid>
                <description>Not available.</description> 
                <pubDate>Fri, 01 Jan 2010 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 01 Jan 2010 00:00:00 GMT</lastBuildDate>
            </item>
    
        </channel>
    </rss>
    
    