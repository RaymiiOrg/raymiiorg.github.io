<?xml version="1.0" ?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag x11 on Raymii.org</title> 
            <link>https://raymii.org/s/tags/x11.xml</link> 
            <description>RSS feed for tag x11 on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/x11.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>Remote desktop on NetBSD with Xnest (no VNC)</title> 
                <link>https://raymii.org/s/articles/Remote_desktop_on_NetBSD_with_Xnest_no_VNC.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Remote_desktop_on_NetBSD_with_Xnest_no_VNC.html</guid>
                <description>After I recently wrote about NetBSD on the DEC Alpha CPU in QEMU, I decided to play with NetBSD some more. One x86_64 virtual machine later, I'm starting to appreciate the beauty and simplicity. Great documentation, both online and via the manpages, low resource usage and boy oh boy does it feel fast. But, you're not here for my love letter, you want to have a remote desktop. In the earlier article, we set up VNC, both because it shows you how to install packages and because native X11 crashes. In this article, we are going to set up X11 forwarding via SSH, but with `Xnest` instead of VNC. `Xnest` allows you to have a full desktop / window manager inside a window. If you did a full install of NetBSD, then all you need is included on the system, no need to install any packages. This is an advantage if you are on an architecture that has no precompiled binary packages or if compiling from source takes too long.</description> 
                <pubDate>Sun, 22 Aug 2021 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 22 Aug 2021 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>I've packaged up Gnash as a snap, for modern linux</title> 
                <link>https://raymii.org/s/blog/Ive_packaged_up_Gnash_as_a_Snap_for_modern_linux.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/Ive_packaged_up_Gnash_as_a_Snap_for_modern_linux.html</guid>
                <description>I hate snaps just as much as the next guy but last week I did something unexpected. I packaged up Gnash as a snap.  Gnash is a GNU flash media player, not updated since 2011, and  thus removed from the Ubuntu 20.04 repositories. The snap packaging is based on work by phil roche, he wrote about re-packaging older debian packages with an Ubuntu 18.04/16.04 base layer as a snap. My gnash package is confined (no '--classic' needed), the source code for the snap is on my github and on any snap-enabled distro you can now 'snap install gnash-raymii' to enjoy Gnash again.</description> 
                <pubDate>Mon, 07 Dec 2020 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 15 May 2021 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Running gnash on Ubuntu 20.04 (in Docker with X11 forwarding)</title> 
                <link>https://raymii.org/s/tutorials/Running_gnash_on_Ubuntu_20.04.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Running_gnash_on_Ubuntu_20.04.html</guid>
                <description>As you might have noticed, I'm slowly updating servers and workstations to Ubuntu 20.04, and as always with major upgrades, things break or are removed. Earlier this week I fixed up pygopherd and today I'll get gnash running again. Gnash is not updated since 2011 and therefore, finally, removed from the Ubuntu 20.04 repositories. Compiling it from source proved to be a lot of effort due to gstreamer dependencies and after a few hours I thought, why not just spin up a Ubuntu 18.04 Docker container, install gnash and forward X11. That took just about 10 minutes and now I'm happily running gnash again. In this tutorial I'll show you how to setup gnash in a docker container with x11 forwarding and host networking.</description> 
                <pubDate>Sun, 05 Jul 2020 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 05 Jul 2020 00:00:00 GMT</lastBuildDate>
            </item>
    
        </channel>
    </rss>
    
    