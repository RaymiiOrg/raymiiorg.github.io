<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <?xml-stylesheet href="/s/inc/rss.xsl" type="text/xsl"?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag syslog on Raymii.org</title> 
            <link>https://raymii.org/s/tags/syslog.xml</link> 
            <description>RSS feed for tag syslog on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/syslog.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>Fast MQTT logger (to syslog)</title> 
                <link>https://raymii.org/s/software/Fast_MQTT_Logger.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Fast_MQTT_Logger.html</guid>
                <description>For almost 5 years I've been using the `mqtt-data-logger` [python script](https://github.com/RaymiiOrg/mqtt-data-logger) to log all MQTT communication. This script works, but is a bit limited in how it stores logs (files per time it's started) and it often can't keep up with the message rate (tens of thousands per second) of my mqtt brokers.
So I've written a new tool in C++ to log all MQTT messages to syslog and optionally to the terminal. Then, via syslog, you can send it to where ever you like, be it a file or an ELK (Logstash/Elasticsearch/Kibana) stack. It even compiles without syslog support, if you only want to log to a file or the terminal.
There's a docker image and a docker compose file, so you can easily deploy it wherever you have an MQTT broker running. </description> 
                <pubDate>Tue, 25 Mar 2025 21:33:00 GMT</pubDate>
                <lastBuildDate>Tue, 25 Mar 2025 21:33:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Syslog configuration for remote logservers for syslog-ng and rsyslog, both client and server</title> 
                <link>https://raymii.org/s/tutorials/Syslog_config_for_remote_logservers_for_syslog-ng_and_rsyslog_client_server.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Syslog_config_for_remote_logservers_for_syslog-ng_and_rsyslog_client_server.html</guid>
                <description> Syslog is the protocol, format (and software) linux and most networking devices use to log messages. All kinds of messages, system, authentication, login and applications. There are multiple implementations of syslog, like syslog-ng and rsyslog. Syslog has the option to log to a remote server and to act as a remote logserver (that receives logs). With a remote logging server you can archive your logs and keep them secure (when a machine gets hacked, if root is compromised the logs on the machine are no longer trustworthy). This tutorial shows how to set up a syslog server with rsyslog and syslog-ng and shows how to setup servers as a syslog client (that log to a remote server) with syslog-ng and rsyslog.</description> 
                <pubDate>Thu, 21 Jun 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 21 Jun 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OSSEC 2.8 Server, Client, Web UI and Analogi Dashboard Installation tutorial</title> 
                <link>https://raymii.org/s/tutorials/OSSEC_2.8.0_Server_Client_and_Analogi_Dashboard_on_Ubuntu.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/OSSEC_2.8.0_Server_Client_and_Analogi_Dashboard_on_Ubuntu.html</guid>
                <description>OSSEC is an Open Source Host-based Intrusion Detection System that performs log analysis, file integrity checking, policy monitoring, rootkit detection, real-time alerting and active response. It runs on most operating systems, including Linux, MacOS, Solaris, HP-UX, AIX and Windows. It also includes agentless monitoring for use with for example Cisco or Juniper hardware. This tutorial covers the installation of the OSSEC 2.8 server, the standard OSSEC Web UI and the Analogi dashboard on Ubuntu 14.04. It also covers OSSEC setup with MySQL support. Last but not least it shows you how to install the OSSEC agent on a *NIX system.</description> 
                <pubDate>Wed, 11 Jun 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 11 Jun 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Apache access/error log to syslog</title> 
                <link>https://raymii.org/s/snippets/Apache_access_and_error_log_to_syslog.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/Apache_access_and_error_log_to_syslog.html</guid>
                <description>This snippet shows you how to redirect the Apache access log to syslog using the Customlog statement, and the Error log to syslog via the ErrorLog statement.</description> 
                <pubDate>Sun, 15 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 15 Dec 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Uninstall and Remove OSSEC</title> 
                <link>https://raymii.org/s/tutorials/Uninstall_OSSEC.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Uninstall_OSSEC.html</guid>
                <description>This small tutorial shows you how to remove an OSSEC installation. OSSEC is installed from source (via a script), so you have to remove all the things manually instead of with your package manager.</description> 
                <pubDate>Tue, 01 Oct 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 01 Oct 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OSSEC Server, Client, Web UI and Analogi Dashboard Installation tutorial</title> 
                <link>https://raymii.org/s/tutorials/OSSEC_and_webui_and_analogi_dashboard_installation_on_Ubuntu.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/OSSEC_and_webui_and_analogi_dashboard_installation_on_Ubuntu.html</guid>
                <description>OSSEC is an Open Source Host-based Intrusion Detection System that performs log analysis, file integrity checking, policy monitoring, rootkit detection, real-time alerting and active response. It runs on most operating systems, including Linux, MacOS, Solaris, HP-UX, AIX and Windows. It also includes agentless monitoring for use with for example Cisco or Juniper hardware. This tutorial covers the installation of the OSSEC server, the standard OSSEC Web UI and the Analogi dashboard on Ubuntu 12.04. It also covers OSSEC setup with MySQL support, including a Makefile bugfix. Last but not least it shows you how to install the OSSEC agent on a *NIX system.</description> 
                <pubDate>Sat, 07 Sep 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 07 Sep 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Munin plugin to show Logstash/Kibana messages per hour</title> 
                <link>https://raymii.org/s/software/Munin_plugin_Logstash_Kibana_messages_per_hour.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Munin_plugin_Logstash_Kibana_messages_per_hour.html</guid>
                <description>This is a simple munin plugin which shows you the amount of log messages your logstash/kibana server receives per hour.</description> 
                <pubDate>Fri, 12 Apr 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 12 Apr 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
        </channel>
    </rss>
    
    