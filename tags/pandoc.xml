<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <?xml-stylesheet href="/s/inc/rss.xsl" type="text/xsl"?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag pandoc on Raymii.org</title> 
            <link>https://raymii.org/s/tags/pandoc.xml</link> 
            <description>RSS feed for tag pandoc on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/pandoc.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>Convert markdown inline links to reference style links with Pandoc</title> 
                <link>https://raymii.org/s/articles/Convert_markdown_inline_links_to_reference_style_links_with_Pandoc.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Convert_markdown_inline_links_to_reference_style_links_with_Pandoc.html</guid>
                <description>Markdown has two options to create a link. A link is the piece of text you click to go to another webpage. Actually, three ways, since you can just embed HTML code in Markdown. I write all the content for this site in Markdown files, which are then converted by my static site generator to HTML, text and a gopher version. I'm used to using the inline link style, which is  where you paste the link right in the text. Since I've enabled the Gopher  version of raymii.org, I noticed that there was no line wrapping. The HTML  website all arranges that via CSS, but the text-only Gopher does not. Sometimes  Gopher clients wrap text, but most don't. I'm re-wrapping all articles to make them fit, but the wrapping is way off with inline style markdown links. By  converting them to reference style markdown links, the wrapping looks way better, and as an added bonus, reference style links give a better overview. There are a few scripts floating around to convert these links, but either  Ruby or NodeJS. It turns out after a bit of research that Pandoc, the anything-to-anything text conversion tool, has an option to use reference style links. With this option, I converted all the articles here (almost 400) to the reference style Markdown links.</description> 
                <pubDate>Wed, 10 Apr 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 10 Apr 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Viewing PDF, .docx and .odt files in mutt (as text)</title> 
                <link>https://raymii.org/s/articles/Viewing_PDF_docx_and_odt_files_in_Mutt.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Viewing_PDF_docx_and_odt_files_in_Mutt.html</guid>
                <description>mutt is my email client at work. I like the simple interface, the speed and the ability to customize the workflow. Email is synced with offlineimap and sent via msmtp, addresses are in abook, and calcurse is the Calendar for meetings, no complicated setup there. One aspect I especially like is the ability to view attachments on the command line right from mutt itself. Some departments at work send emails with an attached PDF or .docx file that contains the actual message, instead of just putting the text in the email itself. Using pandoc and pdftotext in mutt, the text of the attachments is displayed as a regular mail, no interruptions in my workflow by opening an external program. This article explains how to set up your .muttrc and .mailcap to use pandoc and pdf2text to view attachments as text in mutt.</description> 
                <pubDate>Sun, 03 Mar 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 03 Mar 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
        </channel>
    </rss>
    
    