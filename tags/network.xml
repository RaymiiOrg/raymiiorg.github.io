<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <?xml-stylesheet href="/s/inc/rss.xsl" type="text/xsl"?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag network on Raymii.org</title> 
            <link>https://raymii.org/s/tags/network.xml</link> 
            <description>RSS feed for tag network on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/network.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>Hacker News vs Lobste.rs in C++, an exercise in parsing json http api's and date/time/timezones</title> 
                <link>https://raymii.org/s/software/Cpp_exercise_in_parsing_json_http_apis_and_time_stuff.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Cpp_exercise_in_parsing_json_http_apis_and_time_stuff.html</guid>
                <description>I recently wondered how many top posts on the Hacker News frontpage are also on Lobsters. At first I reached for my trusty Python, because when I need to do some JSON API parsing that's what I'll use. (Otherwise bash is my default goto for small things, except when json, networking or associative arrays are involved.) But, then, a thought came to my mind. Why not try it with reasonably modern C++. It's what I do at work, so why not a simple personal project. It would involve dependency management (json and a http library), parsing both API endpoints and, most importantly, doing stuff with time. Time, timezones and dates are hard. This article contains a bit of my learning process, compilation and usage instructions and an example run. Go look at the code and run the code yourself. Let me know if my timezone calculations are working outside of GMT+1.</description> 
                <pubDate>Thu, 31 Dec 2020 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 31 Dec 2020 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>connman operstate list</title> 
                <link>https://raymii.org/s/snippets/connman_operstate_list.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/connman_operstate_list.html</guid>
                <description>Recently I was debugging connection issues with a system that uses connman as it's network management software. In the log it was visible that the connection went away and came back, logged with 'operstate' $number $state. I couldn't easily find an overview of all the possible states, but since it's open source we can take a look at the code to find out. Publishing it here for future reference.</description> 
                <pubDate>Tue, 25 Jun 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 25 Jun 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>FreeIPA DNS workaround for DNS zone [...]. already exists in DNS and is handled by server(s):</title> 
                <link>https://raymii.org/s/snippets/FreeIPA_DNS_workaround_for_DNS_zone_already_exists_in_DNS_and_is_handled_by_servers.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/FreeIPA_DNS_workaround_for_DNS_zone_already_exists_in_DNS_and_is_handled_by_servers.html</guid>
                <description>Recently I ran into an issue with FreeIPA when trying to add an existing DNS zone. The zone already exists on the internet so, logically, FreeIPA wouldn't allow me to hijack this domain locally. My usecase is special, so I wanted to forcefully add this zone as a forward zone.</description> 
                <pubDate>Tue, 10 Apr 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 10 Apr 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Adding IPv6 to a keepalived and haproxy cluster</title> 
                <link>https://raymii.org/s/articles/Adding_IPv6_to_a_keepalived_and_haproxy_cluster.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Adding_IPv6_to_a_keepalived_and_haproxy_cluster.html</guid>
                <description>At work I regularly build high-available clusters for customers, where the setup is distributed over multiple datacenters with failover software. If one component fails, the service doesn't experience issues or downtime due to the failure. Recently I was tasked with expanding a cluster setup to be also reachable via IPv6. This article goes over the settings and configuration required for haproxy and keepalived for IPv6. The internal cluster will only be IPv4, the loadbalancer terminates HTTP and HTTPS connections. </description> 
                <pubDate>Sun, 24 Sep 2017 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 24 Sep 2017 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Traceroute IPv6 to Smokeping Target config</title> 
                <link>https://raymii.org/s/snippets/IPv6_Traceroute_to_Smokeping_Target_Config.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/IPv6_Traceroute_to_Smokeping_Target_Config.html</guid>
                <description>This little one-liner converts the output of traceroute for IPv6 to Smokeping Target output. I had only setup my smokepings for IPv4. Recently we had an issue were network config was borked and the whole IPv4 network was not announced via BGP anymore. I was at home troubleshooting, but finding nothing since I have native IPv6 and that part still worked. My Smokeping did show loss, and that explicitly uses IPv4. That helped with the debugging a lot. I have a [IPv4][4] version of this article as well.</description> 
                <pubDate>Sun, 05 Mar 2017 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 05 Mar 2017 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Keepalived notify script, execute action on failover</title> 
                <link>https://raymii.org/s/tutorials/Keepalived_notify_script_execute_action_on_failover.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Keepalived_notify_script_execute_action_on_failover.html</guid>
                <description>Keepalived supports running scripts on VRRP state change. This can come in handy when you need to execute an action when a failover occurs. In my case, I have a VPN running on a Virtual IP and want to make sure the VPN only runs on the node with the Virtual IP.</description> 
                <pubDate>Sun, 26 Oct 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 26 Oct 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Traceroute to Smokeping Target config</title> 
                <link>https://raymii.org/s/snippets/Traceroute_to_Smokeping_Target_Config.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/Traceroute_to_Smokeping_Target_Config.html</guid>
                <description>This little one-liner converts the output of traceroute to Smokeping Target output. This way you can build your smokeping config faster.</description> 
                <pubDate>Sat, 28 Jun 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 28 Jun 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Simple keepalived failover setup on Ubuntu 14.04</title> 
                <link>https://raymii.org/s/tutorials/Keepalived-Simple-IP-failover-on-Ubuntu.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Keepalived-Simple-IP-failover-on-Ubuntu.html</guid>
                <description>We are going to set up very simple keepalived IP failover on Ubuntu 14.04. Keepalived is a piece of software which can be used to achieve high availability by assigning two or more nodes a virtual IP and monitoring those nodes, failing over when one goes down.  Keepalived can do more, like load balancing and monitoring, but this tutorial focusses on a very simple setup, just IP failover.</description> 
                <pubDate>Fri, 13 Jun 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 13 Jun 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>KVM host with bonding and VLAN tagged Virtual Machines setup on Ubuntu 12.04</title> 
                <link>https://raymii.org/s/tutorials/KVM_with_bonding_and_VLAN_tagging_setup_on_Ubuntu_12.04.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/KVM_with_bonding_and_VLAN_tagging_setup_on_Ubuntu_12.04.html</guid>
                <description>This tutorial shows you how to setup Ubuntu 12.04 as a KVM host with multiple virtual machines. The kvm host will have VM's in multiple VLAN's and will handle the VLAN tagging over a bonded interface. It also covers creation of an example virtual machine with the ubuntu vmbuilder tool and shows you how to add a serial console to an ubuntu 12.04 virtual machine for troubleshooting.</description> 
                <pubDate>Sat, 15 Feb 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 15 Feb 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Bonding NIC Teaming on Ubuntu 12.04</title> 
                <link>https://raymii.org/s/tutorials/NIC_Bonding_on_Ubuntu_12.04.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/NIC_Bonding_on_Ubuntu_12.04.html</guid>
                <description>This tutorial shows you how to setup NIC bonding / NIC teaming on Ubuntu 12.04. Bonding, also called port trunking or link aggregation means combining several network interfaces (NICs) to a single link, providing either high-availability, load-balancing, maximum throughput, or a combination of these.</description> 
                <pubDate>Fri, 14 Feb 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 14 Feb 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>haproxy: add strict transport security or any other http header</title> 
                <link>https://raymii.org/s/snippets/haproxy_add_strict_transport_security_or_any_other_http_header.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/haproxy_add_strict_transport_security_or_any_other_http_header.html</guid>
                <description>This snippet shows you how to add a header to a haproxy response, for example, the HSTS header (http strict transport security).</description> 
                <pubDate>Wed, 11 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 11 Dec 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>ntop-ng 1.1 installation on Ubuntu 12.04</title> 
                <link>https://raymii.org/s/tutorials/ntop-ng-installation-on-Ubuntu.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/ntop-ng-installation-on-Ubuntu.html</guid>
                <description>This is a guide on installing the latest ntop-ng (1.1) on Ubuntu 12.04. ntopng is the next generation version of the original ntop, a network traffic probe that shows the network usage, similar to what the popular top Unix command does. ntop is based on libpcap and it has been written in a portable way in order to virtually run on every Unix platform, MacOSX and on Win32 as well. ntopng users can use a a web browser to navigate through ntop (that acts as a web server) traffic information and get a dump of the network status. In the latter case, ntop can be seen as a simple RMON-like agent with an embedded web interface. This tutorial will walk you through the compilation and installation of ntopng from source.</description> 
                <pubDate>Fri, 29 Nov 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 29 Nov 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Corosync Pacemaker - Execute script on failover</title> 
                <link>https://raymii.org/s/tutorials/Corosync_Pacemaker_-_Execute_a_script_on_failover.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Corosync_Pacemaker_-_Execute_a_script_on_failover.html</guid>
                <description>With Corosync/Pacemaker there is no easy way to simply run a script on failover. There are good reasons for this, but sometimes you want to do something simple. This tutorial describes how to change the Dummy OCF resource to execute a script on failover.</description> 
                <pubDate>Wed, 20 Nov 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 20 Nov 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Corosync Notes</title> 
                <link>https://raymii.org/s/snippets/Corosync_Notes.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/Corosync_Notes.html</guid>
                <description>These are my notes and command snippets for usage with Corosync.</description> 
                <pubDate>Sat, 02 Nov 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 02 Nov 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>IPv4 Address Conversion Tricks</title> 
                <link>https://raymii.org/s/articles/IPv4_Address_Conversion_Tricks.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/IPv4_Address_Conversion_Tricks.html</guid>
                <description>Did you know that http://3515693643/ is a valid link? Why? Because this is the decimal form of the binary IP address. Normally we represent IP addresses as 10.0.0.1, 4 blocks of numbers. Those numbers are actually binary octets represented in decimal, therefore they can never be more than 255. If we take the whole binary number of all blocks, and convert that to base 10, we get a result like above, which in turn is a working network address. I've written a little javascript based converter so you can try it out yourself.</description> 
                <pubDate>Sun, 01 Sep 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 01 Sep 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Fix CentOS IPTables rule saving (iptables: Saving firewall rules to /etc/sysconfig/iptables: /etc/init.d/iptables: line 274: restorecon: command not found)</title> 
                <link>https://raymii.org/s/snippets/CentOS_Save_iptables_restorecon_error.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/CentOS_Save_iptables_restorecon_error.html</guid>
                <description>On a default CentOS installation, when trying to execute the iptables save command you can get an error like iptables: Saving firewall rules to /etc/sysconfig/iptables: /etc/init.d/iptables: line 274: restorecon: command not found. Read this article to find out how to fix it.</description> 
                <pubDate>Wed, 23 Jan 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 23 Jan 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>CIDR Cheatsheet</title> 
                <link>https://raymii.org/s/software/CIDR-Cheatsheet.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/CIDR-Cheatsheet.html</guid>
                <description>This is a handy CIDR cheatsheet.</description> 
                <pubDate>Tue, 11 Dec 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 11 Dec 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Persistent reverse (NAT bypassing) SSH tunnel access with autossh</title> 
                <link>https://raymii.org/s/tutorials/Autossh_persistent_tunnels.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Autossh_persistent_tunnels.html</guid>
                <description>Not available.</description> 
                <pubDate>Fri, 05 Oct 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 05 Oct 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
        </channel>
    </rss>
    
    