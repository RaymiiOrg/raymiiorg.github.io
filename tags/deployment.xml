<?xml version="1.0" ?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag deployment on Raymii.org</title> 
            <link>https://raymii.org/s/tags/deployment.xml</link> 
            <description>RSS feed for tag deployment on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/deployment.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>Ansible - Only do action if on specific distribution (Debian, Ubuntu, CentOS or RHEL) or distribution version (ubuntu precise, ubuntu trusty)</title> 
                <link>https://raymii.org/s/tutorials/Ansible_-_Only_if_on_specific_distribution_or_distribution_version.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_-_Only_if_on_specific_distribution_or_distribution_version.html</guid>
                <description>This ansible playbook example helps you execute actions only if you are on a certain distribution. You might have a mixed environment with CentOS and Debian, when using ansible to execute actions on different servers you don't need to run yum on debian, or apt on CentOS. Some package names are different and such, so this helps you with a when statement to select a specific distribution. As a bonus, you also get a when for specific distribution versions, like Ubuntu precise (12.04 LTS) or Ubuntu trusty (14.04 LTS).</description> 
                <pubDate>Sun, 09 Nov 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 16 Dec 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible - Only do something if another action changed</title> 
                <link>https://raymii.org/s/tutorials/Ansible_-_Only-do-something-if-another-action-changed.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_-_Only-do-something-if-another-action-changed.html</guid>
                <description>This Ansible tutorial shows you how execute actions only if another action has changed. For example, a playbook which downloads a remote key for package signing but only executes the apt-add command if the key has changed. Or a playbook which clones a git repository and only restarts a service if the git repository has changed.</description> 
                <pubDate>Sun, 22 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 15 Dec 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>log_vcs - Ansible callback plugin that creates VCS (git) branches for every Ansible run</title> 
                <link>https://raymii.org/s/software/log_vcs_-_Ansible_Callback_plugin_that_creates_git_branches_for_every_ansible_run.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/log_vcs_-_Ansible_Callback_plugin_that_creates_git_branches_for_every_ansible_run.html</guid>
                <description>This Ansible callback plugin creates a VCS branch every time you run Ansible. If you ever need to go back to a certain state or environment, check out that branch and be sure nothing has changed. This is useful when you have multiple environments or multiple people deploying and continually develop your Ansible. When you often deploy to test / acceptance and less often to production, you can checkout the last branch that deployed to production if a hotfix or other maintenance is required, without having to search back in your commits and logs. I would recommend to develop infrastructure features in feature branches and have the master branch always deployable to production. However, reality learns that that is not always the case and this is a nice automatic way to have a fallback.</description> 
                <pubDate>Tue, 10 Jul 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 10 Jul 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible playbook for GoAccess Log Analyzer</title> 
                <link>https://raymii.org/s/software/Ansible_role_for_GoAccess_Log_Analyzer.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Ansible_role_for_GoAccess_Log_Analyzer.html</guid>
                <description>This is a small Ansible playbook to deploy the GoAccess log analyzer on Debian based systems. Next to Piwik, I use goaccess myself to get better insights in who and what visits my servers. This role is ment to be included in your webserver playbooks.</description> 
                <pubDate>Sun, 17 Jan 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 17 Jan 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible - Only if a file exists or does not exist</title> 
                <link>https://raymii.org/s/tutorials/Ansible_-_Only_if_a_file_exists_or_does_not_exist.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_-_Only_if_a_file_exists_or_does_not_exist.html</guid>
                <description>This Ansible playbook example helps you execute actions only if a file exists or does not exist. If you for example have a command you need to run to generate a certificate (or Diffie Hellman parameters for nginx) you only want to do that once. The command itself is not convergent so it will run with every ansible run. However, the command creates a file and Ansible is able to check if that file exists. If the file exists, it will not execute the action. The same goes for checking if a file does exist and only executing the action if it exists. (The action you want to do will remove that file).</description> 
                <pubDate>Sat, 27 Dec 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 27 Dec 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible - Only if host is also in other hostgroup</title> 
                <link>https://raymii.org/s/tutorials/Ansible_-_Only_if_host_is_also_in_other_hostgroup.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_-_Only_if_host_is_also_in_other_hostgroup.html</guid>
                <description>This snippet helps you execute actions only when a host is in another hostgroup in Ansible. For example, you might deploy munin-node via ansible, but you only want your apache and NGINX plugins deployed on your webservers, not on your database servers.</description> 
                <pubDate>Tue, 25 Nov 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 25 Nov 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Chef: overwrite templates in wrapper-cookbooks</title> 
                <link>https://raymii.org/s/articles/Chef_-_overwrite_templates_in_wrapper_cookbooks.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Chef_-_overwrite_templates_in_wrapper_cookbooks.html</guid>
                <description>This article describes how to use a template in a wrapper-cookbook in Chef. The Chef Cookbook Wrapper Pattern is based upon a design convention where you customize an existing library cookbook by using a separate wrapper cookbook, which wraps the original cookbook with any related configuration changes. a library cookbook is an existing cookbook, typically an open-source contribution from a user in the Chef community, designed for server configuration purposes. A wrapper cookbook is a cookbook that wraps the original library cookbook with custom modifications or additions such as overriding a Chef attribute, changing a Chef template, converting a Chef attribute to a user-definable input, etc. To override a template by just defining it again would result in it being written two times every Chef run, which is not what we want. Using this method, you can override the template from the default cookbook with a template in your wrapper-cookbook. It has an example for the graphite cookbook, where the wrapper ads LDAP login to the Apache server.</description> 
                <pubDate>Wed, 02 Apr 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 02 Apr 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Chef: chef_gem vs gem_package and ORDER</title> 
                <link>https://raymii.org/s/articles/Chef_-_chef_gem_vs_gem_package_and_ORDER.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Chef_-_chef_gem_vs_gem_package_and_ORDER.html</guid>
                <description>This article describes a situation I had at one of my clients with Chef and the steps took to resolve this problem. They have a cookbook which builds a postgresql database node and it installs the pg ruby gem. However, it uses the chef_gem resource to do that, and it keeps failing.</description> 
                <pubDate>Tue, 01 Apr 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 01 Apr 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible Inventory from VMWare</title> 
                <link>https://raymii.org/s/software/Ansible__Dynamic_Inventory_From_VMware_vCenter.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Ansible__Dynamic_Inventory_From_VMware_vCenter.html</guid>
                <description>This is a simple script which lets you use VMWare vCenter as a dynamic inventory for Ansible.</description> 
                <pubDate>Mon, 06 Jan 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 06 Jan 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible - Playbook Testing</title> 
                <link>https://raymii.org/s/tutorials/Ansible_-_Playbook_Testing.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_-_Playbook_Testing.html</guid>
                <description>This Ansible article shows you how to run a basic test on your playbooks to check if their syntax is correct. It shows methods for both Ansible 1.3 and 1.4. When you get more complicated Ansible playbooks you sometimes have syntax (YAML) errors in them. It sometimes can take a while before those errors show up because they are lower in a playbook. By running the syntax check you make sure this won't happen.</description> 
                <pubDate>Sun, 29 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 29 Dec 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible - Sudo sometimes</title> 
                <link>https://raymii.org/s/tutorials/Ansible_-_Better_sudo_control.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_-_Better_sudo_control.html</guid>
                <description>This Ansible tutorial shows you how run some actions via sudo and some not. It also shows you how to run an entire role via sudo or not.</description> 
                <pubDate>Sat, 21 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 21 Dec 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Chef: search in recipe based on roles or recipes</title> 
                <link>https://raymii.org/s/tutorials/Chef_search_in_recipe_on_roles_or_recipes.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Chef_search_in_recipe_on_roles_or_recipes.html</guid>
                <description>Chef supports a very powerfull search syntax which allows you for example to search all nodes with the graphite-server role and get their IP addresses. This tutorial shows you how to search based on a role a node has or a recipe a node has, plus an example config file with erb syntax. It has an example cookbook which sets up collectd as client and graphite as server. It shows you how to use the search function of Chef to get the IP addresses of the graphite servers and place those in the collectd config files. This technique is applicable to all kinds of services that use a client-server model, for example, munin, haproxy, zabbix and many more.</description> 
                <pubDate>Tue, 08 Oct 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 08 Oct 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Chef: include_recipe only_if or not_if</title> 
                <link>https://raymii.org/s/tutorials/Chef_include_recipe_only_if_not_if.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Chef_include_recipe_only_if_not_if.html</guid>
                <description>Chef supports including other recipes in cookbooks, for example, I can include the MySQL recipe from a PHP recipe. However, this is not a normal resource but a normal method. Therefore it ignores anything passed to it, including only_if or not_if. This tutorial shows you how to include or not include a recipe based on a variable, comparable with not_if or only_if.</description> 
                <pubDate>Sun, 06 Oct 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 06 Oct 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible - sudoers safety and sanity checking in playbook</title> 
                <link>https://raymii.org/s/tutorials/Ansible_-_Sudo_Safety_and_Sanity_Checks.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_-_Sudo_Safety_and_Sanity_Checks.html</guid>
                <description>Using Ansible to manage the /etc/sudoers file is fine, except when you have a syntax error in your template. This method helps you to only deploy a correct sudoers file.</description> 
                <pubDate>Sat, 23 Mar 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 23 Mar 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible - pure ssh based configuration management and deployment</title> 
                <link>https://raymii.org/s/tutorials/Ansible_Deployment_Framework.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_Deployment_Framework.html</guid>
                <description>This tutorial will get you started with Ansible. Ansible is a radically simple model-driven configuration management, deployment, and command execution framework. Other tools in this space have been too complicated for too long, require too much bootstrapping, and have too much learning curve. By comparison, Ansible is dead simple and painless to extend. Puppet and Chef have about 60k lines of code. Ansibles core is a little over 2000 lines.</description> 
                <pubDate>Sat, 09 Mar 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 09 Mar 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
        </channel>
    </rss>
    
    