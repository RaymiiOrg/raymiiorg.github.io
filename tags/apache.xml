<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <?xml-stylesheet href="/s/inc/rss.xsl" type="text/xsl"?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag apache on Raymii.org</title> 
            <link>https://raymii.org/s/tags/apache.xml</link> 
            <description>RSS feed for tag apache on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/apache.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>Using nodeSelector to deploy a Kubernetes Helm chart only on x86/amd64 nodes, not arm64</title> 
                <link>https://raymii.org/s/snippets/Using_nodeSelector_to_deploy_a_Kubernetes_Helm_chart_only_on_x86_or_amd64_nodes_not_arm64.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/Using_nodeSelector_to_deploy_a_Kubernetes_Helm_chart_only_on_x86_or_amd64_nodes_not_arm64.html</guid>
                <description>My [k3s cluster](/s/tutorials/My_First_Kubernetes_k3s_cluster_on_3_Orange_Pi_Zero_3s_including_k8s_dashboard_hello-node_and_failover.html) runs on Orange Pi Zero 3 small board computers, with a 1.5 GHz Allwinner H618 Quad-Core Cortex-A53 ARM64 CPU. Nowadays most popular software has support for `aarch64` due to the popularity of boards like the Raspberry Pi and the Apple M1 series processors, but smaller projects or niche software often can only run on x86/amd64. If you write your own yaml files for deployment you can use a `nodeSelector` combined with the `kubernetes.io/arch=amd64`, but with a Helm Chart this is not that obvious. This small snippets shows you the correct syntax to force deploy a Helm Chart to only amd64 nodes in your cluster. This assumes you have a mixed cluster, I added a small virtual machine to it for testing. </description> 
                <pubDate>Thu, 11 Jul 2024 23:39:00 GMT</pubDate>
                <lastBuildDate>Thu, 11 Jul 2024 23:39:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Kubernetes (k3s) Ingress for different domains (virtual hosts)</title> 
                <link>https://raymii.org/s/tutorials/Kubernetes_k3s_Ingress_for_different_domains_like_virtual_hosts.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Kubernetes_k3s_Ingress_for_different_domains_like_virtual_hosts.html</guid>
                <description>Now that I have a [high-available local kubernetes cluster](/s/tutorials/High_Available_k3s_kubernetes_cluster_with_keepalived_galera_and_longhorn.html) it's time to learn not just managing the cluster but actually deploying some services on there. Most examples online use a `NodePort` or a `LoadBalancer` to expose a service on a port, but I want to have domains, like, `grafana.homelab.mydomain.org` instead of `192.0.2.50:3000`. Back in the old days this was called [Virtual Host](https://web.archive.org/web/20240515131604/https://httpd.apache.org/docs/2.4/vhosts/), using 1 IP for multiple domains. My k3s cluster uses `traefik` for its incoming traffic and by defining an `Ingress` we can route a domain to a service (like a `ClusterIP`). This page will show you how. </description> 
                <pubDate>Wed, 10 Jul 2024 20:39:00 GMT</pubDate>
                <lastBuildDate>Wed, 10 Jul 2024 20:39:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Strong SSL Security on Apache2</title> 
                <link>https://raymii.org/s/tutorials/Strong_SSL_Security_On_Apache2.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Strong_SSL_Security_On_Apache2.html</guid>
                <description>This tutorial shows you how to set up strong SSL security on the Apache2 webserver. We do this by updating OpenSSL to the latest version to mitigate attacks like Heartbleed, disabling SSL Compression and EXPORT ciphers to mitigate attacks like FREAK, CRIME and LogJAM, disabling SSLv3 and below because of vulnerabilities in the protocol and we will set up a strong ciphersuite that enables Forward Secrecy when possible. We also enable HSTS and HPKP. This way we have a strong and future proof ssl configuration and we get an A+ on the Qually Labs SSL Test.</description> 
                <pubDate>Sun, 14 Jun 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 27 Apr 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Chrome 68 is depcrecating HPKP (HTTP Public Key Pinning)</title> 
                <link>https://raymii.org/s/blog/Chrome_68_is_deprecating_HPKP.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/Chrome_68_is_deprecating_HPKP.html</guid>
                <description>In 2014 I published an article on HPKP, http public key pinning. It allows a site operator to send a public key in an http header, forcing the browser to only connect when that header is found. It was ment to redice the risk of a compromised certificate authority (since any CA can create a certificate for any website). Quite secure, but it was often wrongly configured, forgotten until certificates expired and there were some security issues like a false pin. Late 2017 Google announced that HPKP would be removed in Chrome 68 and that version is released now, so HPKP is no longer supported. This post goes into the reasoning behind the removal, the possible replacement (Expect-CT) and how to remove HPKP from your site.</description> 
                <pubDate>Tue, 12 Jun 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 12 Jun 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>haproxy: restrict specific URLs to specific IP addresses</title> 
                <link>https://raymii.org/s/snippets/haproxy_restrict_specific_urls_to_specific_ip_addresses.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/haproxy_restrict_specific_urls_to_specific_ip_addresses.html</guid>
                <description>This snippet shows you how to use haproxy to restrict certain URLs to certain IP addresses. For example, to make sure your admin interface can only be accessed from your company IP address. It also includes an example to prompt for a password if the visitor is from a different network.</description> 
                <pubDate>Sun, 04 Mar 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 04 Mar 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Nagios 4 + Nagiosgraph (latest) installation on Ubuntu 12.04 &amp; 14.04</title> 
                <link>https://raymii.org/s/tutorials/Nagios_Core_4_Installation_on_Ubuntu_12.04.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Nagios_Core_4_Installation_on_Ubuntu_12.04.html</guid>
                <description>This is a guide on installing the latest Nagios Core (4.2.1) on Ubuntu 12.04 and 14.04. Nagios is an open source computer system monitoring, network monitoring and infrastructure monitoring software application. Nagios offers monitoring and alerting services for servers, switches, applications, and services. It alerts the users when things go wrong and alerts them a second time when the problem has been resolved. The version in the Ubuntu 12.04 repositories is quite old, it is still the in the 3 branch. This guide helps to fix that by using the latest Nagios version. We also install Nagiosgraph, a plugin for Nagios which gives you graps of the metrics.</description> 
                <pubDate>Sun, 11 Sep 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 11 Sep 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Nitrokey HSM/SmartCard-HSM and Raspberry Pi web cluster</title> 
                <link>https://raymii.org/s/articles/Nitrokey_HSM_web_cluster.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Nitrokey_HSM_web_cluster.html</guid>
                <description>This article sets up a Nitrokey HSM/SmartCard-HSM web cluster and has a lot of benchmarks. This specific HSM is not a fast HSM since it's very inexpensive and targeted at secure key storage, not performance. But, what if you do want more performance? Then you scale horizontally, just add some more HSM's and a loadbalancer in front. The cluster consists of Raspberry Pi's and Nitrokey HSM's and SmartCard-HSM's, softwarewise we use Apache, `mod_nss` and haproxy. We benchmark a small HTML file and a Wordpress site, with a regular 4096 bit RSA certificate without using the HSM's, a regular 2048 bit RSA certificate without using the HSM's, a 2048 bit RSA certificate in the HSM, a 1024 bit RSA certificate in the HSM and an EC prime256v1 key in the HSM. We do these benchmarks with the `OpenSC` module and with the `sc-hsm-embedded` module to see if that makes any difference.</description> 
                <pubDate>Mon, 01 Aug 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 01 Aug 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Use the Nitrokey HSM or SmartCard-HSM with sc-hsm-embedded, mod_nss and Apache (read only module)</title> 
                <link>https://raymii.org/s/articles/Use_the_Nitrokey_HSM_or_SmartCard-HSM_with_sc-hsm-embedded_mod_nss_and_Apache_read_only_module.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Use_the_Nitrokey_HSM_or_SmartCard-HSM_with_sc-hsm-embedded_mod_nss_and_Apache_read_only_module.html</guid>
                <description>This is a guide on using the Nitrokey HSM with sc-hsm-embedded module instead of the PC/SC daemon and OpenSC, mod_nss and the Apache webserver. This is an extension on the earlier guide, with new benchmarks. The sc-hsm-embedded module is not using a global lock like OpenSC, therefore providing better performance. The sc-hsm-embedded module is also a read only module, suitable for embedded systems or secure systems. The HSM allows you to store the private key for a SSL certificate inside the HSM (instead of on the filesystem), so that it can never leave the device and thus never be stolen. The guide covers the installation of the sc-hsm-embedded module, configuration of and benchmarks from Apache with the HSM and different key sizes.</description> 
                <pubDate>Fri, 15 Jul 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 15 Jul 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Use the Nitrokey HSM or SmartCard-HSM with mod_nss and Apache</title> 
                <link>https://raymii.org/s/articles/Nitrokey_HSM_in_Apache_with_mod_nss.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Nitrokey_HSM_in_Apache_with_mod_nss.html</guid>
                <description>This is a guide on using the Nitrokey HSM with mod_nss and the Apache webserver. The HSM allows you to store the private key for a SSL certificate inside the HSM (instead of on the filesystem), so that it can never leave the device and thus never be stolen. The guide covers the installation and configuration of mod_nss, coupling the HSM to NSS, generating the keys and configuring Apache, and last but not least we also do some benchmarks on Apache with the HSM and different key sizes.</description> 
                <pubDate>Tue, 21 Jun 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 21 Jun 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>HTTP Strict Transport Security for Apache, NGINX and Lighttpd</title> 
                <link>https://raymii.org/s/tutorials/HTTP_Strict_Transport_Security_for_Apache_NGINX_and_Lighttpd.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/HTTP_Strict_Transport_Security_for_Apache_NGINX_and_Lighttpd.html</guid>
                <description>HTTP Strict Transport Security (often abbreviated as HSTS) is a security feature that lets a web site tell browsers that it should only be communicated with using HTTPS, instead of using HTTP. This tutorial will show you how to set up HSTS in Apache2, NGINX and Lighttpd.</description> 
                <pubDate>Fri, 17 Jun 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 17 Jun 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Let's Encrypt with DirectAdmin or other Web Control Panels</title> 
                <link>https://raymii.org/s/articles/Lets_Encrypt_Directadmin.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Lets_Encrypt_Directadmin.html</guid>
                <description>Let's Encrypt is a new certificate authority, recognized by all major browsers. They make it a breeze to set up TLS certificates for your web server. And for free! Let's Encrypt is supported by major players like Mozilla, Akamai, Cisco, the EFF, the Internet Security Research Group and others. Let's Encrypt provides free, automatic and secure certificates so that every website can be secured with an SSL certificate. This article shows you how to setup Let's Encrypt with the DirectAdmin web control panel. The guide is generic, so it works for other controlpanels as well. For now it works with the beta, and required some linux knowledge and root access to the hosting server.</description> 
                <pubDate>Sun, 11 Jan 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 24 Feb 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Let's Encrypt with DirectAdmin, now built in!</title> 
                <link>https://raymii.org/s/articles/Lets_Encrypt_Directadmin_Now_Built_In.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Lets_Encrypt_Directadmin_Now_Built_In.html</guid>
                <description>Let's Encrypt is a new certificate authority, recognized by all major browsers. They make it a breeze to set up TLS certificates for your web server. And for free! Let's Encrypt is supported by major players like Mozilla, Akamai, Cisco, the EFF, the Internet Security Research Group and others. Let's Encrypt provides free, automatic and secure certificates so that every website can be secured with an SSL certificate. This article shows you how to setup Let's Encrypt with the DirectAdmin web control panel. DirectAdmin now supports Lets Encrypt natively since 1.50, so no more ssh fiddling, just via the control panel, for all the users on the server.</description> 
                <pubDate>Wed, 24 Feb 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 24 Feb 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Remove Installatron from a (Directadmin) server</title> 
                <link>https://raymii.org/s/blog/Remove_Installatron_from_a_(Directadmin)_server.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/Remove_Installatron_from_a_(Directadmin)_server.html</guid>
                <description>This is a short guide which shows you how to remove Installatron from a server.</description> 
                <pubDate>Sun, 08 Feb 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 08 Feb 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>HTTP Public Key Pinning Extension HPKP for Apache, NGINX and Lighttpd</title> 
                <link>https://raymii.org/s/articles/HTTP_Public_Key_Pinning_Extension_HPKP.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/HTTP_Public_Key_Pinning_Extension_HPKP.html</guid>
                <description>Public Key Pinning means that a certificate chain must include a whitelisted public key. It ensures only whitelisted Certificate Authorities (CA) can sign certificates for `*.example.com`, and not any CA in your browser store. This article has background theory and configuration examples for Apache, Lighttpd and NGINX.</description> 
                <pubDate>Tue, 30 Dec 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 30 Dec 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Owncloud, DirectAdmin, Apache 2.4 and Error AH01797: client denied by server configuration</title> 
                <link>https://raymii.org/s/blog/Owncloud_DirectAdmin,_Apache_2.4_and_Error_AH01797_client_denied_by_server_configuration.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/Owncloud_DirectAdmin,_Apache_2.4_and_Error_AH01797_client_denied_by_server_configuration.html</guid>
                <description>I keep a few servers around for shared webhosting for friends, family and some other domains. Most of them run Directadmin, because it is easier to work with for the target audience. I'm very good with the command line, they've never heard of it. One of my friends runs Owncloud, a wonderfull piece of software to get cloud services under your control. He does not use the file part but rather the calendar and contacts a lot. A recent update of Apache to 2.4.10 broke that functionality on a Directadmin machine with the error AH01797: client denied by server configuration. After a bit of searching and debugging, here's how I fixed it.</description> 
                <pubDate>Mon, 15 Sep 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 15 Sep 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OCSP Stapling on Apache</title> 
                <link>https://raymii.org/s/tutorials/OCSP_Stapling_on_Apache2.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/OCSP_Stapling_on_Apache2.html</guid>
                <description>This tutorial shows you how to set up OCSP stapling on Apache. OCSP stapling is an enhancement to the standard OCSP protocol that delivers OCSP responses from the server with the certificate, eliminating the need for relying parties (web users) to check OCSP responses with the issuing CA. This has the effect of reducing bandwidth, improving perceived site performance, and increasing security for everyone involved in establishing the secure session.</description> 
                <pubDate>Mon, 03 Feb 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 03 Feb 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>haproxy: client side ssl certificates</title> 
                <link>https://raymii.org/s/tutorials/haproxy_client_side_ssl_certificates.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/haproxy_client_side_ssl_certificates.html</guid>
                <description>This tutorial shows you how to configure haproxy and client side ssl certificates. It features a few comprehensive examples.</description> 
                <pubDate>Wed, 18 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 18 Dec 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Apache access/error log to syslog</title> 
                <link>https://raymii.org/s/snippets/Apache_access_and_error_log_to_syslog.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/Apache_access_and_error_log_to_syslog.html</guid>
                <description>This snippet shows you how to redirect the Apache access log to syslog using the Customlog statement, and the Error log to syslog via the ErrorLog statement.</description> 
                <pubDate>Sun, 15 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 15 Dec 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>haproxy: set specific ssl ciphers</title> 
                <link>https://raymii.org/s/snippets/haproxy_set_specific_ssl_ciphers.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/haproxy_set_specific_ssl_ciphers.html</guid>
                <description>This snippet shows you how to set specific ciphers for haproxy when using an ssl frontend.</description> 
                <pubDate>Thu, 12 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 12 Dec 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>haproxy: add strict transport security or any other http header</title> 
                <link>https://raymii.org/s/snippets/haproxy_add_strict_transport_security_or_any_other_http_header.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/haproxy_add_strict_transport_security_or_any_other_http_header.html</guid>
                <description>This snippet shows you how to add a header to a haproxy response, for example, the HSTS header (http strict transport security).</description> 
                <pubDate>Wed, 11 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 11 Dec 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>haproxy: ssl backends</title> 
                <link>https://raymii.org/s/snippets/haproxy_ssl_backends.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/haproxy_ssl_backends.html</guid>
                <description>This snippet shows you how to configure an ssl backend on haproxy 1.5 or higher.</description> 
                <pubDate>Tue, 10 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 10 Dec 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>haproxy: redirect to ssl or other website</title> 
                <link>https://raymii.org/s/snippets/haproxy_redirect_to_ssl_or_any_other_website.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/haproxy_redirect_to_ssl_or_any_other_website.html</guid>
                <description>This snippet shows you how to use haproxy to redirect http traffic to https or any other website</description> 
                <pubDate>Mon, 09 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 09 Dec 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>ntop-ng 1.1 installation on Ubuntu 12.04</title> 
                <link>https://raymii.org/s/tutorials/ntop-ng-installation-on-Ubuntu.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/ntop-ng-installation-on-Ubuntu.html</guid>
                <description>This is a guide on installing the latest ntop-ng (1.1) on Ubuntu 12.04. ntopng is the next generation version of the original ntop, a network traffic probe that shows the network usage, similar to what the popular top Unix command does. ntop is based on libpcap and it has been written in a portable way in order to virtually run on every Unix platform, MacOSX and on Win32 as well. ntopng users can use a a web browser to navigate through ntop (that acts as a web server) traffic information and get a dump of the network status. In the latter case, ntop can be seen as a simple RMON-like agent with an embedded web interface. This tutorial will walk you through the compilation and installation of ntopng from source.</description> 
                <pubDate>Fri, 29 Nov 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 29 Nov 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Pass the SSL Labs Test on Apache2 (Mitigate the CRIME and BEAST attack, Disable SSLv2 and Enable Perfect Forward Secrecy).</title> 
                <link>https://raymii.org/s/tutorials/Pass_the_SSL_Labs_Test_on_Apache2_(Mitigate_the_CRIME_and_BEAST_attack_-_Disable_SSLv2_-_Enable_PFS).html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Pass_the_SSL_Labs_Test_on_Apache2_(Mitigate_the_CRIME_and_BEAST_attack_-_Disable_SSLv2_-_Enable_PFS).html</guid>
                <description>This tutorial shows you how to get an A on the SSL Labs test using the Apache2 webserver. We do this by disabling CBC based ciphers to mitigate the BEAST attack, disabling SSL Compression to mitigate the CRIME attack, disable SSLv2 and below because of vulnerabilities in the protocol and we will enable Perfect Forward Secrecy when possible. This way we have a future proof ssl configuration and we get an A on the Qually Labs SSL Test.</description> 
                <pubDate>Sat, 20 Jul 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 20 Jul 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>NGINX: Proxy folders to different root</title> 
                <link>https://raymii.org/s/tutorials/NGINX_proxy_folder_to_different_root.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/NGINX_proxy_folder_to_different_root.html</guid>
                <description>This tutorial shows you how to have NGINX use different folders as different upstream proxy's, without the proxy also having the folder. For example, if you proxy www.example.com/wiki to server wiki.example.com, by default it will go to wiki.example.com/wiki. This tutorial has a rewrite rule to fix that.</description> 
                <pubDate>Thu, 04 Apr 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 04 Apr 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
        </channel>
    </rss>
    
    