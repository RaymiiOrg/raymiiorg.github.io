<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <?xml-stylesheet href="/s/inc/rss.xsl" type="text/xsl"?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag localization on Raymii.org</title> 
            <link>https://raymii.org/s/tags/localization.xml</link> 
            <description>RSS feed for tag localization on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/localization.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>Three ways to print booleans as 'True' or 'False' in C++</title> 
                <link>https://raymii.org/s/articles/Print_booleans_as_True_or_False_in_C++.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Print_booleans_as_True_or_False_in_C++.html</guid>
                <description>In this article I'll show you three ways to print a textual representation of a boolean in C++. Normally a bool is printed as either a `0` or a `1` by `std::cout`, but more often than not, if you're printing a `bool`, it's better to see `true/false`. Imagine reading through lines and lines of boring, repeating log files, how easy is it to miss a `0` in a sea of `1`'s? I've been there many times, wishing for more verbose logs.
I'll start with a simple `printf` with a ternary `if`  e.g. `(a ? this : that)` and continue on to `std::boolalpha`. The latter one is more flexible and allows you to set different values to be printed, for localization,  and can even be used to parse input streams. That means, the string `true false` results in two `booleans`, the first being, well, `true` and the latter, surprisingly, being `false`.</description> 
                <pubDate>Sun, 21 Mar 2021 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 21 Mar 2021 00:00:00 GMT</lastBuildDate>
            </item>
    
        </channel>
    </rss>
    
    