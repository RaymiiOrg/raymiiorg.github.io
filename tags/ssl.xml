<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <?xml-stylesheet href="/s/inc/rss.xsl" type="text/xsl"?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag ssl on Raymii.org</title> 
            <link>https://raymii.org/s/tags/ssl.xml</link> 
            <description>RSS feed for tag ssl on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/ssl.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>Which Root Certificates should you trust? Find out with CertInfo</title> 
                <link>https://raymii.org/s/software/Which_Root_Certificates_Should_You_Trust_CertInfo.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Which_Root_Certificates_Should_You_Trust_CertInfo.html</guid>
                <description> Which Root Certificates should you trust? Did you know that any certificate authority can issue a certificate for any website? There are protocols in place so that should not happen, but when (not if, when) they get hacked or coerced by their government, they can issue a certificate to intercept secure communication for any website.
I've made an open source program, [CertInfo](https://github.com/raymiiOrg/certinfo) that analyzes your browser history and queries all visited domains for their certificates. It presents a list of used root certificates (meaning, a website you visited was ultimately signed by that root CA) and a list of unused root certificates (meaning, no website in your analyzed history was signed by that root CA). </description> 
                <pubDate>Mon, 01 Jan 2024 09:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 15 Jan 2024 22:03:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>APT keeps complaining that the HTTPS certificate cannot be validated?</title> 
                <link>https://raymii.org/s/blog/Syncthing_apt_repo_keeps_complaining_HTTPS_certificate_could_not_be_validated.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/Syncthing_apt_repo_keeps_complaining_HTTPS_certificate_could_not_be_validated.html</guid>
                <description>Recently a few of my Ubuntu 20.04 and Debian 11 servers failed to run an `apt update` because it insisted that the HTTPS certificate for a repository could not be validated, while `curl` on the same system had no issues connecting. Join me on a deep dive into certificate validation and troubleshooting `apt`, digging into the C++ source code for `apt` and `GnuTLS` and in the end, it turned out to be my own fault due to permission on a folder. However, the error messages were totally unhelpful resolving the mysterious validation problem. This article was written over the period of a few days, chronologically during troubleshooting.</description> 
                <pubDate>Wed, 11 Jan 2023 05:31:00 GMT</pubDate>
                <lastBuildDate>Wed, 11 Jan 2023 05:31:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL Command Generator</title> 
                <link>https://raymii.org/s/software/OpenSSL_Command_Generator.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/OpenSSL_Command_Generator.html</guid>
                <description>This is a simple page with a form which you can use to generate OpenSSL commands to, for example, create a CSR or a self signed certificate.</description> 
                <pubDate>Sat, 08 Nov 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 15 Oct 2022 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL generate self signed certificate with SAN in one command (subject alternative name)</title> 
                <link>https://raymii.org/s/tutorials/OpenSSL_generate_self_signed_cert_with_Subject_Alternative_name_oneliner.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/OpenSSL_generate_self_signed_cert_with_Subject_Alternative_name_oneliner.html</guid>
                <description>This small one liner lets you generate an OpenSSL self signed certificate with both a common name and a [Subject Alternative Name (SAN)](https://en.wikipedia.org/wiki/Subject_Alternative_Name). Most guides online require you to specify a separate config file but this guide uses a bash trick [(process substitution)](https://web.archive.org/web/20221014191420/https://superuser.com/questions/1059781/what-exactly-is-in-bash-and-in-zsh) to pass such a config file to OpenSSL via the command line. If you are using OpenSSL 1.1.1 or higher, there now finally is a built in command line option which I'll also cover. </description> 
                <pubDate>Fri, 14 Oct 2022 22:02:00 GMT</pubDate>
                <lastBuildDate>Fri, 14 Oct 2022 22:02:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>I enforced the AGPL on my code, here's how it went</title> 
                <link>https://raymii.org/s/blog/I_enforced_the_AGPL_on_my_code_heres_how_it_went.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/I_enforced_the_AGPL_on_my_code_heres_how_it_went.html</guid>
                <description>Five years ago I made a website that allowed you to put in a few domains and get an email when the SSL certificate was about to expire. No ads, no fuss, just an easy way for people to keep tabs on their sites without setting up their own monitoring like Nagios. As with all of my software, I released it under the AGPL due to it being web based software.
Recently I found a company that hosted certificatemonitor, with some modifications (branding and a dutch tanslation), without any reference to its origin, no source code provided and no mention of the license.
In this article I'll talk about what I did to enforce the license and how it went. TL;DR, not as expected. The company responded timely and friendly, but did a half assed attempt (added a link to my site with 'Inspired By Remy' as the text), then after my complaints, took down the entire site.</description> 
                <pubDate>Tue, 20 Oct 2020 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 28 Feb 2022 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>C++ set up cpp-httplib with SSL support with cMake</title> 
                <link>https://raymii.org/s/tutorials/Cpp_set_up_cpp-httplib_with_ssl_support_with_cmake.md.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Cpp_set_up_cpp-httplib_with_ssl_support_with_cmake.md.html</guid>
                <description>For a small personal project that talks to a few JSON API's and does some data parsing I needed a header only C++ HTTP library. Header only because that is the simplest way to include it in my project, just copy and paste the file. I came across the project cpp-httplib, which fits my needs, does all the http methods, small, a few examples and it looks modern and has recent development commits. Setup and getting it working was easy, but as soon as I tried an https url, I got an exception ('https scheme is not supported.'). This guide shows you how to setup cpp-httplib for SSL support with cmake. It took me a bit longer than I wanted to set it up correctly, so why not save you the effort.</description> 
                <pubDate>Mon, 14 Dec 2020 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 14 Dec 2020 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL test TLSv1.3 connection and ciphersuites with s_client</title> 
                <link>https://raymii.org/s/tutorials/OpenSSL_test_TLSv1.3_connection_with_s_client.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/OpenSSL_test_TLSv1.3_connection_with_s_client.html</guid>
                <description>This guide shows you how to test a server's TLSv1.3 connection and use specific ciphersuites with the command line s_client client from the OpenSSL project. With OpenSSL 1.1.1 you can use TLSv1.3. This guide covers the installation of OpenSSL 1.1.1 on Ubuntu, testing the connection to a server  and specific ciphersuites. It also covers the big differences between TLSv1.3 and lower.</description> 
                <pubDate>Sun, 28 Apr 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 28 Apr 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Strong SSL Security on nginx</title> 
                <link>https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html</guid>
                <description>This tutorial shows you how to set up strong SSL security on the nginx webserver. We do this by updating OpenSSL to the latest version to mitigate attacks like Heartbleed, disabling SSL Compression and EXPORT ciphers to mitigate attacks like FREAK, CRIME and LogJAM, disabling SSLv3 and below because of vulnerabilities in the protocol and we will set up a strong ciphersuite that enables Forward Secrecy when possible. We also enable HSTS and HPKP. This way we have a strong and future proof ssl configuration and we get an A+ on the Qually Labs SSL Test.</description> 
                <pubDate>Sun, 14 Jun 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 27 Apr 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Strong SSL Security on lighttpd</title> 
                <link>https://raymii.org/s/tutorials/Strong_SSL_Security_On_lighttpd.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Strong_SSL_Security_On_lighttpd.html</guid>
                <description>This tutorial shows you how to set up strong SSL security on the lighttpd webserver. We do this by updating OpenSSL to the latest version to mitigate attacks like Heartbleed, disabling SSL Compression and EXPORT ciphers to mitigate attacks like FREAK, CRIME and LogJAM, disabling SSLv3 and below because of vulnerabilities in the protocol and we will set up a strong ciphersuite that enables Forward Secrecy when possible. We also enable HSTS and HPKP. This way we have a strong and future proof ssl configuration and we get an A+ on the Qually Labs SSL Test.</description> 
                <pubDate>Sun, 14 Jun 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 27 Apr 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Strong SSL Security on Apache2</title> 
                <link>https://raymii.org/s/tutorials/Strong_SSL_Security_On_Apache2.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Strong_SSL_Security_On_Apache2.html</guid>
                <description>This tutorial shows you how to set up strong SSL security on the Apache2 webserver. We do this by updating OpenSSL to the latest version to mitigate attacks like Heartbleed, disabling SSL Compression and EXPORT ciphers to mitigate attacks like FREAK, CRIME and LogJAM, disabling SSLv3 and below because of vulnerabilities in the protocol and we will set up a strong ciphersuite that enables Forward Secrecy when possible. We also enable HSTS and HPKP. This way we have a strong and future proof ssl configuration and we get an A+ on the Qually Labs SSL Test.</description> 
                <pubDate>Sun, 14 Jun 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 27 Apr 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL command line Root and Intermediate CA including OCSP, CRL and revocation</title> 
                <link>https://raymii.org/s/tutorials/OpenSSL_command_line_Root_and_Intermediate_CA_including_OCSP_CRL_and_revocation.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/OpenSSL_command_line_Root_and_Intermediate_CA_including_OCSP_CRL_and_revocation.html</guid>
                <description>These are quick and dirty notes on generating a certificate authority (CA), intermediate certificate authorities and end certificates using the OpenSSL command line tools. It includes OCSP, CRL and CA Issuer information and specific issue and expiry dates. We'll set up our own root CA. We'll use the root CA to generate an example intermediate CA. We'll use the intermediate CA to sign end user certificates.</description> 
                <pubDate>Tue, 03 Mar 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 17 Dec 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible - Only do something if another action changed</title> 
                <link>https://raymii.org/s/tutorials/Ansible_-_Only-do-something-if-another-action-changed.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_-_Only-do-something-if-another-action-changed.html</guid>
                <description>This Ansible tutorial shows you how execute actions only if another action has changed. For example, a playbook which downloads a remote key for package signing but only executes the apt-add command if the key has changed. Or a playbook which clones a git repository and only restarts a service if the git repository has changed.</description> 
                <pubDate>Sun, 22 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 15 Dec 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Encrypt and decrypt files to public keys via the OpenSSL Command Line</title> 
                <link>https://raymii.org/s/tutorials/Encrypt_and_decrypt_files_to_public_keys_via_the_OpenSSL_Command_Line.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Encrypt_and_decrypt_files_to_public_keys_via_the_OpenSSL_Command_Line.html</guid>
                <description>This small tutorial will show you how to use the openssl command line to encrypt and decrypt a file using a public key. We will first generate a random key, encrypt that random key against the public key of the other person and use that random key to encrypt the actual file with using symmetric encryption.</description> 
                <pubDate>Thu, 25 Oct 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 25 Oct 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>snap install mosaic, the first graphical webbrowser on Ubuntu</title> 
                <link>https://raymii.org/s/blog/snap_install_mosaic_the_first_graphical_webbrowser_on_Ubuntu.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/snap_install_mosaic_the_first_graphical_webbrowser_on_Ubuntu.html</guid>
                <description>On one of my favorite podcasts from Jupiter Broadcasting, either Linux Action News or Linux unplugged (252 I think, not sure), Allan Pope was talking about Snap packages and how there are now WinePacks, a snap with Wine and a single (Windows) application packaged. During the discussion he dropped that Mosaic, the first graphical web browser, is available as a snap package, for modern distributions. I installed it, after huge download (1.5 MB), playing around with it is quite fun. In this post I'll discuss how to install it, what works and what doens't in the modern age on Ubuntu 18.04</description> 
                <pubDate>Thu, 14 Jun 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 14 Jun 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Chrome 68 is depcrecating HPKP (HTTP Public Key Pinning)</title> 
                <link>https://raymii.org/s/blog/Chrome_68_is_deprecating_HPKP.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/Chrome_68_is_deprecating_HPKP.html</guid>
                <description>In 2014 I published an article on HPKP, http public key pinning. It allows a site operator to send a public key in an http header, forcing the browser to only connect when that header is found. It was ment to redice the risk of a compromised certificate authority (since any CA can create a certificate for any website). Quite secure, but it was often wrongly configured, forgotten until certificates expired and there were some security issues like a false pin. Late 2017 Google announced that HPKP would be removed in Chrome 68 and that version is released now, so HPKP is no longer supported. This post goes into the reasoning behind the removal, the possible replacement (Expect-CT) and how to remove HPKP from your site.</description> 
                <pubDate>Tue, 12 Jun 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 12 Jun 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>haproxy: restrict specific URLs to specific IP addresses</title> 
                <link>https://raymii.org/s/snippets/haproxy_restrict_specific_urls_to_specific_ip_addresses.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/haproxy_restrict_specific_urls_to_specific_ip_addresses.html</guid>
                <description>This snippet shows you how to use haproxy to restrict certain URLs to certain IP addresses. For example, to make sure your admin interface can only be accessed from your company IP address. It also includes an example to prompt for a password if the visitor is from a different network.</description> 
                <pubDate>Sun, 04 Mar 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 04 Mar 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Distributed load testing with Tsung</title> 
                <link>https://raymii.org/s/articles/Basic_Website_load_testing_with_Tsung.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Basic_Website_load_testing_with_Tsung.html</guid>
                <description>At $dayjob I manage a large OpenStack Cloud. Next to that I also build high-performance and redundant clusters for customers. Think multiple datacenters, haproxy, galera or postgres or mysql replication, drbd with nfs or glusterfs and all sorts of software that can (and sometimes cannot) be clustered (redis, rabbitmq etc.). Our customers deploy their application on there and when one or a few components fail, their application stays up. Hypervisors, disks, switches, routers, all can fail without actual service downtime. Next to building such clusters, we also monitor and manage them. When we build such a cluster (fully automated with Ansible) we do a basic load test. We do this not for benchmarking or application flow testing, but to optimize the cluster components. Simple things like the mpm workers or threads in Apache or more advanced topics like MySQL or DRBD. Optimization there depends on the specifications of the servers used and the load patterns. Tsung is a high-performance but simple to configure and use piece of software written in Erlang. Configuration is done in a simple readable XML file. Tsung can be run distributed as well for large setups. It has good reporting and a live web interface for status and reports during a test.</description> 
                <pubDate>Thu, 13 Apr 2017 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 13 Apr 2017 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible: access group vars for groups the current host is not a member of</title> 
                <link>https://raymii.org/s/tutorials/Ansible_access_other_groups_group_vars.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_access_other_groups_group_vars.html</guid>
                <description>This guide shows you how to access group variables for a group the current host is not a member of. In Ansible you can access other host variables using `hostvars['hostname']` but not group variables. The way described here is workable, but do I consider it a dirty hack. So why did I need this? I have a setup where ssl is offloaded by haproxy servers, but the virtual hosts and ssl configuration are defined in Apache servers. The loadbalancers and appservers are two different hostgroups, the ssl settings are in the appserver group_vars, which the hosts in the loadbalancer group need to access. The best way to do this is change the haproxy playbooks and configuration and define the certificates there, but in this specific case that wasn't a workable solution. Editing two yaml files (one for the appservers and one for the loadbalancers) was not an option in this situation.</description> 
                <pubDate>Fri, 27 Jan 2017 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 27 Jan 2017 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>HTTP Strict Transport Security for Apache, NGINX and Lighttpd</title> 
                <link>https://raymii.org/s/tutorials/HTTP_Strict_Transport_Security_for_Apache_NGINX_and_Lighttpd.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/HTTP_Strict_Transport_Security_for_Apache_NGINX_and_Lighttpd.html</guid>
                <description>HTTP Strict Transport Security (often abbreviated as HSTS) is a security feature that lets a web site tell browsers that it should only be communicated with using HTTPS, instead of using HTTP. This tutorial will show you how to set up HSTS in Apache2, NGINX and Lighttpd.</description> 
                <pubDate>Fri, 17 Jun 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 17 Jun 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Let's Encrypt with DirectAdmin, now built in!</title> 
                <link>https://raymii.org/s/articles/Lets_Encrypt_Directadmin_Now_Built_In.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Lets_Encrypt_Directadmin_Now_Built_In.html</guid>
                <description>Let's Encrypt is a new certificate authority, recognized by all major browsers. They make it a breeze to set up TLS certificates for your web server. And for free! Let's Encrypt is supported by major players like Mozilla, Akamai, Cisco, the EFF, the Internet Security Research Group and others. Let's Encrypt provides free, automatic and secure certificates so that every website can be secured with an SSL certificate. This article shows you how to setup Let's Encrypt with the DirectAdmin web control panel. DirectAdmin now supports Lets Encrypt natively since 1.50, so no more ssh fiddling, just via the control panel, for all the users on the server.</description> 
                <pubDate>Wed, 24 Feb 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 24 Feb 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Let's Encrypt with DirectAdmin or other Web Control Panels</title> 
                <link>https://raymii.org/s/articles/Lets_Encrypt_Directadmin.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Lets_Encrypt_Directadmin.html</guid>
                <description>Let's Encrypt is a new certificate authority, recognized by all major browsers. They make it a breeze to set up TLS certificates for your web server. And for free! Let's Encrypt is supported by major players like Mozilla, Akamai, Cisco, the EFF, the Internet Security Research Group and others. Let's Encrypt provides free, automatic and secure certificates so that every website can be secured with an SSL certificate. This article shows you how to setup Let's Encrypt with the DirectAdmin web control panel. The guide is generic, so it works for other controlpanels as well. For now it works with the beta, and required some linux knowledge and root access to the hosting server.</description> 
                <pubDate>Sun, 11 Jan 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 24 Feb 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Deborphan cleanup until no more orphaned packages left</title> 
                <link>https://raymii.org/s/snippets/Deborphan_cleanup_until_no_more_orphaned_packages_left.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/Deborphan_cleanup_until_no_more_orphaned_packages_left.html</guid>
                <description>Deborphan removes packages it thinks your system doesn't need anymore. It is a great tool for package cleanup and maintenance. Sometimes, after cleaning up the packages, it will find new packages that are orphaned (because you just cleaned up). This is a small script that cleans up with deborphan until there is nothing more to cleanup.</description> 
                <pubDate>Mon, 11 Jan 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 11 Jan 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Sign and verify text/files to public keys via the OpenSSL Command Line</title> 
                <link>https://raymii.org/s/tutorials/Sign_and_verify_text_files_to_public_keys_via_the_OpenSSL_Command_Line.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Sign_and_verify_text_files_to_public_keys_via_the_OpenSSL_Command_Line.html</guid>
                <description>This small guide will shows you how to use the OpenSSL Command Line to sign a file, and how to verify the signing of this file. You can do this to prove ownership of a key, or to prove that a file hasn't been modified since you signed it. This works both with small text files as well as huge photo's, documents or PDF files.</description> 
                <pubDate>Mon, 09 Nov 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 09 Nov 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Find all services using libssl to restart after an OpenSSL update</title> 
                <link>https://raymii.org/s/snippets/Find_all_services_using_libssl_to_restart_after_an_OpenSSL_update.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/Find_all_services_using_libssl_to_restart_after_an_OpenSSL_update.html</guid>
                <description>When you update OpenSSL, the software that currently has the ssl libraries loaded in memory do not automatically load the updated libraries. A full system reboot resolves that problem, but sometimes that is not possible. This command shows you all the software that has loaded the libraries, allowing you to restart only those services. If you don't restart or reload after an update, the software might still be vulnerable to issues that the update fixed.</description> 
                <pubDate>Tue, 14 Jul 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 14 Jul 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL: Manually verify a certificate against a CRL</title> 
                <link>https://raymii.org/s/articles/OpenSSL_manually_verify_a_certificate_against_a_CRL.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/OpenSSL_manually_verify_a_certificate_against_a_CRL.html</guid>
                <description>This article shows you how to manually verfify a certificate against a CRL. CRL stands for Certificate Revocation List and is one way to validate a certificate status. It is an alternative to the OCSP, Online Certificate Status Protocol.</description> 
                <pubDate>Sun, 22 Mar 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 22 Mar 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>How I got a valid SSL certificate for my ISP's main domain, xs4all.nl</title> 
                <link>https://raymii.org/s/blog/How_I_got_a_valid_SSL_certificate_for_my_ISPs_main_website.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/How_I_got_a_valid_SSL_certificate_for_my_ISPs_main_website.html</guid>
                <description>I got a valid SSL certificate for a domain that is not mine by creating an email alias. In this article I'll explain what happened, why that was possible and how we all can prevent this.</description> 
                <pubDate>Sat, 21 Mar 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 21 Mar 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>HTTP Public Key Pinning Extension HPKP for Apache, NGINX and Lighttpd</title> 
                <link>https://raymii.org/s/articles/HTTP_Public_Key_Pinning_Extension_HPKP.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/HTTP_Public_Key_Pinning_Extension_HPKP.html</guid>
                <description>Public Key Pinning means that a certificate chain must include a whitelisted public key. It ensures only whitelisted Certificate Authorities (CA) can sign certificates for `*.example.com`, and not any CA in your browser store. This article has background theory and configuration examples for Apache, Lighttpd and NGINX.</description> 
                <pubDate>Tue, 30 Dec 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 30 Dec 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL Decoder Script</title> 
                <link>https://raymii.org/s/software/OpenSSL_Decoder.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/OpenSSL_Decoder.html</guid>
                <description>This is a simple PHP script which decodes a certificate, csr or connection and displays the information it finds.</description> 
                <pubDate>Sat, 15 Nov 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 15 Nov 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Check and Fix SSL servers for SSLv3 connections or the Poodle CVE-2014-3566 bug</title> 
                <link>https://raymii.org/s/articles/Check_servers_for_the_Poodle_bug.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Check_servers_for_the_Poodle_bug.html</guid>
                <description>The POODLE CVE-2014-3566 bug is a new bug discovered by Google in the SSLv3 protocol. The fix is easy, disable support for SSLv3. See https://cipherli.st for a good list of SSL ciphers. You can use this check from the shell to check your servers. This command can easily be automated with other shell scripts. It also allows you to check your services without exposing them to an external checking website.</description> 
                <pubDate>Tue, 14 Oct 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 14 Oct 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>CentOS 5 CA Certificate Bundle Update</title> 
                <link>https://raymii.org/s/snippets/CentOS_5_CA_Certificate_Bundle_Update.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/CentOS_5_CA_Certificate_Bundle_Update.html</guid>
                <description>This simple snippet shows you how to update the root ca certificate bundle on CentOS 5. Some websites have certificates signed by authorities not in the default bundle and those websites will not work with tools like git, curl, wget or anything else that uses https.</description> 
                <pubDate>Sun, 06 Jul 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 06 Jul 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL: Manually verify a certificate against an OCSP</title> 
                <link>https://raymii.org/s/articles/OpenSSL_Manually_Verify_a_certificate_against_an_OCSP.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/OpenSSL_Manually_Verify_a_certificate_against_an_OCSP.html</guid>
                <description>This article shows you how to manually verfify a certificate against an OCSP server. OCSP stands for the Online Certificate Status Protocol and is one way to validate a certificate status. It is an alternative to the CRL, certificate revocation list. This article shows you how to manually validate a certificate against an OCSP server.</description> 
                <pubDate>Mon, 07 Apr 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 07 Apr 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL: Get all certificates from a website in plain text</title> 
                <link>https://raymii.org/s/articles/OpenSSL_-_Get_all_certificates_from_a_website_in_plain_text.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/OpenSSL_-_Get_all_certificates_from_a_website_in_plain_text.html</guid>
                <description>This article shows you how to get all certificates of a website in plain text. With a few OpenSSL commands one can get the website certificate plus intermediate certificates, however, if you feed that output to OpenSSL it only works on the first certificate. Using a bit of sed and bash magic we can feed all certificates one by one to OpenSSL.</description> 
                <pubDate>Tue, 04 Feb 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 04 Feb 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OCSP Stapling on Apache</title> 
                <link>https://raymii.org/s/tutorials/OCSP_Stapling_on_Apache2.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/OCSP_Stapling_on_Apache2.html</guid>
                <description>This tutorial shows you how to set up OCSP stapling on Apache. OCSP stapling is an enhancement to the standard OCSP protocol that delivers OCSP responses from the server with the certificate, eliminating the need for relying parties (web users) to check OCSP responses with the issuing CA. This has the effect of reducing bandwidth, improving perceived site performance, and increasing security for everyone involved in establishing the secure session.</description> 
                <pubDate>Mon, 03 Feb 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 03 Feb 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OCSP Stapling on nginx</title> 
                <link>https://raymii.org/s/tutorials/OCSP_Stapling_on_nginx.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/OCSP_Stapling_on_nginx.html</guid>
                <description>This tutorial shows you how to set up OCSP stapling on nginx. OCSP stapling is an enhancement to the standard OCSP protocol that delivers OCSP responses from the server with the certificate, eliminating the need for relying parties (web users) to check OCSP responses with the issuing CA. This has the effect of reducing bandwidth, improving perceived site performance, and increasing security for everyone involved in establishing the secure session.</description> 
                <pubDate>Mon, 03 Feb 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 03 Feb 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>haproxy: intercept all cookies and set secure attribute</title> 
                <link>https://raymii.org/s/tutorials/haproxy_intercept_all_cookies_and_set_secure_attribute.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/haproxy_intercept_all_cookies_and_set_secure_attribute.html</guid>
                <description>This snippet shows you how to use haproxy to set the secure attribute on cookies. You might have a backend application which is not able to set the secure attribute on cookies or for which haproxy does the ssl offloading. This simple frontend rspirep sets the secure attribute for all cookies.</description> 
                <pubDate>Sat, 01 Feb 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 01 Feb 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>haproxy: client side ssl certificates</title> 
                <link>https://raymii.org/s/tutorials/haproxy_client_side_ssl_certificates.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/haproxy_client_side_ssl_certificates.html</guid>
                <description>This tutorial shows you how to configure haproxy and client side ssl certificates. It features a few comprehensive examples.</description> 
                <pubDate>Wed, 18 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 18 Dec 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>haproxy: set specific ssl ciphers</title> 
                <link>https://raymii.org/s/snippets/haproxy_set_specific_ssl_ciphers.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/haproxy_set_specific_ssl_ciphers.html</guid>
                <description>This snippet shows you how to set specific ciphers for haproxy when using an ssl frontend.</description> 
                <pubDate>Thu, 12 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 12 Dec 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>haproxy: add strict transport security or any other http header</title> 
                <link>https://raymii.org/s/snippets/haproxy_add_strict_transport_security_or_any_other_http_header.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/haproxy_add_strict_transport_security_or_any_other_http_header.html</guid>
                <description>This snippet shows you how to add a header to a haproxy response, for example, the HSTS header (http strict transport security).</description> 
                <pubDate>Wed, 11 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 11 Dec 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>haproxy: ssl backends</title> 
                <link>https://raymii.org/s/snippets/haproxy_ssl_backends.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/haproxy_ssl_backends.html</guid>
                <description>This snippet shows you how to configure an ssl backend on haproxy 1.5 or higher.</description> 
                <pubDate>Tue, 10 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 10 Dec 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>haproxy: redirect to ssl or other website</title> 
                <link>https://raymii.org/s/snippets/haproxy_redirect_to_ssl_or_any_other_website.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/haproxy_redirect_to_ssl_or_any_other_website.html</guid>
                <description>This snippet shows you how to use haproxy to redirect http traffic to https or any other website</description> 
                <pubDate>Mon, 09 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 09 Dec 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL One liner to create self signed certificate</title> 
                <link>https://raymii.org/s/snippets/OpenSSL_One_line_to_create_self_signed_certificate.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/OpenSSL_One_line_to_create_self_signed_certificate.html</guid>
                <description>This is a one-liner for OpenSSL to generate a self signed certificate and private key.</description> 
                <pubDate>Wed, 09 Oct 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 09 Oct 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Diffie Hellman Key Exchange Dutch Notes and Example</title> 
                <link>https://raymii.org/s/articles/Diffie-Hellman-Key-Exchange-Dutch-Notes.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Diffie-Hellman-Key-Exchange-Dutch-Notes.html</guid>
                <description>This is a Dutch article on a Diffie Hellman Key Exchange, including an example. I wrote this to better understand the Diffie Hellman Key Exchange.</description> 
                <pubDate>Sun, 28 Jul 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 28 Jul 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL - Generate Psuedo Random Passwords</title> 
                <link>https://raymii.org/s/snippets/OpenSSL_Password_Generator.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/OpenSSL_Password_Generator.html</guid>
                <description>This a snippet to generate a psuedo random password fast via the command line with OpenSSL. It generates a number of random bytes, which can either be output raw, as Base64 or as HEX. The Base64 output is a good password most of the time.</description> 
                <pubDate>Fri, 26 Jul 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 26 Jul 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Stong SSL Security on Lighttpd</title> 
                <link>https://raymii.org/s/tutorials/Pass_the_SSL_Labs_Test_on_Lighttpd_(Mitigate_the_CRIME_and_BEAST_attack_-_Disable_SSLv2_-_Enable_PFS).html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Pass_the_SSL_Labs_Test_on_Lighttpd_(Mitigate_the_CRIME_and_BEAST_attack_-_Disable_SSLv2_-_Enable_PFS).html</guid>
                <description>This tutorial shows you how to set up strong SSL security on the lighttpd webserver. We do this by disabling SSL Compression to mitigate the CRIME attack, disable SSLv3 and below because of vulnerabilities in the protocol and we will set up a strong ciphersuite that enables Forward Secrecy when possible. This way we have a strong and future proof ssl configuration and we get an A on the Qually Labs SSL Test.</description> 
                <pubDate>Wed, 24 Jul 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 24 Jul 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Pass the SSL Labs Test on NGINX (Mitigate the CRIME and BEAST attack, Disable SSLv2 and Enable Perfect Forward Secrecy).</title> 
                <link>https://raymii.org/s/tutorials/Pass_the_SSL_Labs_Test_on_NGINX_(Mitigate_the_CRIME_and_BEAST_attack_-_Disable_SSLv2_-_Enable_PFS).html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Pass_the_SSL_Labs_Test_on_NGINX_(Mitigate_the_CRIME_and_BEAST_attack_-_Disable_SSLv2_-_Enable_PFS).html</guid>
                <description>This tutorial shows you how to get an A on the SSL Labs test using the NGINX webserver. We do this by disabling CBC based ciphers to mitigate the BEAST attack, disabling SSL Compression to mitigate the CRIME attack, disable SSLv2 and below because of vulnerabilities in the protocol and we will enable Perfect Forward Secrecy when possible. This way we have a future proof ssl configuration and we get an A on the Qually Labs SSL Test.</description> 
                <pubDate>Tue, 23 Jul 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 23 Jul 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Pass the SSL Labs Test on Apache2 (Mitigate the CRIME and BEAST attack, Disable SSLv2 and Enable Perfect Forward Secrecy).</title> 
                <link>https://raymii.org/s/tutorials/Pass_the_SSL_Labs_Test_on_Apache2_(Mitigate_the_CRIME_and_BEAST_attack_-_Disable_SSLv2_-_Enable_PFS).html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Pass_the_SSL_Labs_Test_on_Apache2_(Mitigate_the_CRIME_and_BEAST_attack_-_Disable_SSLv2_-_Enable_PFS).html</guid>
                <description>This tutorial shows you how to get an A on the SSL Labs test using the Apache2 webserver. We do this by disabling CBC based ciphers to mitigate the BEAST attack, disabling SSL Compression to mitigate the CRIME attack, disable SSLv2 and below because of vulnerabilities in the protocol and we will enable Perfect Forward Secrecy when possible. This way we have a future proof ssl configuration and we get an A on the Qually Labs SSL Test.</description> 
                <pubDate>Sat, 20 Jul 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 20 Jul 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Dogtag / Red Hat Certificate System reset admin pkiconsole password</title> 
                <link>https://raymii.org/s/tutorials/Dogtag_Red_Hat_Certificate_System_Reset_Admin_pkiconsole_Password.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Dogtag_Red_Hat_Certificate_System_Reset_Admin_pkiconsole_Password.html</guid>
                <description>This tutorial shows you how to reset the password for the PKI Console within the Red Hat Certificate System (Dogtag).</description> 
                <pubDate>Wed, 19 Jun 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 19 Jun 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ejabberd SSL Certificate</title> 
                <link>https://raymii.org/s/tutorials/Ejabberd_SSL_Certificate.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ejabberd_SSL_Certificate.html</guid>
                <description>This tutorial shows you how to set up an SSL Certificate for use with Ejabberd. It covers both the creation of the Certificate Signing Request, the preparing of the certificate for use with Ejabberd and the installation of the certificate.</description> 
                <pubDate>Thu, 13 Jun 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 13 Jun 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Nagios plugin to check an OCSP server</title> 
                <link>https://raymii.org/s/software/Nagios_plugin_to_check_OCSP.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Nagios_plugin_to_check_OCSP.html</guid>
                <description>This is a nagios plugin to check an OCSP server. You can give it a hard coded certificate or your own one. This is sent to the OCSP server and the response is then parsed to give the correct nagios result. It is targeted at administrators who have their own OCSP and need to know when it is not working.</description> 
                <pubDate>Mon, 06 May 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 06 May 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Nagios plugin to check CRL expiry in minutes</title> 
                <link>https://raymii.org/s/software/Nagios_plugin_to_check_CRL_expiry.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Nagios_plugin_to_check_CRL_expiry.html</guid>
                <description>This is a nagios plugin which you can use to check if a CRL (Certificate Revocation List, public list with revoked certificates) is still valid.</description> 
                <pubDate>Thu, 02 May 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 02 May 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL Generate CSR non-interactive</title> 
                <link>https://raymii.org/s/snippets/OpenSSL_generate_CSR_non-interactive.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/OpenSSL_generate_CSR_non-interactive.html</guid>
                <description>This is a short command to generate a CSR (certificate signing request) with openssl without being prompted for the values which go in the certificate's Subject field.</description> 
                <pubDate>Sat, 09 Feb 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 09 Feb 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL match certificate and private key</title> 
                <link>https://raymii.org/s/snippets/OpenSSL_match_certificate_with_private_key.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/OpenSSL_match_certificate_with_private_key.html</guid>
                <description>This check lets you know if a certificate matches a private key. Today I had to set up something but I kept getting ssl errors. Turns out, the certificate did not match the private key, because the private key file was damaged. This is how I found out.</description> 
                <pubDate>Sat, 09 Feb 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 09 Feb 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenSSL one liner to get expiry date from SSL Certificate of any website</title> 
                <link>https://raymii.org/s/snippets/OpenSSL_Get_Certificate_Expiry_Date_and_Other_Info.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/OpenSSL_Get_Certificate_Expiry_Date_and_Other_Info.html</guid>
                <description>This little openssl one liner gets the expiry date from a website's ssl certificate.</description> 
                <pubDate>Wed, 23 Jan 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 23 Jan 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
        </channel>
    </rss>
    
    