<?xml version="1.0" ?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag ansible on Raymii.org</title> 
            <link>https://raymii.org/s/tags/ansible.xml</link> 
            <description>RSS feed for tag ansible on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/ansible.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>Ansible - Only do action if on specific distribution (Debian, Ubuntu, CentOS or RHEL) or distribution version (ubuntu precise, ubuntu trusty)</title> 
                <link>https://raymii.org/s/tutorials/Ansible_-_Only_if_on_specific_distribution_or_distribution_version.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_-_Only_if_on_specific_distribution_or_distribution_version.html</guid>
                <description>This ansible playbook example helps you execute actions only if you are on a certain distribution. You might have a mixed environment with CentOS and Debian, when using ansible to execute actions on different servers you don't need to run yum on debian, or apt on CentOS. Some package names are different and such, so this helps you with a when statement to select a specific distribution. As a bonus, you also get a when for specific distribution versions, like Ubuntu precise (12.04 LTS) or Ubuntu trusty (14.04 LTS).</description> 
                <pubDate>Sun, 09 Nov 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 16 Dec 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible - Only do something if another action changed</title> 
                <link>https://raymii.org/s/tutorials/Ansible_-_Only-do-something-if-another-action-changed.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_-_Only-do-something-if-another-action-changed.html</guid>
                <description>This Ansible tutorial shows you how execute actions only if another action has changed. For example, a playbook which downloads a remote key for package signing but only executes the apt-add command if the key has changed. Or a playbook which clones a git repository and only restarts a service if the git repository has changed.</description> 
                <pubDate>Sun, 22 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 15 Dec 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible - Add an apt-repository on Debian and Ubuntu</title> 
                <link>https://raymii.org/s/tutorials/Ansible_-_Add_an_apt-repository_on_Debian_and_Ubuntu.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_-_Add_an_apt-repository_on_Debian_and_Ubuntu.html</guid>
                <description>This is a guide that shows you how to add an apt repository to Debian and Ubuntu using Ansible. It includes both the old way, when the apt modules only worked on Ubuntu, and the new way, now that the apt-modules also support Debian, plus some other tricks.</description> 
                <pubDate>Sun, 15 May 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 14 Dec 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>log_vcs - Ansible callback plugin that creates VCS (git) branches for every Ansible run</title> 
                <link>https://raymii.org/s/software/log_vcs_-_Ansible_Callback_plugin_that_creates_git_branches_for_every_ansible_run.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/log_vcs_-_Ansible_Callback_plugin_that_creates_git_branches_for_every_ansible_run.html</guid>
                <description>This Ansible callback plugin creates a VCS branch every time you run Ansible. If you ever need to go back to a certain state or environment, check out that branch and be sure nothing has changed. This is useful when you have multiple environments or multiple people deploying and continually develop your Ansible. When you often deploy to test / acceptance and less often to production, you can checkout the last branch that deployed to production if a hotfix or other maintenance is required, without having to search back in your commits and logs. I would recommend to develop infrastructure features in feature branches and have the master branch always deployable to production. However, reality learns that that is not always the case and this is a nice automatic way to have a fallback.</description> 
                <pubDate>Tue, 10 Jul 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 10 Jul 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible - add apt_key inline</title> 
                <link>https://raymii.org/s/snippets/Ansible_-_add_apt_key_inline.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/Ansible_-_add_apt_key_inline.html</guid>
                <description>Using the apt_key module one can add an APT key with ansible. You can get the key from a remote server or from a file, or just a key ID. I got the request to do some stuff on a machine which was quite rescricted (so no HKP protocol) and I was asked not to place to many files on the machine. The apt_key was needed but it could not be a file, so using a YAML Literal Block Scalar I was able to add the key inline in the playbook. Not the best way to do it, but one of the many ways Ansible allows it.</description> 
                <pubDate>Thu, 19 Apr 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 19 Apr 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible: access group vars for groups the current host is not a member of</title> 
                <link>https://raymii.org/s/tutorials/Ansible_access_other_groups_group_vars.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_access_other_groups_group_vars.html</guid>
                <description>This guide shows you how to access group variables for a group the current host is not a member of. In Ansible you can access other host variables using `hostvars['hostname']` but not group variables. The way described here is workable, but do I consider it a dirty hack. So why did I need this? I have a setup where ssl is offloaded by haproxy servers, but the virtual hosts and ssl configuration are defined in Apache servers. The loadbalancers and appservers are two different hostgroups, the ssl settings are in the appserver group_vars, which the hosts in the loadbalancer group need to access. The best way to do this is change the haproxy playbooks and configuration and define the certificates there, but in this specific case that wasn't a workable solution. Editing two yaml files (one for the appservers and one for the loadbalancers) was not an option in this situation.</description> 
                <pubDate>Fri, 27 Jan 2017 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 27 Jan 2017 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible - Create OpenStack servers with Ansible 2.0 and the os_server module and a dynamic inventory</title> 
                <link>https://raymii.org/s/tutorials/Ansible_-_create_OpenStack_servers_with_os_server.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_-_create_OpenStack_servers_with_os_server.html</guid>
                <description>I regularly deploy clusters and single servers on OpenStack with Ansible. However, Ansible 2.0 comes with new OpenStack modules my playbooks still used the old ones. I reserved some time to convert these playbooks to the new modules and ansible 2. This article shows a very simple example, it creates three servers in OpenStack and adds them to different hostgroups based on variables. For example, to create one loadbalancer and two appservers and run specific playbooks on those hosts based on their role.</description> 
                <pubDate>Sat, 10 Sep 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 10 Sep 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible - create playbooks and role file and folder structure</title> 
                <link>https://raymii.org/s/snippets/Ansible_-_create_playbooks_and_role_file_and_folder_structure.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/snippets/Ansible_-_create_playbooks_and_role_file_and_folder_structure.html</guid>
                <description>Because I always forget which folders and files go into a playbook folder.</description> 
                <pubDate>Thu, 08 Sep 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 08 Sep 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible playbook for GoAccess Log Analyzer</title> 
                <link>https://raymii.org/s/software/Ansible_role_for_GoAccess_Log_Analyzer.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Ansible_role_for_GoAccess_Log_Analyzer.html</guid>
                <description>This is a small Ansible playbook to deploy the GoAccess log analyzer on Debian based systems. Next to Piwik, I use goaccess myself to get better insights in who and what visits my servers. This role is ment to be included in your webserver playbooks.</description> 
                <pubDate>Sun, 17 Jan 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 17 Jan 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible - Only if a file exists or does not exist</title> 
                <link>https://raymii.org/s/tutorials/Ansible_-_Only_if_a_file_exists_or_does_not_exist.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_-_Only_if_a_file_exists_or_does_not_exist.html</guid>
                <description>This Ansible playbook example helps you execute actions only if a file exists or does not exist. If you for example have a command you need to run to generate a certificate (or Diffie Hellman parameters for nginx) you only want to do that once. The command itself is not convergent so it will run with every ansible run. However, the command creates a file and Ansible is able to check if that file exists. If the file exists, it will not execute the action. The same goes for checking if a file does exist and only executing the action if it exists. (The action you want to do will remove that file).</description> 
                <pubDate>Sat, 27 Dec 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 27 Dec 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Clear Uncluttered SSH client config with Ansible</title> 
                <link>https://raymii.org/s/blog/Clear_Uncluttered_SSH_client_config_with_Ansible.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/blog/Clear_Uncluttered_SSH_client_config_with_Ansible.html</guid>
                <description>Openssh allows you to configure parameters like username, port, proxycommand, key and more in the ~/.ssh/config file. If you have many servers this file can become cluttered and maintaining it can become a not so nice task. This simple guide shows you how you can use a conf.d directory with seperate smaller files which gets converted to the big config file by Ansible</description> 
                <pubDate>Sun, 21 Dec 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 21 Dec 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible - Only if host is also in other hostgroup</title> 
                <link>https://raymii.org/s/tutorials/Ansible_-_Only_if_host_is_also_in_other_hostgroup.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_-_Only_if_host_is_also_in_other_hostgroup.html</guid>
                <description>This snippet helps you execute actions only when a host is in another hostgroup in Ansible. For example, you might deploy munin-node via ansible, but you only want your apache and NGINX plugins deployed on your webservers, not on your database servers.</description> 
                <pubDate>Tue, 25 Nov 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 25 Nov 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Patch Shellshock)with Ansible</title> 
                <link>https://raymii.org/s/articles/Patch_CVE-2014-6271_Shellshock_with_Ansible.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Patch_CVE-2014-6271_Shellshock_with_Ansible.html</guid>
                <description>This is a simple ansible playbook to patch Debian, CentOS, Ubuntu and derivatives for the Shellshock vulnerability (CVE-2014-6271).</description> 
                <pubDate>Wed, 24 Sep 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 24 Sep 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Building HA Clusters with Ansible and Openstack</title> 
                <link>https://raymii.org/s/articles/Building_HA_Clusters_With_Ansible_and_Openstack.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/articles/Building_HA_Clusters_With_Ansible_and_Openstack.html</guid>
                <description>This is an extensive guide on building high available clusters with Ansible and Openstack. We'll build a Highly available cluster consisting out of two load balancers, two database servers and two application servers running a simple wordpress site. This is all done with Ansible, the cluster nodes are all on Openstack. Ansible is a super awesome orchestration tool and Openstack is a big buzzword filled software suite for datacenter virtualization.</description> 
                <pubDate>Fri, 25 Jul 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 25 Jul 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible Inventory from VMWare</title> 
                <link>https://raymii.org/s/software/Ansible__Dynamic_Inventory_From_VMware_vCenter.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/software/Ansible__Dynamic_Inventory_From_VMware_vCenter.html</guid>
                <description>This is a simple script which lets you use VMWare vCenter as a dynamic inventory for Ansible.</description> 
                <pubDate>Mon, 06 Jan 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 06 Jan 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible - Playbook Testing</title> 
                <link>https://raymii.org/s/tutorials/Ansible_-_Playbook_Testing.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_-_Playbook_Testing.html</guid>
                <description>This Ansible article shows you how to run a basic test on your playbooks to check if their syntax is correct. It shows methods for both Ansible 1.3 and 1.4. When you get more complicated Ansible playbooks you sometimes have syntax (YAML) errors in them. It sometimes can take a while before those errors show up because they are lower in a playbook. By running the syntax check you make sure this won't happen.</description> 
                <pubDate>Sun, 29 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 29 Dec 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible - Sudo sometimes</title> 
                <link>https://raymii.org/s/tutorials/Ansible_-_Better_sudo_control.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_-_Better_sudo_control.html</guid>
                <description>This Ansible tutorial shows you how run some actions via sudo and some not. It also shows you how to run an entire role via sudo or not.</description> 
                <pubDate>Sat, 21 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 21 Dec 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Uninstall and Remove OSSEC</title> 
                <link>https://raymii.org/s/tutorials/Uninstall_OSSEC.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Uninstall_OSSEC.html</guid>
                <description>This small tutorial shows you how to remove an OSSEC installation. OSSEC is installed from source (via a script), so you have to remove all the things manually instead of with your package manager.</description> 
                <pubDate>Tue, 01 Oct 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 01 Oct 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible - sudoers safety and sanity checking in playbook</title> 
                <link>https://raymii.org/s/tutorials/Ansible_-_Sudo_Safety_and_Sanity_Checks.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_-_Sudo_Safety_and_Sanity_Checks.html</guid>
                <description>Using Ansible to manage the /etc/sudoers file is fine, except when you have a syntax error in your template. This method helps you to only deploy a correct sudoers file.</description> 
                <pubDate>Sat, 23 Mar 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 23 Mar 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Ansible - pure ssh based configuration management and deployment</title> 
                <link>https://raymii.org/s/tutorials/Ansible_Deployment_Framework.html?utm_medium=rss&amp;utm_source=raymii&amp;utm_campaign=tagrss</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_Deployment_Framework.html</guid>
                <description>This tutorial will get you started with Ansible. Ansible is a radically simple model-driven configuration management, deployment, and command execution framework. Other tools in this space have been too complicated for too long, require too much bootstrapping, and have too much learning curve. By comparison, Ansible is dead simple and painless to extend. Puppet and Chef have about 60k lines of code. Ansibles core is a little over 2000 lines.</description> 
                <pubDate>Sat, 09 Mar 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 09 Mar 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
        </channel>
    </rss>
    
    